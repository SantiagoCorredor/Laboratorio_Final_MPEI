

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Nov 27 12:03:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.32
    35                           ; Generated 02/02/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0008                     _PORTDbits	set	8
   190  0008                     _PORTD	set	8
   191  001A                     _RCREG	set	26
   192  0019                     _TXREG	set	25
   193  000C                     _PIR1bits	set	12
   194  0018                     _RCSTA	set	24
   195  0006                     _PORTB	set	6
   196  0007                     _PORTCbits	set	7
   197  0013                     _SSPBUF	set	19
   198  0014                     _SSPCON	set	20
   199  0063                     _SSPIF	set	99
   200  0098                     _TXSTAbits	set	152
   201  0088                     _TRISD	set	136
   202  0086                     _TRISB	set	134
   203  0087                     _TRISC	set	135
   204  0099                     _SPBRG	set	153
   205  0098                     _TXSTA	set	152
   206  0094                     _SSPSTAT	set	148
   207  0093                     _SSPADD	set	147
   208  0087                     _TRISCbits	set	135
   209  048B                     _RCEN	set	1163
   210  048E                     _ACKSTAT	set	1166
   211  048C                     _ACKEN	set	1164
   212  048D                     _ACKDT	set	1165
   213  048A                     _PEN	set	1162
   214  0489                     _RSEN	set	1161
   215  0488                     _SEN	set	1160
   216                           
   217                           	psect	strings
   218  0003                     __pstrings:
   219  0003                     stringtab:
   220  0003                     __stringtab:
   221  0003                     stringcode:	
   222                           ;	String table - string pointers are 1 byte each
   223                           
   224  0003                     stringdir:
   225  0003  3000               	movlw	high stringdir
   226  0004  008A               	movwf	10
   227  0005  0804               	movf	4,w
   228  0006  0A84               	incf	4,f
   229  0007  0782               	addwf	2,f
   230  0008                     __stringbase:
   231  0008  3400               	retlw	0
   232  0009                     __end_of__stringtab:
   233  0009                     STR_2:
   234  0009  3445               	retlw	69	;'E'
   235  000A  3473               	retlw	115	;'s'
   236  000B  3463               	retlw	99	;'c'
   237  000C  3472               	retlw	114	;'r'
   238  000D  3469               	retlw	105	;'i'
   239  000E  3462               	retlw	98	;'b'
   240  000F  3461               	retlw	97	;'a'
   241  0010  3420               	retlw	32	;' '
   242  0011  346C               	retlw	108	;'l'
   243  0012  346F               	retlw	111	;'o'
   244  0013  3473               	retlw	115	;'s'
   245  0014  3420               	retlw	32	;' '
   246  0015  346D               	retlw	109	;'m'
   247  0016  3469               	retlw	105	;'i'
   248  0017  346E               	retlw	110	;'n'
   249  0018  3475               	retlw	117	;'u'
   250  0019  3474               	retlw	116	;'t'
   251  001A  346F               	retlw	111	;'o'
   252  001B  3473               	retlw	115	;'s'
   253  001C  343A               	retlw	58	;':'
   254  001D  3400               	retlw	0
   255  001E                     STR_7:
   256  001E  3420               	retlw	32	;' '
   257  001F  342B               	retlw	43	;'+'
   258  0020  342B               	retlw	43	;'+'
   259  0021  342B               	retlw	43	;'+'
   260  0022  3420               	retlw	32	;' '
   261  0023  3452               	retlw	82	;'R'
   262  0024  3454               	retlw	84	;'T'
   263  0025  3443               	retlw	67	;'C'
   264  0026  3420               	retlw	32	;' '
   265  0027  3444               	retlw	68	;'D'
   266  0028  3453               	retlw	83	;'S'
   267  0029  3431               	retlw	49	;'1'
   268  002A  3433               	retlw	51	;'3'
   269  002B  3430               	retlw	48	;'0'
   270  002C  3437               	retlw	55	;'7'
   271  002D  3420               	retlw	32	;' '
   272  002E  342B               	retlw	43	;'+'
   273  002F  342B               	retlw	43	;'+'
   274  0030  342B               	retlw	43	;'+'
   275  0031  3400               	retlw	0
   276  0032                     STR_8:
   277  0032  344C               	retlw	76	;'L'
   278  0033  3465               	retlw	101	;'e'
   279  0034  3463               	retlw	99	;'c'
   280  0035  3474               	retlw	116	;'t'
   281  0036  3475               	retlw	117	;'u'
   282  0037  3472               	retlw	114	;'r'
   283  0038  3461               	retlw	97	;'a'
   284  0039  3420               	retlw	32	;' '
   285  003A  3479               	retlw	121	;'y'
   286  003B  3420               	retlw	32	;' '
   287  003C  3465               	retlw	101	;'e'
   288  003D  3473               	retlw	115	;'s'
   289  003E  3463               	retlw	99	;'c'
   290  003F  3472               	retlw	114	;'r'
   291  0040  3469               	retlw	105	;'i'
   292  0041  3474               	retlw	116	;'t'
   293  0042  3475               	retlw	117	;'u'
   294  0043  3472               	retlw	114	;'r'
   295  0044  3461               	retlw	97	;'a'
   296  0045  3400               	retlw	0
   297  0046                     STR_9:
   298  0046  3444               	retlw	68	;'D'
   299  0047  3445               	retlw	69	;'E'
   300  0048  344C               	retlw	76	;'L'
   301  0049  3420               	retlw	32	;' '
   302  004A  344D               	retlw	77	;'M'
   303  004B  344F               	retlw	79	;'O'
   304  004C  3444               	retlw	68	;'D'
   305  004D  3455               	retlw	85	;'U'
   306  004E  344C               	retlw	76	;'L'
   307  004F  344F               	retlw	79	;'O'
   308  0050  3420               	retlw	32	;' '
   309  0051  3452               	retlw	82	;'R'
   310  0052  3454               	retlw	84	;'T'
   311  0053  3443               	retlw	67	;'C'
   312  0054  343A               	retlw	58	;':'
   313  0055  342E               	retlw	46	;'.'
   314  0056  342E               	retlw	46	;'.'
   315  0057  342E               	retlw	46	;'.'
   316  0058  3400               	retlw	0
   317  0059                     STR_6:
   318  0059  344D               	retlw	77	;'M'
   319  005A  3450               	retlw	80	;'P'
   320  005B  3445               	retlw	69	;'E'
   321  005C  3449               	retlw	73	;'I'
   322  005D  3420               	retlw	32	;' '
   323  005E  3432               	retlw	50	;'2'
   324  005F  3430               	retlw	48	;'0'
   325  0060  3432               	retlw	50	;'2'
   326  0061  3430               	retlw	48	;'0'
   327  0062  342D               	retlw	45	;'-'
   328  0063  3469               	retlw	105	;'i'
   329  0064  3420               	retlw	32	;' '
   330  0065  342B               	retlw	43	;'+'
   331  0066  3420               	retlw	32	;' '
   332  0067  3449               	retlw	73	;'I'
   333  0068  3432               	retlw	50	;'2'
   334  0069  3443               	retlw	67	;'C'
   335  006A  3400               	retlw	0
   336  006B                     STR_5:
   337  006B  3454               	retlw	84	;'T'
   338  006C  3465               	retlw	101	;'e'
   339  006D  3463               	retlw	99	;'c'
   340  006E  346C               	retlw	108	;'l'
   341  006F  3465               	retlw	101	;'e'
   342  0070  3465               	retlw	101	;'e'
   343  0071  3420               	retlw	32	;' '
   344  0072  3461               	retlw	97	;'a'
   345  0073  343F               	retlw	63	;'?'
   346  0074  346F               	retlw	111	;'o'
   347  0075  3420               	retlw	32	;' '
   348  0076  3428               	retlw	40	;'('
   349  0077  3441               	retlw	65	;'A'
   350  0078  3441               	retlw	65	;'A'
   351  0079  3429               	retlw	41	;')'
   352  007A  343A               	retlw	58	;':'
   353  007B  3400               	retlw	0
   354  007C                     STR_3:
   355  007C  3454               	retlw	84	;'T'
   356  007D  3465               	retlw	101	;'e'
   357  007E  3463               	retlw	99	;'c'
   358  007F  346C               	retlw	108	;'l'
   359  0080  3465               	retlw	101	;'e'
   360  0081  3465               	retlw	101	;'e'
   361  0082  3420               	retlw	32	;' '
   362  0083  3464               	retlw	100	;'d'
   363  0084  343F               	retlw	63	;'?'
   364  0085  3461               	retlw	97	;'a'
   365  0086  3420               	retlw	32	;' '
   366  0087  3428               	retlw	40	;'('
   367  0088  3444               	retlw	68	;'D'
   368  0089  3444               	retlw	68	;'D'
   369  008A  3429               	retlw	41	;')'
   370  008B  343A               	retlw	58	;':'
   371  008C  3400               	retlw	0
   372  008D                     STR_4:
   373  008D  3454               	retlw	84	;'T'
   374  008E  3465               	retlw	101	;'e'
   375  008F  3463               	retlw	99	;'c'
   376  0090  346C               	retlw	108	;'l'
   377  0091  3465               	retlw	101	;'e'
   378  0092  3465               	retlw	101	;'e'
   379  0093  3420               	retlw	32	;' '
   380  0094  346D               	retlw	109	;'m'
   381  0095  3465               	retlw	101	;'e'
   382  0096  3473               	retlw	115	;'s'
   383  0097  3420               	retlw	32	;' '
   384  0098  3428               	retlw	40	;'('
   385  0099  344D               	retlw	77	;'M'
   386  009A  344D               	retlw	77	;'M'
   387  009B  3429               	retlw	41	;')'
   388  009C  343A               	retlw	58	;':'
   389  009D  3400               	retlw	0
   390  009E                     STR_1:
   391  009E  3445               	retlw	69	;'E'
   392  009F  3473               	retlw	115	;'s'
   393  00A0  3463               	retlw	99	;'c'
   394  00A1  3472               	retlw	114	;'r'
   395  00A2  3469               	retlw	105	;'i'
   396  00A3  3462               	retlw	98	;'b'
   397  00A4  3461               	retlw	97	;'a'
   398  00A5  3420               	retlw	32	;' '
   399  00A6  346C               	retlw	108	;'l'
   400  00A7  3461               	retlw	97	;'a'
   401  00A8  3420               	retlw	32	;' '
   402  00A9  3448               	retlw	72	;'H'
   403  00AA  346F               	retlw	111	;'o'
   404  00AB  3472               	retlw	114	;'r'
   405  00AC  3461               	retlw	97	;'a'
   406  00AD  343A               	retlw	58	;':'
   407  00AE  3400               	retlw	0
   408  00AF                     STR_11:
   409  00AF  3446               	retlw	70	;'F'
   410  00B0  3445               	retlw	69	;'E'
   411  00B1  3442               	retlw	66	;'B'
   412  00B2  3400               	retlw	0
   413  00B3                     STR_21:
   414  00B3  3444               	retlw	68	;'D'
   415  00B4  3449               	retlw	73	;'I'
   416  00B5  3443               	retlw	67	;'C'
   417  00B6  3400               	retlw	0
   418  00B7                     STR_10:
   419  00B7  3445               	retlw	69	;'E'
   420  00B8  344E               	retlw	78	;'N'
   421  00B9  3445               	retlw	69	;'E'
   422  00BA  3400               	retlw	0
   423  00BB                     STR_16:
   424  00BB  344A               	retlw	74	;'J'
   425  00BC  3455               	retlw	85	;'U'
   426  00BD  344C               	retlw	76	;'L'
   427  00BE  3400               	retlw	0
   428  00BF                     STR_15:
   429  00BF  344A               	retlw	74	;'J'
   430  00C0  3455               	retlw	85	;'U'
   431  00C1  344E               	retlw	78	;'N'
   432  00C2  3400               	retlw	0
   433  00C3                     STR_17:
   434  00C3  3441               	retlw	65	;'A'
   435  00C4  3447               	retlw	71	;'G'
   436  00C5  344F               	retlw	79	;'O'
   437  00C6  3400               	retlw	0
   438  00C7                     STR_18:
   439  00C7  3453               	retlw	83	;'S'
   440  00C8  3445               	retlw	69	;'E'
   441  00C9  3450               	retlw	80	;'P'
   442  00CA  3400               	retlw	0
   443  00CB                     STR_12:
   444  00CB  344D               	retlw	77	;'M'
   445  00CC  3441               	retlw	65	;'A'
   446  00CD  3452               	retlw	82	;'R'
   447  00CE  3400               	retlw	0
   448  00CF                     STR_13:
   449  00CF  3441               	retlw	65	;'A'
   450  00D0  3442               	retlw	66	;'B'
   451  00D1  3452               	retlw	82	;'R'
   452  00D2  3400               	retlw	0
   453  00D3                     STR_19:
   454  00D3  344F               	retlw	79	;'O'
   455  00D4  3443               	retlw	67	;'C'
   456  00D5  3454               	retlw	84	;'T'
   457  00D6  3400               	retlw	0
   458  00D7                     STR_20:
   459  00D7  344E               	retlw	78	;'N'
   460  00D8  344F               	retlw	79	;'O'
   461  00D9  3456               	retlw	86	;'V'
   462  00DA  3400               	retlw	0
   463  00DB                     STR_14:
   464  00DB  344D               	retlw	77	;'M'
   465  00DC  3441               	retlw	65	;'A'
   466  00DD  3459               	retlw	89	;'Y'
   467  00DE  3400               	retlw	0
   468                           
   469                           	psect	cinit
   470  07F5                     start_initialization:	
   471                           ; #config settings
   472                           
   473  07F5                     __initialization:
   474                           
   475                           ; Clear objects allocated to COMMON
   476  07F5  01FD               	clrf	__pbssCOMMON& (0+127)
   477                           
   478                           ; Clear objects allocated to BANK0
   479  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   480  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   481  07F8  01AC               	clrf	__pbssBANK0& (0+127)
   482  07F9  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   483  07FA  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   484  07FB  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   485  07FC                     end_of_initialization:	
   486                           ;End of C runtime variable initialization code
   487                           
   488  07FC                     __end_of__initialization:
   489  07FC  0183               	clrf	3
   490  07FD  120A  118A  2DCF   	ljmp	_main	;jump to C main() function
   491                           
   492                           	psect	bssCOMMON
   493  007D                     __pbssCOMMON:
   494  007D                     _Temp:
   495  007D                     	ds	1
   496                           
   497                           	psect	bssBANK0
   498  002C                     __pbssBANK0:
   499  002C                     _pRTCArray:
   500  002C                     	ds	4
   501                           
   502                           	psect	cstackCOMMON
   503  0070                     __pcstackCOMMON:
   504  0070                     ?_InitI2C:
   505  0070                     ??_InitI2C:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_I2C_Start:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ??_I2C_Start:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_I2C_ReStart:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ??_I2C_ReStart:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_I2C_Stop:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ??_I2C_Stop:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_I2C_Send_NACK:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_I2C_Send_NACK:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_I2C_Write_Byte:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ??_I2C_Write_Byte:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_I2C_Read_Byte:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ??_I2C_Read_Byte:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_Read_Byte_From_DS1307_RTC:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_SEND_CMD:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ??_SEND_CMD:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_SEND_CHAR:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ??_SEND_CHAR:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_LCD_Init:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_EscribeCadenaLCD:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_UART_Init:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??_UART_Init:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_MCU_Init:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ??_MCU_Init:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_SEND_Tx:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_SEND_Tx:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_MSG_Term:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_RecibeHHMM:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_TECLADO:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ??_TECLADO:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_LEA_FECHA:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_main:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     I2C_Write_Byte@Byte:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     SEND_Tx@dato:	
   605                           ; 1 bytes @ 0x0
   606                           
   607                           
   608                           ; 1 bytes @ 0x0
   609  0070                     	ds	1
   610  0071                     ?_Write_Byte_To_DS1307_RTC:
   611  0071                     ??_Read_Byte_From_DS1307_RTC:	
   612                           ; 1 bytes @ 0x1
   613                           
   614  0071                     ??_MSG_Term:	
   615                           ; 1 bytes @ 0x1
   616                           
   617  0071                     Write_Byte_To_DS1307_RTC@DataByte:	
   618                           ; 1 bytes @ 0x1
   619                           
   620  0071                     SEND_CHAR@dato:	
   621                           ; 1 bytes @ 0x1
   622                           
   623                           
   624                           ; 1 bytes @ 0x1
   625  0071                     	ds	1
   626  0072                     ??_Write_Byte_To_DS1307_RTC:
   627  0072                     ??_EscribeCadenaLCD:	
   628                           ; 1 bytes @ 0x2
   629                           
   630  0072                     Write_Byte_To_DS1307_RTC@Address:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0072                     Read_Byte_From_DS1307_RTC@Address:	
   634                           ; 1 bytes @ 0x2
   635                           
   636  0072                     SEND_CMD@dato:	
   637                           ; 1 bytes @ 0x2
   638                           
   639  0072                     MSG_Term@s:	
   640                           ; 1 bytes @ 0x2
   641                           
   642  0072                     TECLADO@VPTOD:	
   643                           ; 1 bytes @ 0x2
   644                           
   645                           
   646                           ; 1 bytes @ 0x2
   647  0072                     	ds	1
   648  0073                     ??_LCD_Init:
   649  0073                     ??_RecibeHHMM:	
   650                           ; 1 bytes @ 0x3
   651                           
   652  0073                     Read_Byte_From_DS1307_RTC@Byte:	
   653                           ; 1 bytes @ 0x3
   654                           
   655  0073                     EscribeCadenaLCD@s:	
   656                           ; 1 bytes @ 0x3
   657                           
   658  0073                     TECLADO@Tecla:	
   659                           ; 1 bytes @ 0x3
   660                           
   661                           
   662                           ; 1 bytes @ 0x3
   663  0073                     	ds	1
   664  0074                     ??_LEA_FECHA:
   665                           
   666                           ; 1 bytes @ 0x4
   667  0074                     	ds	1
   668  0075                     RecibeHHMM@Datos:
   669                           
   670                           ; 4 bytes @ 0x5
   671  0075                     	ds	4
   672  0079                     RecibeHHMM@Car:
   673                           
   674                           ; 1 bytes @ 0x9
   675  0079                     	ds	1
   676  007A                     ??_main:
   677                           
   678                           ; 1 bytes @ 0xA
   679  007A                     	ds	3
   680                           
   681                           	psect	cstackBANK0
   682  0020                     __pcstackBANK0:
   683  0020                     LEA_FECHA@DIA:
   684                           
   685                           ; 1 bytes @ 0x0
   686  0020                     	ds	1
   687  0021                     LEA_FECHA@MES:
   688                           
   689                           ; 1 bytes @ 0x1
   690  0021                     	ds	1
   691  0022                     LEA_FECHA@ANNO:
   692                           
   693                           ; 1 bytes @ 0x2
   694  0022                     	ds	1
   695  0023                     LEA_FECHA@fecha:
   696                           
   697                           ; 6 bytes @ 0x3
   698  0023                     	ds	6
   699  0029                     LEA_FECHA@car:
   700                           
   701                           ; 1 bytes @ 0x9
   702  0029                     	ds	1
   703  002A                     main@a:
   704                           
   705                           ; 1 bytes @ 0xA
   706  002A                     	ds	1
   707  002B                     main@Car:
   708                           
   709                           ; 1 bytes @ 0xB
   710  002B                     	ds	1
   711                           
   712                           	psect	maintext
   713  05CF                     __pmaintext:	
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 349 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  a               1   10[BANK0 ] unsigned char 
   724 ;;  Car             1   11[BANK0 ] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       2       0       0       0
   736 ;;      Temps:          3       0       0       0       0
   737 ;;      Totals:         3       2       0       0       0
   738 ;;Total ram usage:        5 bytes
   739 ;; Hardware stack levels required when called: 3
   740 ;; This function calls:
   741 ;;		_EscribeCadenaLCD
   742 ;;		_InitI2C
   743 ;;		_LCD_Init
   744 ;;		_LEA_FECHA
   745 ;;		_MCU_Init
   746 ;;		_Read_Byte_From_DS1307_RTC
   747 ;;		_RecibeHHMM
   748 ;;		_SEND_CHAR
   749 ;;		_SEND_CMD
   750 ;;		_TECLADO
   751 ;;		_UART_Init
   752 ;; This function is called by:
   753 ;;		Startup code after reset
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _main
   759  05CF                     _main:
   760  05CF                     l2051:	
   761                           ;incstack = 0
   762                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   763                           
   764                           
   765                           ;main.c: 351:     char Car;;main.c: 352:     MCU_Init();
   766  05CF  120A  118A  2185  120A  118A  	fcall	_MCU_Init
   767                           
   768                           ;main.c: 353:     LCD_Init();
   769  05D4  120A  118A  223E  120A  118A  	fcall	_LCD_Init
   770                           
   771                           ;main.c: 354:     UART_Init();
   772  05D9  120A  118A  21FB  120A  118A  	fcall	_UART_Init
   773                           
   774                           ;main.c: 355:     InitI2C();
   775  05DE  120A  118A  21CD  120A  118A  	fcall	_InitI2C
   776  05E3                     l2053:
   777                           
   778                           ;main.c: 357:     EscribeCadenaLCD("MPEI 2020-i + I2C");
   779  05E3  3051               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   780  05E4  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
   781  05E9                     l2055:
   782                           
   783                           ;main.c: 359:     SEND_CMD(0x80 + 64);
   784  05E9  30C0               	movlw	192
   785  05EA  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
   786                           
   787                           ;main.c: 360:     EscribeCadenaLCD(" +++ RTC DS1307 +++");
   788  05EF  3016               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   789  05F0  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
   790  05F5                     l2057:
   791                           
   792                           ;main.c: 362:     SEND_CMD(0x80+20);
   793  05F5  3094               	movlw	148
   794  05F6  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
   795  05FB                     l2059:
   796                           
   797                           ;main.c: 363:     EscribeCadenaLCD("Lectura y escritura");
   798  05FB  302A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   799  05FC  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
   800                           
   801                           ;main.c: 365:     SEND_CMD(0x80+84);
   802  0601  30D4               	movlw	212
   803  0602  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
   804  0607                     l2061:
   805                           
   806                           ;main.c: 366:     EscribeCadenaLCD("DEL MODULO RTC:...");
   807  0607  303E               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   808  0608  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
   809  060D                     l2063:
   810                           
   811                           ;main.c: 368:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   812  060D  300B               	movlw	11
   813  060E  00FC               	movwf	??_main+2
   814  060F  3026               	movlw	38
   815  0610  00FB               	movwf	??_main+1
   816  0611  305D               	movlw	93
   817  0612  00FA               	movwf	??_main
   818  0613                     u1627:
   819  0613  0BFA               	decfsz	??_main,f
   820  0614  2E13               	goto	u1627
   821  0615  0BFB               	decfsz	??_main+1,f
   822  0616  2E13               	goto	u1627
   823  0617  0BFC               	decfsz	??_main+2,f
   824  0618  2E13               	goto	u1627
   825  0619  2E1A               	nop2
   826  061A                     l2065:
   827                           
   828                           ;main.c: 370:     SEND_CMD(1);
   829  061A  3001               	movlw	1
   830  061B  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
   831  0620                     l2067:
   832                           
   833                           ;main.c: 373:     {;main.c: 374:         SEND_CMD(0x80+0);
   834  0620  3080               	movlw	128
   835  0621  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
   836  0626                     l2069:
   837                           
   838                           ;main.c: 376:         Car = Read_Byte_From_DS1307_RTC(2);
   839  0626  3002               	movlw	2
   840  0627  120A  118A  22AE  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
   841  062C  00FA               	movwf	??_main
   842  062D  087A               	movf	??_main,w
   843  062E  1283               	bcf	3,5	;RP0=0, select bank0
   844  062F  1303               	bcf	3,6	;RP1=0, select bank0
   845  0630  00AB               	movwf	main@Car
   846  0631                     l2071:
   847                           
   848                           ;main.c: 377:         SEND_CHAR(((Car>>4) & 0x0F)+0x30);
   849  0631  082B               	movf	main@Car,w
   850  0632  00FA               	movwf	??_main
   851  0633  3004               	movlw	4
   852  0634                     u1325:
   853  0634  1003               	clrc
   854  0635  0CFA               	rrf	??_main,f
   855  0636  3EFF               	addlw	-1
   856  0637  1D03               	skipz
   857  0638  2E34               	goto	u1325
   858  0639  087A               	movf	??_main,w
   859  063A  390F               	andlw	15
   860  063B  3E30               	addlw	48
   861  063C  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   862  0641                     l2073:
   863                           
   864                           ;main.c: 378:         SEND_CHAR((Car & 0x0F) + 0x30);
   865  0641  1283               	bcf	3,5	;RP0=0, select bank0
   866  0642  1303               	bcf	3,6	;RP1=0, select bank0
   867  0643  082B               	movf	main@Car,w
   868  0644  390F               	andlw	15
   869  0645  3E30               	addlw	48
   870  0646  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   871  064B                     l2075:
   872                           
   873                           ;main.c: 380:         SEND_CHAR(':');
   874  064B  303A               	movlw	58
   875  064C  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   876  0651                     l2077:
   877                           
   878                           ;main.c: 382:         Car = Read_Byte_From_DS1307_RTC(1);
   879  0651  3001               	movlw	1
   880  0652  120A  118A  22AE  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
   881  0657  00FA               	movwf	??_main
   882  0658  087A               	movf	??_main,w
   883  0659  1283               	bcf	3,5	;RP0=0, select bank0
   884  065A  1303               	bcf	3,6	;RP1=0, select bank0
   885  065B  00AB               	movwf	main@Car
   886  065C                     l2079:
   887                           
   888                           ;main.c: 383:         SEND_CHAR(((Car>>4) & 0x0F)+0x30);
   889  065C  082B               	movf	main@Car,w
   890  065D  00FA               	movwf	??_main
   891  065E  3004               	movlw	4
   892  065F                     u1335:
   893  065F  1003               	clrc
   894  0660  0CFA               	rrf	??_main,f
   895  0661  3EFF               	addlw	-1
   896  0662  1D03               	skipz
   897  0663  2E5F               	goto	u1335
   898  0664  087A               	movf	??_main,w
   899  0665  390F               	andlw	15
   900  0666  3E30               	addlw	48
   901  0667  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   902  066C                     l2081:
   903                           
   904                           ;main.c: 384:         SEND_CHAR((Car & 0x0F) + 0x30);
   905  066C  1283               	bcf	3,5	;RP0=0, select bank0
   906  066D  1303               	bcf	3,6	;RP1=0, select bank0
   907  066E  082B               	movf	main@Car,w
   908  066F  390F               	andlw	15
   909  0670  3E30               	addlw	48
   910  0671  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   911  0676                     l2083:
   912                           
   913                           ;main.c: 386:         SEND_CHAR(':');
   914  0676  303A               	movlw	58
   915  0677  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   916  067C                     l2085:
   917                           
   918                           ;main.c: 388:         Car = Read_Byte_From_DS1307_RTC(0);
   919  067C  3000               	movlw	0
   920  067D  120A  118A  22AE  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
   921  0682  00FA               	movwf	??_main
   922  0683  087A               	movf	??_main,w
   923  0684  1283               	bcf	3,5	;RP0=0, select bank0
   924  0685  1303               	bcf	3,6	;RP1=0, select bank0
   925  0686  00AB               	movwf	main@Car
   926  0687                     l2087:
   927                           
   928                           ;main.c: 389:         SEND_CHAR(((Car>>4) & 0x0F)+0x30);
   929  0687  082B               	movf	main@Car,w
   930  0688  00FA               	movwf	??_main
   931  0689  3004               	movlw	4
   932  068A                     u1345:
   933  068A  1003               	clrc
   934  068B  0CFA               	rrf	??_main,f
   935  068C  3EFF               	addlw	-1
   936  068D  1D03               	skipz
   937  068E  2E8A               	goto	u1345
   938  068F  087A               	movf	??_main,w
   939  0690  390F               	andlw	15
   940  0691  3E30               	addlw	48
   941  0692  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   942  0697                     l2089:
   943                           
   944                           ;main.c: 390:         SEND_CHAR((Car & 0x0F) + 0x30);
   945  0697  1283               	bcf	3,5	;RP0=0, select bank0
   946  0698  1303               	bcf	3,6	;RP1=0, select bank0
   947  0699  082B               	movf	main@Car,w
   948  069A  390F               	andlw	15
   949  069B  3E30               	addlw	48
   950  069C  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   951  06A1                     l2091:
   952                           
   953                           ;main.c: 392:         SEND_CMD(0xC0);
   954  06A1  30C0               	movlw	192
   955  06A2  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
   956  06A7                     l2093:
   957                           
   958                           ;main.c: 394:         Car = Read_Byte_From_DS1307_RTC(4);
   959  06A7  3004               	movlw	4
   960  06A8  120A  118A  22AE  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
   961  06AD  00FA               	movwf	??_main
   962  06AE  087A               	movf	??_main,w
   963  06AF  1283               	bcf	3,5	;RP0=0, select bank0
   964  06B0  1303               	bcf	3,6	;RP1=0, select bank0
   965  06B1  00AB               	movwf	main@Car
   966  06B2                     l2095:
   967                           
   968                           ;main.c: 395:         SEND_CHAR(((Car>>4) & 0x03)+0x30);
   969  06B2  082B               	movf	main@Car,w
   970  06B3  00FA               	movwf	??_main
   971  06B4  3004               	movlw	4
   972  06B5                     u1355:
   973  06B5  1003               	clrc
   974  06B6  0CFA               	rrf	??_main,f
   975  06B7  3EFF               	addlw	-1
   976  06B8  1D03               	skipz
   977  06B9  2EB5               	goto	u1355
   978  06BA  087A               	movf	??_main,w
   979  06BB  3903               	andlw	3
   980  06BC  3E30               	addlw	48
   981  06BD  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   982  06C2                     l2097:
   983                           
   984                           ;main.c: 396:         SEND_CHAR((Car & 0x0F) + 0x30);
   985  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   986  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   987  06C4  082B               	movf	main@Car,w
   988  06C5  390F               	andlw	15
   989  06C6  3E30               	addlw	48
   990  06C7  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   991  06CC                     l2099:
   992                           
   993                           ;main.c: 398:         SEND_CHAR('/');
   994  06CC  302F               	movlw	47
   995  06CD  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
   996  06D2                     l2101:
   997                           
   998                           ;main.c: 400:         Car = Read_Byte_From_DS1307_RTC(5);
   999  06D2  3005               	movlw	5
  1000  06D3  120A  118A  22AE  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
  1001  06D8  00FA               	movwf	??_main
  1002  06D9  087A               	movf	??_main,w
  1003  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1004  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1005  06DC  00AB               	movwf	main@Car
  1006                           
  1007                           ;main.c: 401:         switch(Car)
  1008  06DD  2F4D               	goto	l2131
  1009  06DE                     l2103:
  1010                           
  1011                           ;main.c: 404:                 EscribeCadenaLCD("ENE");
  1012  06DE  30AF               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1013  06DF  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1014                           
  1015                           ;main.c: 405:                 break;
  1016  06E4  2F7B               	goto	l2133
  1017  06E5                     l2105:
  1018                           
  1019                           ;main.c: 407:                 EscribeCadenaLCD("FEB");
  1020  06E5  30A7               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1021  06E6  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1022                           
  1023                           ;main.c: 408:                 break;
  1024  06EB  2F7B               	goto	l2133
  1025  06EC                     l2107:
  1026                           
  1027                           ;main.c: 410:                 EscribeCadenaLCD("MAR");
  1028  06EC  30C3               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1029  06ED  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1030                           
  1031                           ;main.c: 411:                 break;
  1032  06F2  2F7B               	goto	l2133
  1033  06F3                     l2109:
  1034                           
  1035                           ;main.c: 413:                 EscribeCadenaLCD("ABR");
  1036  06F3  30C7               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1037  06F4  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1038                           
  1039                           ;main.c: 414:                 break;
  1040  06F9  2F7B               	goto	l2133
  1041  06FA                     l2111:
  1042                           
  1043                           ;main.c: 416:                 EscribeCadenaLCD("MAY");
  1044  06FA  30D3               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1045  06FB  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1046                           
  1047                           ;main.c: 417:                 break;
  1048  0700  2F7B               	goto	l2133
  1049  0701                     l2113:
  1050                           
  1051                           ;main.c: 419:                 EscribeCadenaLCD("JUN");
  1052  0701  30B7               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1053  0702  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1054                           
  1055                           ;main.c: 420:                 break;
  1056  0707  2F7B               	goto	l2133
  1057  0708                     l2115:
  1058                           
  1059                           ;main.c: 422:                 EscribeCadenaLCD("JUL");
  1060  0708  30B3               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1061  0709  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1062                           
  1063                           ;main.c: 423:                 break;
  1064  070E  2F7B               	goto	l2133
  1065  070F                     l2117:
  1066                           
  1067                           ;main.c: 425:                 EscribeCadenaLCD("AGO");
  1068  070F  30BB               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1069  0710  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1070                           
  1071                           ;main.c: 426:                 break;
  1072  0715  2F7B               	goto	l2133
  1073  0716                     l2119:
  1074                           
  1075                           ;main.c: 428:                 EscribeCadenaLCD("SEP");
  1076  0716  30BF               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1077  0717  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1078                           
  1079                           ;main.c: 429:                 break;
  1080  071C  2F7B               	goto	l2133
  1081  071D                     l2121:
  1082                           
  1083                           ;main.c: 431:                 EscribeCadenaLCD("OCT");
  1084  071D  30CB               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  1085  071E  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1086                           
  1087                           ;main.c: 432:                 break;
  1088  0723  2F7B               	goto	l2133
  1089  0724                     l2123:
  1090                           
  1091                           ;main.c: 434:                 EscribeCadenaLCD("NOV");
  1092  0724  30CF               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  1093  0725  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1094                           
  1095                           ;main.c: 435:                 break;
  1096  072A  2F7B               	goto	l2133
  1097  072B                     l2125:
  1098                           
  1099                           ;main.c: 437:                 EscribeCadenaLCD("DIC");
  1100  072B  30AB               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  1101  072C  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  1102                           
  1103                           ;main.c: 438:                 break;
  1104  0731  2F7B               	goto	l2133
  1105  0732                     l2127:
  1106                           
  1107                           ;main.c: 440:                 SEND_CHAR(((Car>>4) & 0x0F) + 0x30);
  1108  0732  082B               	movf	main@Car,w
  1109  0733  00FA               	movwf	??_main
  1110  0734  3004               	movlw	4
  1111  0735                     u1365:
  1112  0735  1003               	clrc
  1113  0736  0CFA               	rrf	??_main,f
  1114  0737  3EFF               	addlw	-1
  1115  0738  1D03               	skipz
  1116  0739  2F35               	goto	u1365
  1117  073A  087A               	movf	??_main,w
  1118  073B  390F               	andlw	15
  1119  073C  3E30               	addlw	48
  1120  073D  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  1121                           
  1122                           ;main.c: 441:                 SEND_CHAR((Car & 0x0F) + 0x30);
  1123  0742  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0743  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0744  082B               	movf	main@Car,w
  1126  0745  390F               	andlw	15
  1127  0746  3E30               	addlw	48
  1128  0747  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  1129                           
  1130                           ;main.c: 442:                 break;
  1131  074C  2F7B               	goto	l2133
  1132  074D                     l2131:
  1133  074D  082B               	movf	main@Car,w
  1134  074E  00FA               	movwf	??_main
  1135  074F  01FB               	clrf	??_main+1
  1136                           
  1137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1138                           ; Switch size 1, requested type "simple"
  1139                           ; Number of cases is 1, Range of values is 0 to 0
  1140                           ; switch strategies available:
  1141                           ; Name         Instructions Cycles
  1142                           ; simple_byte            4     3 (average)
  1143                           ; direct_byte           11     8 (fixed)
  1144                           ; jumptable            260     6 (fixed)
  1145                           ;	Chosen strategy is simple_byte
  1146  0750  087B               	movf	??_main+1,w
  1147  0751  3A00               	xorlw	0	; case 0
  1148  0752  1903               	skipnz
  1149  0753  2F55               	goto	l2309
  1150  0754  2F32               	goto	l2127
  1151  0755                     l2309:
  1152                           
  1153                           ; Switch size 1, requested type "simple"
  1154                           ; Number of cases is 12, Range of values is 1 to 18
  1155                           ; switch strategies available:
  1156                           ; Name         Instructions Cycles
  1157                           ; simple_byte           37    19 (average)
  1158                           ; direct_byte           65    11 (fixed)
  1159                           ; jumptable            263     9 (fixed)
  1160                           ;	Chosen strategy is simple_byte
  1161  0755  087A               	movf	??_main,w
  1162  0756  3A01               	xorlw	1	; case 1
  1163  0757  1903               	skipnz
  1164  0758  2EDE               	goto	l2103
  1165  0759  3A03               	xorlw	3	; case 2
  1166  075A  1903               	skipnz
  1167  075B  2EE5               	goto	l2105
  1168  075C  3A01               	xorlw	1	; case 3
  1169  075D  1903               	skipnz
  1170  075E  2EEC               	goto	l2107
  1171  075F  3A07               	xorlw	7	; case 4
  1172  0760  1903               	skipnz
  1173  0761  2EF3               	goto	l2109
  1174  0762  3A01               	xorlw	1	; case 5
  1175  0763  1903               	skipnz
  1176  0764  2EFA               	goto	l2111
  1177  0765  3A03               	xorlw	3	; case 6
  1178  0766  1903               	skipnz
  1179  0767  2F01               	goto	l2113
  1180  0768  3A01               	xorlw	1	; case 7
  1181  0769  1903               	skipnz
  1182  076A  2F08               	goto	l2115
  1183  076B  3A0F               	xorlw	15	; case 8
  1184  076C  1903               	skipnz
  1185  076D  2F0F               	goto	l2117
  1186  076E  3A01               	xorlw	1	; case 9
  1187  076F  1903               	skipnz
  1188  0770  2F16               	goto	l2119
  1189  0771  3A19               	xorlw	25	; case 16
  1190  0772  1903               	skipnz
  1191  0773  2F1D               	goto	l2121
  1192  0774  3A01               	xorlw	1	; case 17
  1193  0775  1903               	skipnz
  1194  0776  2F24               	goto	l2123
  1195  0777  3A03               	xorlw	3	; case 18
  1196  0778  1903               	skipnz
  1197  0779  2F2B               	goto	l2125
  1198  077A  2F32               	goto	l2127
  1199  077B                     l2133:
  1200                           
  1201                           ;main.c: 446:         SEND_CHAR('/');
  1202  077B  302F               	movlw	47
  1203  077C  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  1204                           
  1205                           ;main.c: 448:         Car = Read_Byte_From_DS1307_RTC(6);
  1206  0781  3006               	movlw	6
  1207  0782  120A  118A  22AE  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
  1208  0787  00FA               	movwf	??_main
  1209  0788  087A               	movf	??_main,w
  1210  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1211  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1212  078B  00AB               	movwf	main@Car
  1213                           
  1214                           ;main.c: 449:         SEND_CHAR(((Car >> 4) & 0x0F) + 0x30);
  1215  078C  082B               	movf	main@Car,w
  1216  078D  00FA               	movwf	??_main
  1217  078E  3004               	movlw	4
  1218  078F                     u1375:
  1219  078F  1003               	clrc
  1220  0790  0CFA               	rrf	??_main,f
  1221  0791  3EFF               	addlw	-1
  1222  0792  1D03               	skipz
  1223  0793  2F8F               	goto	u1375
  1224  0794  087A               	movf	??_main,w
  1225  0795  390F               	andlw	15
  1226  0796  3E30               	addlw	48
  1227  0797  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  1228                           
  1229                           ;main.c: 450:         SEND_CHAR((Car & 0x0F) + 0x30);
  1230  079C  1283               	bcf	3,5	;RP0=0, select bank0
  1231  079D  1303               	bcf	3,6	;RP1=0, select bank0
  1232  079E  082B               	movf	main@Car,w
  1233  079F  390F               	andlw	15
  1234  07A0  3E30               	addlw	48
  1235  07A1  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  1236  07A6                     l2135:
  1237                           
  1238                           ;main.c: 452:         if(PIR1bits.RCIF == 1)
  1239  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1240  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1241  07A8  1E8C               	btfss	12,5	;volatile
  1242  07A9  2FAB               	goto	u1381
  1243  07AA  2FAC               	goto	u1380
  1244  07AB                     u1381:
  1245  07AB  2FBC               	goto	l2145
  1246  07AC                     u1380:
  1247  07AC                     l2137:
  1248                           
  1249                           ;main.c: 453:             {;main.c: 454:                 Car = RCREG;
  1250  07AC  081A               	movf	26,w	;volatile
  1251  07AD  00FA               	movwf	??_main
  1252  07AE  087A               	movf	??_main,w
  1253  07AF  00AB               	movwf	main@Car
  1254  07B0                     l2139:
  1255                           
  1256                           ;main.c: 455:                 PIR1bits.RCIF = 0;
  1257  07B0  128C               	bcf	12,5	;volatile
  1258  07B1                     l2141:
  1259                           
  1260                           ;main.c: 456:                 if(Car == 'H') RecibeHHMM();
  1261  07B1  3048               	movlw	72
  1262  07B2  062B               	xorwf	main@Car,w
  1263  07B3  1D03               	btfss	3,2
  1264  07B4  2FB6               	goto	u1391
  1265  07B5  2FB7               	goto	u1390
  1266  07B6                     u1391:
  1267  07B6  2FBC               	goto	l2145
  1268  07B7                     u1390:
  1269  07B7                     l2143:
  1270  07B7  120A  118A  22E4  120A  118A  	fcall	_RecibeHHMM
  1271  07BC                     l2145:
  1272                           
  1273                           ;main.c: 459:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1274  07BC  3082               	movlw	130
  1275  07BD  00FB               	movwf	??_main+1
  1276  07BE  30DD               	movlw	221
  1277  07BF  00FA               	movwf	??_main
  1278  07C0                     u1637:
  1279  07C0  0BFA               	decfsz	??_main,f
  1280  07C1  2FC0               	goto	u1637
  1281  07C2  0BFB               	decfsz	??_main+1,f
  1282  07C3  2FC0               	goto	u1637
  1283  07C4  2FC5               	nop2
  1284  07C5                     l2147:
  1285                           
  1286                           ;main.c: 461:         char a = TECLADO();
  1287  07C5  120A  118A  23A2  120A  118A  	fcall	_TECLADO
  1288  07CA  00FA               	movwf	??_main
  1289  07CB  087A               	movf	??_main,w
  1290  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1291  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1292  07CE  00AA               	movwf	main@a
  1293  07CF                     l2149:
  1294                           
  1295                           ;main.c: 462:         if(a == 0x0D)
  1296  07CF  300D               	movlw	13
  1297  07D0  062A               	xorwf	main@a,w
  1298  07D1  1D03               	btfss	3,2
  1299  07D2  2FD4               	goto	u1401
  1300  07D3  2FD5               	goto	u1400
  1301  07D4                     u1401:
  1302  07D4  2E20               	goto	l2067
  1303  07D5                     u1400:
  1304  07D5                     l2151:
  1305                           
  1306                           ;main.c: 463:         {;main.c: 464:             LEA_FECHA();
  1307  07D5  120A  118A  2461  120A  118A  	fcall	_LEA_FECHA
  1308  07DA                     l2153:
  1309                           
  1310                           ;main.c: 466:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1311  07DA  300D               	movlw	13
  1312  07DB  00FB               	movwf	??_main+1
  1313  07DC  30FB               	movlw	251
  1314  07DD  00FA               	movwf	??_main
  1315  07DE                     u1647:
  1316  07DE  0BFA               	decfsz	??_main,f
  1317  07DF  2FDE               	goto	u1647
  1318  07E0  0BFB               	decfsz	??_main+1,f
  1319  07E1  2FDE               	goto	u1647
  1320  07E2  2FE3               	nop2
  1321  07E3                     l2155:
  1322                           
  1323                           ;main.c: 468:             SEND_CMD(0x80 + 20);
  1324  07E3  3094               	movlw	148
  1325  07E4  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
  1326  07E9                     l2157:
  1327                           
  1328                           ;main.c: 469:             SEND_CHAR(a);
  1329  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1330  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1331  07EB  082A               	movf	main@a,w
  1332  07EC  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  1333  07F1  2E20               	goto	l2067
  1334  07F2  120A  118A  2800   	ljmp	start
  1335  07F5                     __end_of_main:
  1336                           
  1337                           	psect	text1
  1338  01FB                     __ptext1:	
  1339 ;; *************** function _UART_Init *****************
  1340 ;; Defined at:
  1341 ;;		line 69 in file "main.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0
  1358 ;;      Totals:         0       0       0       0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _UART_Init
  1370  01FB                     _UART_Init:
  1371  01FB                     l1817:	
  1372                           ;incstack = 0
  1373                           ; Regs used in _UART_Init: [wreg]
  1374                           
  1375                           
  1376                           ;main.c: 72:     TXSTA = 0x26;
  1377  01FB  3026               	movlw	38
  1378  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  1379  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  1380  01FE  0098               	movwf	24	;volatile
  1381                           
  1382                           ;main.c: 73:     RCSTA = 0x90;
  1383  01FF  3090               	movlw	144
  1384  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0202  0098               	movwf	24	;volatile
  1387                           
  1388                           ;main.c: 74:     SPBRG = 25;
  1389  0203  3019               	movlw	25
  1390  0204  1683               	bsf	3,5	;RP0=1, select bank1
  1391  0205  1303               	bcf	3,6	;RP1=0, select bank1
  1392  0206  0099               	movwf	25	;volatile
  1393  0207                     l1819:
  1394                           
  1395                           ;main.c: 75:     PIR1bits.TXIF = 0;
  1396  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0209  120C               	bcf	12,4	;volatile
  1399  020A                     l1821:
  1400                           
  1401                           ;main.c: 76:     PIR1bits.RCIF = 0;
  1402  020A  128C               	bcf	12,5	;volatile
  1403  020B                     l174:
  1404  020B  0008               	return
  1405  020C                     __end_of_UART_Init:
  1406                           
  1407                           	psect	text2
  1408  02E4                     __ptext2:	
  1409 ;; *************** function _RecibeHHMM *****************
  1410 ;; Defined at:
  1411 ;;		line 100 in file "main.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  Datos           4    5[COMMON] unsigned char [4]
  1416 ;;  Car             1    9[COMMON] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         0       0       0       0       0
  1427 ;;      Locals:         5       0       0       0       0
  1428 ;;      Temps:          2       0       0       0       0
  1429 ;;      Totals:         7       0       0       0       0
  1430 ;;Total ram usage:        7 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 2
  1433 ;; This function calls:
  1434 ;;		_MSG_Term
  1435 ;;		_SEND_CMD
  1436 ;;		_SEND_Tx
  1437 ;;		_Write_Byte_To_DS1307_RTC
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _RecibeHHMM
  1445  02E4                     _RecibeHHMM:
  1446  02E4                     l1829:	
  1447                           ;incstack = 0
  1448                           ; Regs used in _RecibeHHMM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1449                           
  1450                           
  1451                           ;main.c: 102:     char Car, Datos[4];;main.c: 103:     SEND_CMD(0x01);
  1452  02E4  3001               	movlw	1
  1453  02E5  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
  1454  02EA                     l1831:
  1455                           
  1456                           ;main.c: 105:     MSG_Term("Escriba la Hora:");
  1457  02EA  3096               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1458  02EB  120A  118A  2283  120A  118A  	fcall	_MSG_Term
  1459  02F0                     l192:	
  1460                           ;main.c: 107:     while(PIR1bits.RCIF == 0);
  1461                           
  1462  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  1463  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  1464  02F2  1E8C               	btfss	12,5	;volatile
  1465  02F3  2AF5               	goto	u961
  1466  02F4  2AF6               	goto	u960
  1467  02F5                     u961:
  1468  02F5  2AF0               	goto	l192
  1469  02F6                     u960:
  1470  02F6                     l194:
  1471                           
  1472                           ;main.c: 108:     if(PIR1bits.RCIF == 1)
  1473  02F6  1E8C               	btfss	12,5	;volatile
  1474  02F7  2AF9               	goto	u971
  1475  02F8  2AFA               	goto	u970
  1476  02F9                     u971:
  1477  02F9  2B09               	goto	l196
  1478  02FA                     u970:
  1479  02FA                     l1833:
  1480                           
  1481                           ;main.c: 109:         {;main.c: 110:             Car = RCREG;
  1482  02FA  081A               	movf	26,w	;volatile
  1483  02FB  00F3               	movwf	??_RecibeHHMM
  1484  02FC  0873               	movf	??_RecibeHHMM,w
  1485  02FD  00F9               	movwf	RecibeHHMM@Car
  1486  02FE                     l1835:
  1487                           
  1488                           ;main.c: 111:             PIR1bits.RCIF = 0;
  1489  02FE  128C               	bcf	12,5	;volatile
  1490                           
  1491                           ;main.c: 112:             Datos[3] = Car;
  1492  02FF  0879               	movf	RecibeHHMM@Car,w
  1493  0300  00F3               	movwf	??_RecibeHHMM
  1494  0301  0873               	movf	??_RecibeHHMM,w
  1495  0302  00F8               	movwf	RecibeHHMM@Datos+3
  1496  0303                     l1837:
  1497                           
  1498                           ;main.c: 113:             SEND_Tx(Car);
  1499  0303  0879               	movf	RecibeHHMM@Car,w
  1500  0304  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1501  0309                     l196:
  1502  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1503  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1504  030B  1E8C               	btfss	12,5	;volatile
  1505  030C  2B0E               	goto	u981
  1506  030D  2B0F               	goto	u980
  1507  030E                     u981:
  1508  030E  2B09               	goto	l196
  1509  030F                     u980:
  1510  030F                     l198:
  1511                           
  1512                           ;main.c: 116:     if(PIR1bits.RCIF == 1)
  1513  030F  1E8C               	btfss	12,5	;volatile
  1514  0310  2B12               	goto	u991
  1515  0311  2B13               	goto	u990
  1516  0312                     u991:
  1517  0312  2B2E               	goto	l1849
  1518  0313                     u990:
  1519  0313                     l1839:
  1520                           
  1521                           ;main.c: 117:         {;main.c: 118:             Car = RCREG;
  1522  0313  081A               	movf	26,w	;volatile
  1523  0314  00F3               	movwf	??_RecibeHHMM
  1524  0315  0873               	movf	??_RecibeHHMM,w
  1525  0316  00F9               	movwf	RecibeHHMM@Car
  1526  0317                     l1841:
  1527                           
  1528                           ;main.c: 119:             PIR1bits.RCIF = 0;
  1529  0317  128C               	bcf	12,5	;volatile
  1530                           
  1531                           ;main.c: 120:             Datos[2] = Car;
  1532  0318  0879               	movf	RecibeHHMM@Car,w
  1533  0319  00F3               	movwf	??_RecibeHHMM
  1534  031A  0873               	movf	??_RecibeHHMM,w
  1535  031B  00F7               	movwf	RecibeHHMM@Datos+2
  1536  031C                     l1843:
  1537                           
  1538                           ;main.c: 121:             SEND_Tx(Car);
  1539  031C  0879               	movf	RecibeHHMM@Car,w
  1540  031D  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1541  0322                     l1845:
  1542                           
  1543                           ;main.c: 122:             SEND_Tx(0x0D);
  1544  0322  300D               	movlw	13
  1545  0323  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1546  0328                     l1847:
  1547                           
  1548                           ;main.c: 123:             SEND_Tx(0x0A);
  1549  0328  300A               	movlw	10
  1550  0329  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1551  032E                     l1849:
  1552                           
  1553                           ;main.c: 126:     MSG_Term("Escriba los minutos:");
  1554  032E  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1555  032F  120A  118A  2283  120A  118A  	fcall	_MSG_Term
  1556  0334                     l200:	
  1557                           ;main.c: 127:     while(PIR1bits.RCIF == 0);
  1558                           
  1559  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0336  1E8C               	btfss	12,5	;volatile
  1562  0337  2B39               	goto	u1001
  1563  0338  2B3A               	goto	u1000
  1564  0339                     u1001:
  1565  0339  2B34               	goto	l200
  1566  033A                     u1000:
  1567  033A                     l202:
  1568                           
  1569                           ;main.c: 128:     if (PIR1bits.RCIF == 1)
  1570  033A  1E8C               	btfss	12,5	;volatile
  1571  033B  2B3D               	goto	u1011
  1572  033C  2B3E               	goto	u1010
  1573  033D                     u1011:
  1574  033D  2B4D               	goto	l204
  1575  033E                     u1010:
  1576  033E                     l1851:
  1577                           
  1578                           ;main.c: 129:         {;main.c: 130:             Car = RCREG;
  1579  033E  081A               	movf	26,w	;volatile
  1580  033F  00F3               	movwf	??_RecibeHHMM
  1581  0340  0873               	movf	??_RecibeHHMM,w
  1582  0341  00F9               	movwf	RecibeHHMM@Car
  1583  0342                     l1853:
  1584                           
  1585                           ;main.c: 131:             PIR1bits.RCIF = 0;
  1586  0342  128C               	bcf	12,5	;volatile
  1587                           
  1588                           ;main.c: 132:             Datos[1] = Car;
  1589  0343  0879               	movf	RecibeHHMM@Car,w
  1590  0344  00F3               	movwf	??_RecibeHHMM
  1591  0345  0873               	movf	??_RecibeHHMM,w
  1592  0346  00F6               	movwf	RecibeHHMM@Datos+1
  1593  0347                     l1855:
  1594                           
  1595                           ;main.c: 133:             SEND_Tx(Car);
  1596  0347  0879               	movf	RecibeHHMM@Car,w
  1597  0348  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1598  034D                     l204:
  1599  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1600  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1601  034F  1E8C               	btfss	12,5	;volatile
  1602  0350  2B52               	goto	u1021
  1603  0351  2B53               	goto	u1020
  1604  0352                     u1021:
  1605  0352  2B4D               	goto	l204
  1606  0353                     u1020:
  1607  0353                     l206:
  1608                           
  1609                           ;main.c: 137:     if(PIR1bits.RCIF == 1)
  1610  0353  1E8C               	btfss	12,5	;volatile
  1611  0354  2B56               	goto	u1031
  1612  0355  2B57               	goto	u1030
  1613  0356                     u1031:
  1614  0356  2B72               	goto	l1867
  1615  0357                     u1030:
  1616  0357                     l1857:
  1617                           
  1618                           ;main.c: 138:         {;main.c: 139:             Car = RCREG;
  1619  0357  081A               	movf	26,w	;volatile
  1620  0358  00F3               	movwf	??_RecibeHHMM
  1621  0359  0873               	movf	??_RecibeHHMM,w
  1622  035A  00F9               	movwf	RecibeHHMM@Car
  1623  035B                     l1859:
  1624                           
  1625                           ;main.c: 140:             PIR1bits.RCIF = 0;
  1626  035B  128C               	bcf	12,5	;volatile
  1627                           
  1628                           ;main.c: 141:             Datos[0] = Car;
  1629  035C  0879               	movf	RecibeHHMM@Car,w
  1630  035D  00F3               	movwf	??_RecibeHHMM
  1631  035E  0873               	movf	??_RecibeHHMM,w
  1632  035F  00F5               	movwf	RecibeHHMM@Datos
  1633  0360                     l1861:
  1634                           
  1635                           ;main.c: 142:             SEND_Tx(Car);
  1636  0360  0879               	movf	RecibeHHMM@Car,w
  1637  0361  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1638  0366                     l1863:
  1639                           
  1640                           ;main.c: 143:             SEND_Tx(0x0D);
  1641  0366  300D               	movlw	13
  1642  0367  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1643  036C                     l1865:
  1644                           
  1645                           ;main.c: 144:             SEND_Tx(0x0A);
  1646  036C  300A               	movlw	10
  1647  036D  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1648  0372                     l1867:
  1649                           
  1650                           ;main.c: 149:     Write_Byte_To_DS1307_RTC(2,(Datos[3]<<4)+ (Datos[2]& 0x0F));
  1651  0372  0878               	movf	RecibeHHMM@Datos+3,w
  1652  0373  00F3               	movwf	??_RecibeHHMM
  1653  0374  3004               	movlw	4
  1654  0375                     u1045:
  1655  0375  1003               	clrc
  1656  0376  0DF3               	rlf	??_RecibeHHMM,f
  1657  0377  3EFF               	addlw	-1
  1658  0378  1D03               	skipz
  1659  0379  2B75               	goto	u1045
  1660  037A  0877               	movf	RecibeHHMM@Datos+2,w
  1661  037B  390F               	andlw	15
  1662  037C  0773               	addwf	??_RecibeHHMM,w
  1663  037D  00F4               	movwf	??_RecibeHHMM+1
  1664  037E  0874               	movf	??_RecibeHHMM+1,w
  1665  037F  00F1               	movwf	Write_Byte_To_DS1307_RTC@DataByte
  1666  0380  3002               	movlw	2
  1667  0381  120A  118A  2260  120A  118A  	fcall	_Write_Byte_To_DS1307_RTC
  1668  0386                     l1869:
  1669                           
  1670                           ;main.c: 150:     Write_Byte_To_DS1307_RTC(1,(Datos[1]<<4)+ (Datos[0]& 0x0F));
  1671  0386  0876               	movf	RecibeHHMM@Datos+1,w
  1672  0387  00F3               	movwf	??_RecibeHHMM
  1673  0388  3004               	movlw	4
  1674  0389                     u1055:
  1675  0389  1003               	clrc
  1676  038A  0DF3               	rlf	??_RecibeHHMM,f
  1677  038B  3EFF               	addlw	-1
  1678  038C  1D03               	skipz
  1679  038D  2B89               	goto	u1055
  1680  038E  0875               	movf	RecibeHHMM@Datos,w
  1681  038F  390F               	andlw	15
  1682  0390  0773               	addwf	??_RecibeHHMM,w
  1683  0391  00F4               	movwf	??_RecibeHHMM+1
  1684  0392  0874               	movf	??_RecibeHHMM+1,w
  1685  0393  00F1               	movwf	Write_Byte_To_DS1307_RTC@DataByte
  1686  0394  3001               	movlw	1
  1687  0395  120A  118A  2260  120A  118A  	fcall	_Write_Byte_To_DS1307_RTC
  1688  039A                     l1871:
  1689                           
  1690                           ;main.c: 151:     Write_Byte_To_DS1307_RTC(0,0);
  1691  039A  01F1               	clrf	Write_Byte_To_DS1307_RTC@DataByte
  1692  039B  3000               	movlw	0
  1693  039C  120A  118A  2260  120A  118A  	fcall	_Write_Byte_To_DS1307_RTC
  1694  03A1                     l208:
  1695  03A1  0008               	return
  1696  03A2                     __end_of_RecibeHHMM:
  1697                           
  1698                           	psect	text3
  1699  0283                     __ptext3:	
  1700 ;; *************** function _MSG_Term *****************
  1701 ;; Defined at:
  1702 ;;		line 93 in file "main.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  s               1    wreg     PTR const unsigned char 
  1705 ;;		 -> STR_2(21), STR_1(17), 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  s               1    2[COMMON] PTR const unsigned char 
  1708 ;;		 -> STR_2(21), STR_1(17), 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         1       0       0       0       0
  1720 ;;      Temps:          1       0       0       0       0
  1721 ;;      Totals:         2       0       0       0       0
  1722 ;;Total ram usage:        2 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 1
  1725 ;; This function calls:
  1726 ;;		_SEND_Tx
  1727 ;; This function is called by:
  1728 ;;		_RecibeHHMM
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           
  1733                           ;psect for function _MSG_Term
  1734  0283                     _MSG_Term:
  1735                           
  1736                           ;incstack = 0
  1737                           ; Regs used in _MSG_Term: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1738                           ;MSG_Term@s stored from wreg
  1739  0283  00F2               	movwf	MSG_Term@s
  1740  0284                     l1611:
  1741                           
  1742                           ;main.c: 93: void MSG_Term(const char *s);main.c: 94: {;main.c: 95: while(*s) SEND_Tx(*s
      +                          ++);
  1743  0284  2A95               	goto	l1617
  1744  0285                     l1613:
  1745  0285  0872               	movf	MSG_Term@s,w
  1746  0286  0084               	movwf	4
  1747  0287  120A  118A  2003  120A  118A  	fcall	stringdir
  1748  028C  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1749  0291                     l1615:
  1750  0291  3001               	movlw	1
  1751  0292  00F1               	movwf	??_MSG_Term
  1752  0293  0871               	movf	??_MSG_Term,w
  1753  0294  07F2               	addwf	MSG_Term@s,f
  1754  0295                     l1617:
  1755  0295  0872               	movf	MSG_Term@s,w
  1756  0296  0084               	movwf	4
  1757  0297  120A  118A  2003  120A  118A  	fcall	stringdir
  1758  029C  3A00               	xorlw	0
  1759  029D  1D03               	skipz
  1760  029E  2AA0               	goto	u811
  1761  029F  2AA1               	goto	u810
  1762  02A0                     u811:
  1763  02A0  2A85               	goto	l1613
  1764  02A1                     u810:
  1765  02A1                     l1619:
  1766                           
  1767                           ;main.c: 96:     SEND_Tx(0x0D);
  1768  02A1  300D               	movlw	13
  1769  02A2  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1770                           
  1771                           ;main.c: 97:     SEND_Tx(0x0A);
  1772  02A7  300A               	movlw	10
  1773  02A8  120A  118A  21C1  120A  118A  	fcall	_SEND_Tx
  1774  02AD                     l189:
  1775  02AD  0008               	return
  1776  02AE                     __end_of_MSG_Term:
  1777                           
  1778                           	psect	text4
  1779  01C1                     __ptext4:	
  1780 ;; *************** function _SEND_Tx *****************
  1781 ;; Defined at:
  1782 ;;		line 87 in file "main.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  dato            1    wreg     unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  dato            1    0[COMMON] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1796 ;;      Params:         0       0       0       0       0
  1797 ;;      Locals:         1       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0
  1799 ;;      Totals:         1       0       0       0       0
  1800 ;;Total ram usage:        1 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_MSG_Term
  1806 ;;		_RecibeHHMM
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           
  1811                           ;psect for function _SEND_Tx
  1812  01C1                     _SEND_Tx:
  1813                           
  1814                           ;incstack = 0
  1815                           ; Regs used in _SEND_Tx: [wreg]
  1816                           ;SEND_Tx@dato stored from wreg
  1817  01C1  00F0               	movwf	SEND_Tx@dato
  1818  01C2                     l1571:
  1819  01C2                     l180:	
  1820                           ;main.c: 87: void SEND_Tx(char dato);main.c: 88: {;main.c: 89:     while(TXSTAbits.TRMT 
      +                          == 0){};
  1821                           
  1822  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  1823  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  1824  01C4  1C98               	btfss	24,1	;volatile
  1825  01C5  29C7               	goto	u741
  1826  01C6  29C8               	goto	u740
  1827  01C7                     u741:
  1828  01C7  29C2               	goto	l180
  1829  01C8                     u740:
  1830  01C8                     l1573:
  1831                           
  1832                           ;main.c: 90:     TXREG = dato;
  1833  01C8  0870               	movf	SEND_Tx@dato,w
  1834  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1835  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1836  01CB  0099               	movwf	25	;volatile
  1837  01CC                     l183:
  1838  01CC  0008               	return
  1839  01CD                     __end_of_SEND_Tx:
  1840                           
  1841                           	psect	text5
  1842  02AE                     __ptext5:	
  1843 ;; *************** function _Read_Byte_From_DS1307_RTC *****************
  1844 ;; Defined at:
  1845 ;;		line 37 in file "./DS1307.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  Address         1    wreg     unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  Address         1    2[COMMON] unsigned char 
  1850 ;;  Byte            1    3[COMMON] unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      unsigned char 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1860 ;;      Params:         0       0       0       0       0
  1861 ;;      Locals:         2       0       0       0       0
  1862 ;;      Temps:          1       0       0       0       0
  1863 ;;      Totals:         3       0       0       0       0
  1864 ;;Total ram usage:        3 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; Hardware stack levels required when called: 1
  1867 ;; This function calls:
  1868 ;;		_I2C_ReStart
  1869 ;;		_I2C_Read_Byte
  1870 ;;		_I2C_Send_NACK
  1871 ;;		_I2C_Start
  1872 ;;		_I2C_Stop
  1873 ;;		_I2C_Write_Byte
  1874 ;; This function is called by:
  1875 ;;		_main
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           
  1880                           ;psect for function _Read_Byte_From_DS1307_RTC
  1881  02AE                     _Read_Byte_From_DS1307_RTC:
  1882                           
  1883                           ;incstack = 0
  1884                           ; Regs used in _Read_Byte_From_DS1307_RTC: [wreg+status,2+status,0+pclath+cstack]
  1885                           ;Read_Byte_From_DS1307_RTC@Address stored from wreg
  1886  02AE  00F2               	movwf	Read_Byte_From_DS1307_RTC@Address
  1887  02AF                     l1739:
  1888  02AF                     l1741:
  1889                           
  1890                           ;./DS1307.c: 41:  I2C_Start();
  1891  02AF  120A  118A  218D  120A  118A  	fcall	_I2C_Start
  1892  02B4                     l1745:	
  1893                           ;./DS1307.c: 44:  while(I2C_Write_Byte(0xD0 + 0) == 1)
  1894                           
  1895                           
  1896                           ;./DS1307.c: 44:  while(I2C_Write_Byte(0xD0 + 0) == 1)
  1897  02B4  30D0               	movlw	208
  1898  02B5  120A  118A  21DA  120A  118A  	fcall	_I2C_Write_Byte
  1899  02BA  3A01               	xorlw	1
  1900  02BB  1903               	skipnz
  1901  02BC  2ABE               	goto	u911
  1902  02BD  2ABF               	goto	u910
  1903  02BE                     u911:
  1904  02BE  2AAF               	goto	l1741
  1905  02BF                     u910:
  1906  02BF                     l1747:
  1907                           
  1908                           ;./DS1307.c: 47:  I2C_Write_Byte(Address);
  1909  02BF  0872               	movf	Read_Byte_From_DS1307_RTC@Address,w
  1910  02C0  120A  118A  21DA  120A  118A  	fcall	_I2C_Write_Byte
  1911  02C5                     l1749:
  1912                           
  1913                           ;./DS1307.c: 48:  I2C_ReStart();
  1914  02C5  120A  118A  21A1  120A  118A  	fcall	_I2C_ReStart
  1915  02CA                     l1751:
  1916                           
  1917                           ;./DS1307.c: 51:  I2C_Write_Byte(0xD0 + 1);
  1918  02CA  30D1               	movlw	209
  1919  02CB  120A  118A  21DA  120A  118A  	fcall	_I2C_Write_Byte
  1920  02D0                     l1753:
  1921                           
  1922                           ;./DS1307.c: 53:  Byte = I2C_Read_Byte();
  1923  02D0  120A  118A  21AB  120A  118A  	fcall	_I2C_Read_Byte
  1924  02D5  00F1               	movwf	??_Read_Byte_From_DS1307_RTC
  1925  02D6  0871               	movf	??_Read_Byte_From_DS1307_RTC,w
  1926  02D7  00F3               	movwf	Read_Byte_From_DS1307_RTC@Byte
  1927  02D8                     l1755:
  1928                           
  1929                           ;./DS1307.c: 55:  I2C_Send_NACK();
  1930  02D8  120A  118A  21B6  120A  118A  	fcall	_I2C_Send_NACK
  1931  02DD                     l1757:
  1932                           
  1933                           ;./DS1307.c: 56:  I2C_Stop();
  1934  02DD  120A  118A  2197  120A  118A  	fcall	_I2C_Stop
  1935  02E2                     l1759:
  1936                           
  1937                           ;./DS1307.c: 58:  return Byte;
  1938  02E2  0873               	movf	Read_Byte_From_DS1307_RTC@Byte,w
  1939  02E3                     l117:
  1940  02E3  0008               	return
  1941  02E4                     __end_of_Read_Byte_From_DS1307_RTC:
  1942                           
  1943                           	psect	text6
  1944  01B6                     __ptext6:	
  1945 ;; *************** function _I2C_Send_NACK *****************
  1946 ;; Defined at:
  1947 ;;		line 54 in file "./I2C.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		None
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1961 ;;      Params:         0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0
  1964 ;;      Totals:         0       0       0       0       0
  1965 ;;Total ram usage:        0 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_Read_Byte_From_DS1307_RTC
  1971 ;;		_Read_Bytes_From_DS1307_RTC
  1972 ;;		_LEA_SEE
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function _I2C_Send_NACK
  1978  01B6                     _I2C_Send_NACK:
  1979  01B6                     l1579:	
  1980                           ;incstack = 0
  1981                           ; Regs used in _I2C_Send_NACK: []
  1982                           
  1983                           
  1984                           ;./I2C.c: 56:  ACKDT = 1;
  1985  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  1986  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  1987  01B8  1691               	bsf	17,5	;volatile
  1988                           
  1989                           ;./I2C.c: 57:  ACKEN = 1;
  1990  01B9  1611               	bsf	17,4	;volatile
  1991  01BA                     l86:	
  1992                           ;./I2C.c: 58:  while(!SSPIF);
  1993                           
  1994  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1995  01BB  1D8C               	btfss	12,3	;volatile
  1996  01BC  29BE               	goto	u771
  1997  01BD  29BF               	goto	u770
  1998  01BE                     u771:
  1999  01BE  29BA               	goto	l86
  2000  01BF                     u770:
  2001  01BF                     l88:
  2002                           
  2003                           ;./I2C.c: 59:  SSPIF = 0;
  2004  01BF  118C               	bcf	12,3	;volatile
  2005  01C0                     l89:
  2006  01C0  0008               	return
  2007  01C1                     __end_of_I2C_Send_NACK:
  2008                           
  2009                           	psect	text7
  2010  01AB                     __ptext7:	
  2011 ;; *************** function _I2C_Read_Byte *****************
  2012 ;; Defined at:
  2013 ;;		line 75 in file "./I2C.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      unsigned char 
  2020 ;; Registers used:
  2021 ;;		wreg
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2027 ;;      Params:         0       0       0       0       0
  2028 ;;      Locals:         0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0
  2030 ;;      Totals:         0       0       0       0       0
  2031 ;;Total ram usage:        0 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_Read_Byte_From_DS1307_RTC
  2037 ;;		_Read_Bytes_From_DS1307_RTC
  2038 ;;		_LEA_SEE
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           
  2043                           ;psect for function _I2C_Read_Byte
  2044  01AB                     _I2C_Read_Byte:
  2045  01AB                     l1581:	
  2046                           ;incstack = 0
  2047                           ; Regs used in _I2C_Read_Byte: [wreg]
  2048                           
  2049                           
  2050                           ;./I2C.c: 77:  RCEN = 1;
  2051  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2052  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2053  01AD  1591               	bsf	17,3	;volatile
  2054  01AE                     l98:	
  2055                           ;./I2C.c: 78:  while(!SSPIF);
  2056                           
  2057  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2058  01AF  1D8C               	btfss	12,3	;volatile
  2059  01B0  29B2               	goto	u781
  2060  01B1  29B3               	goto	u780
  2061  01B2                     u781:
  2062  01B2  29AE               	goto	l98
  2063  01B3                     u780:
  2064  01B3                     l100:
  2065                           
  2066                           ;./I2C.c: 79:  SSPIF = 0;
  2067  01B3  118C               	bcf	12,3	;volatile
  2068  01B4                     l1583:
  2069                           
  2070                           ;./I2C.c: 81:     return SSPBUF;
  2071  01B4  0813               	movf	19,w	;volatile
  2072  01B5                     l101:
  2073  01B5  0008               	return
  2074  01B6                     __end_of_I2C_Read_Byte:
  2075                           
  2076                           	psect	text8
  2077  01A1                     __ptext8:	
  2078 ;; *************** function _I2C_ReStart *****************
  2079 ;; Defined at:
  2080 ;;		line 26 in file "./I2C.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		None
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0
  2097 ;;      Totals:         0       0       0       0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_Read_Byte_From_DS1307_RTC
  2104 ;;		_Read_Bytes_From_DS1307_RTC
  2105 ;;		_LEA_SEE
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _I2C_ReStart
  2111  01A1                     _I2C_ReStart:
  2112  01A1                     l1575:	
  2113                           ;incstack = 0
  2114                           ; Regs used in _I2C_ReStart: []
  2115                           
  2116                           
  2117                           ;./I2C.c: 28:  RSEN = 1;
  2118  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  2119  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  2120  01A3  1491               	bsf	17,1	;volatile
  2121  01A4                     l68:	
  2122                           ;./I2C.c: 29:  while(!SSPIF);
  2123                           
  2124  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2125  01A5  1D8C               	btfss	12,3	;volatile
  2126  01A6  29A8               	goto	u751
  2127  01A7  29A9               	goto	u750
  2128  01A8                     u751:
  2129  01A8  29A4               	goto	l68
  2130  01A9                     u750:
  2131  01A9                     l70:
  2132                           
  2133                           ;./I2C.c: 30:  SSPIF = 0;
  2134  01A9  118C               	bcf	12,3	;volatile
  2135  01AA                     l71:
  2136  01AA  0008               	return
  2137  01AB                     __end_of_I2C_ReStart:
  2138                           
  2139                           	psect	text9
  2140  0185                     __ptext9:	
  2141 ;; *************** function _MCU_Init *****************
  2142 ;; Defined at:
  2143 ;;		line 80 in file "main.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _MCU_Init
  2172  0185                     _MCU_Init:
  2173  0185                     l1823:	
  2174                           ;incstack = 0
  2175                           ; Regs used in _MCU_Init: [wreg+status,2]
  2176                           
  2177                           
  2178                           ;main.c: 82:     TRISC= 0xB8;
  2179  0185  30B8               	movlw	184
  2180  0186  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0187  1303               	bcf	3,6	;RP1=0, select bank1
  2182  0188  0087               	movwf	7	;volatile
  2183  0189                     l1825:
  2184                           
  2185                           ;main.c: 83:     TRISB = 0x00;
  2186  0189  0186               	clrf	6	;volatile
  2187  018A                     l1827:
  2188                           
  2189                           ;main.c: 84:     TRISD = 0xF0;
  2190  018A  30F0               	movlw	240
  2191  018B  0088               	movwf	8	;volatile
  2192  018C                     l177:
  2193  018C  0008               	return
  2194  018D                     __end_of_MCU_Init:
  2195                           
  2196                           	psect	text10
  2197  0461                     __ptext10:	
  2198 ;; *************** function _LEA_FECHA *****************
  2199 ;; Defined at:
  2200 ;;		line 225 in file "main.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  fecha           6    3[BANK0 ] unsigned char [6]
  2205 ;;  car             1    9[BANK0 ] unsigned char 
  2206 ;;  ANNO            1    2[BANK0 ] unsigned char 
  2207 ;;  MES             1    1[BANK0 ] unsigned char 
  2208 ;;  DIA             1    0[BANK0 ] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       0       0       0       0
  2219 ;;      Locals:         0      10       0       0       0
  2220 ;;      Temps:          3       0       0       0       0
  2221 ;;      Totals:         3      10       0       0       0
  2222 ;;Total ram usage:       13 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 2
  2225 ;; This function calls:
  2226 ;;		_EscribeCadenaLCD
  2227 ;;		_SEND_CHAR
  2228 ;;		_SEND_CMD
  2229 ;;		_TECLADO
  2230 ;;		_Write_Byte_To_DS1307_RTC
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function _LEA_FECHA
  2238  0461                     _LEA_FECHA:
  2239  0461                     l1873:	
  2240                           ;incstack = 0
  2241                           ; Regs used in _LEA_FECHA: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2242                           
  2243                           
  2244                           ;main.c: 227:     char fecha[6];;main.c: 229:     SEND_CMD(0x01);
  2245  0461  3001               	movlw	1
  2246  0462  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
  2247  0467                     l1875:
  2248                           
  2249                           ;main.c: 231:     EscribeCadenaLCD("Teclee d?a (DD):");
  2250  0467  3074               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2251  0468  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  2252  046D                     l1877:
  2253                           
  2254                           ;main.c: 232:     char car=0;
  2255  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2256  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2257  046F  01A9               	clrf	LEA_FECHA@car
  2258                           
  2259                           ;main.c: 233:     while (car == 0){
  2260  0470  2C84               	goto	l1883
  2261  0471                     l1879:
  2262                           
  2263                           ;main.c: 234:         car = TECLADO();
  2264  0471  120A  118A  23A2  120A  118A  	fcall	_TECLADO
  2265  0476  00F4               	movwf	??_LEA_FECHA
  2266  0477  0874               	movf	??_LEA_FECHA,w
  2267  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2269  047A  00A9               	movwf	LEA_FECHA@car
  2270  047B                     l1881:
  2271                           
  2272                           ;main.c: 235:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2273  047B  300D               	movlw	13
  2274  047C  00F5               	movwf	??_LEA_FECHA+1
  2275  047D  30FB               	movlw	251
  2276  047E  00F4               	movwf	??_LEA_FECHA
  2277  047F                     u1657:
  2278  047F  0BF4               	decfsz	??_LEA_FECHA,f
  2279  0480  2C7F               	goto	u1657
  2280  0481  0BF5               	decfsz	??_LEA_FECHA+1,f
  2281  0482  2C7F               	goto	u1657
  2282  0483  2C84               	nop2
  2283  0484                     l1883:
  2284                           
  2285                           ;main.c: 233:     while (car == 0){
  2286  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0486  0829               	movf	LEA_FECHA@car,w
  2289  0487  1903               	btfsc	3,2
  2290  0488  2C8A               	goto	u1061
  2291  0489  2C8B               	goto	u1060
  2292  048A                     u1061:
  2293  048A  2C71               	goto	l1879
  2294  048B                     u1060:
  2295  048B                     l1885:
  2296                           
  2297                           ;main.c: 237:     SEND_CHAR(car);
  2298  048B  0829               	movf	LEA_FECHA@car,w
  2299  048C  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  2300  0491                     l1887:
  2301                           
  2302                           ;main.c: 238:     fecha[0] = car;
  2303  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0493  0829               	movf	LEA_FECHA@car,w
  2306  0494  00F4               	movwf	??_LEA_FECHA
  2307  0495  0874               	movf	??_LEA_FECHA,w
  2308  0496  00A3               	movwf	LEA_FECHA@fecha
  2309  0497                     l1889:
  2310                           
  2311                           ;main.c: 240:     car = 0;
  2312  0497  01A9               	clrf	LEA_FECHA@car
  2313                           
  2314                           ;main.c: 241:     while (car == 0){
  2315  0498  2CAC               	goto	l1895
  2316  0499                     l1891:
  2317                           
  2318                           ;main.c: 242:         car = TECLADO();
  2319  0499  120A  118A  23A2  120A  118A  	fcall	_TECLADO
  2320  049E  00F4               	movwf	??_LEA_FECHA
  2321  049F  0874               	movf	??_LEA_FECHA,w
  2322  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2323  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2324  04A2  00A9               	movwf	LEA_FECHA@car
  2325  04A3                     l1893:
  2326                           
  2327                           ;main.c: 243:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2328  04A3  300D               	movlw	13
  2329  04A4  00F5               	movwf	??_LEA_FECHA+1
  2330  04A5  30FB               	movlw	251
  2331  04A6  00F4               	movwf	??_LEA_FECHA
  2332  04A7                     u1667:
  2333  04A7  0BF4               	decfsz	??_LEA_FECHA,f
  2334  04A8  2CA7               	goto	u1667
  2335  04A9  0BF5               	decfsz	??_LEA_FECHA+1,f
  2336  04AA  2CA7               	goto	u1667
  2337  04AB  2CAC               	nop2
  2338  04AC                     l1895:
  2339                           
  2340                           ;main.c: 241:     while (car == 0){
  2341  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2342  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2343  04AE  0829               	movf	LEA_FECHA@car,w
  2344  04AF  1903               	btfsc	3,2
  2345  04B0  2CB2               	goto	u1071
  2346  04B1  2CB3               	goto	u1070
  2347  04B2                     u1071:
  2348  04B2  2C99               	goto	l1891
  2349  04B3                     u1070:
  2350  04B3                     l1897:
  2351                           
  2352                           ;main.c: 245:     SEND_CHAR(car);
  2353  04B3  0829               	movf	LEA_FECHA@car,w
  2354  04B4  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  2355  04B9                     l1899:
  2356                           
  2357                           ;main.c: 246:     fecha[1] = car;
  2358  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2359  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2360  04BB  0829               	movf	LEA_FECHA@car,w
  2361  04BC  00F4               	movwf	??_LEA_FECHA
  2362  04BD  0874               	movf	??_LEA_FECHA,w
  2363  04BE  00A4               	movwf	LEA_FECHA@fecha+1
  2364  04BF                     l1901:
  2365                           
  2366                           ;main.c: 248:     _delay((unsigned long)((200)*(4000000/4000.0)));
  2367  04BF  3002               	movlw	2
  2368  04C0  00F6               	movwf	??_LEA_FECHA+2
  2369  04C1  3004               	movlw	4
  2370  04C2  00F5               	movwf	??_LEA_FECHA+1
  2371  04C3  30BA               	movlw	186
  2372  04C4  00F4               	movwf	??_LEA_FECHA
  2373  04C5                     u1677:
  2374  04C5  0BF4               	decfsz	??_LEA_FECHA,f
  2375  04C6  2CC5               	goto	u1677
  2376  04C7  0BF5               	decfsz	??_LEA_FECHA+1,f
  2377  04C8  2CC5               	goto	u1677
  2378  04C9  0BF6               	decfsz	??_LEA_FECHA+2,f
  2379  04CA  2CC5               	goto	u1677
  2380  04CB  0000               	nop
  2381                           
  2382                           ;main.c: 251:     SEND_CMD(0x01);
  2383  04CC  3001               	movlw	1
  2384  04CD  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
  2385  04D2                     l1903:
  2386                           
  2387                           ;main.c: 253:     EscribeCadenaLCD("Teclee mes (MM):");
  2388  04D2  3085               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2389  04D3  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  2390  04D8                     l1905:
  2391                           
  2392                           ;main.c: 256:     car = 0;
  2393  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2394  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2395  04DA  01A9               	clrf	LEA_FECHA@car
  2396                           
  2397                           ;main.c: 257:     while (car == 0){
  2398  04DB  2CEF               	goto	l1911
  2399  04DC                     l1907:
  2400                           
  2401                           ;main.c: 258:         car = TECLADO();
  2402  04DC  120A  118A  23A2  120A  118A  	fcall	_TECLADO
  2403  04E1  00F4               	movwf	??_LEA_FECHA
  2404  04E2  0874               	movf	??_LEA_FECHA,w
  2405  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2406  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2407  04E5  00A9               	movwf	LEA_FECHA@car
  2408  04E6                     l1909:
  2409                           
  2410                           ;main.c: 259:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2411  04E6  300D               	movlw	13
  2412  04E7  00F5               	movwf	??_LEA_FECHA+1
  2413  04E8  30FB               	movlw	251
  2414  04E9  00F4               	movwf	??_LEA_FECHA
  2415  04EA                     u1687:
  2416  04EA  0BF4               	decfsz	??_LEA_FECHA,f
  2417  04EB  2CEA               	goto	u1687
  2418  04EC  0BF5               	decfsz	??_LEA_FECHA+1,f
  2419  04ED  2CEA               	goto	u1687
  2420  04EE  2CEF               	nop2
  2421  04EF                     l1911:
  2422                           
  2423                           ;main.c: 257:     while (car == 0){
  2424  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2425  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2426  04F1  0829               	movf	LEA_FECHA@car,w
  2427  04F2  1903               	btfsc	3,2
  2428  04F3  2CF5               	goto	u1081
  2429  04F4  2CF6               	goto	u1080
  2430  04F5                     u1081:
  2431  04F5  2CDC               	goto	l1907
  2432  04F6                     u1080:
  2433  04F6                     l1913:
  2434                           
  2435                           ;main.c: 262:     SEND_CHAR(car);
  2436  04F6  0829               	movf	LEA_FECHA@car,w
  2437  04F7  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  2438  04FC                     l1915:
  2439                           
  2440                           ;main.c: 263:     fecha[3] = car;
  2441  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2442  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2443  04FE  0829               	movf	LEA_FECHA@car,w
  2444  04FF  00F4               	movwf	??_LEA_FECHA
  2445  0500  0874               	movf	??_LEA_FECHA,w
  2446  0501  00A6               	movwf	LEA_FECHA@fecha+3
  2447  0502                     l1917:
  2448                           
  2449                           ;main.c: 264:     _delay((unsigned long)((200)*(4000000/4000.0)));
  2450  0502  3002               	movlw	2
  2451  0503  00F6               	movwf	??_LEA_FECHA+2
  2452  0504  3004               	movlw	4
  2453  0505  00F5               	movwf	??_LEA_FECHA+1
  2454  0506  30BA               	movlw	186
  2455  0507  00F4               	movwf	??_LEA_FECHA
  2456  0508                     u1697:
  2457  0508  0BF4               	decfsz	??_LEA_FECHA,f
  2458  0509  2D08               	goto	u1697
  2459  050A  0BF5               	decfsz	??_LEA_FECHA+1,f
  2460  050B  2D08               	goto	u1697
  2461  050C  0BF6               	decfsz	??_LEA_FECHA+2,f
  2462  050D  2D08               	goto	u1697
  2463  050E  0000               	nop
  2464                           
  2465                           ;main.c: 267:     SEND_CMD(0x01);
  2466  050F  3001               	movlw	1
  2467  0510  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
  2468  0515                     l1919:
  2469                           
  2470                           ;main.c: 269:     EscribeCadenaLCD("Teclee a?o (AA):");
  2471  0515  3063               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2472  0516  120A  118A  221F  120A  118A  	fcall	_EscribeCadenaLCD
  2473  051B                     l1921:
  2474                           
  2475                           ;main.c: 270:     car = 0;
  2476  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2477  051C  1303               	bcf	3,6	;RP1=0, select bank0
  2478  051D  01A9               	clrf	LEA_FECHA@car
  2479                           
  2480                           ;main.c: 271:     while (car == 0){
  2481  051E  2D32               	goto	l1927
  2482  051F                     l1923:
  2483                           
  2484                           ;main.c: 272:         car = TECLADO();
  2485  051F  120A  118A  23A2  120A  118A  	fcall	_TECLADO
  2486  0524  00F4               	movwf	??_LEA_FECHA
  2487  0525  0874               	movf	??_LEA_FECHA,w
  2488  0526  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0527  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0528  00A9               	movwf	LEA_FECHA@car
  2491  0529                     l1925:
  2492                           
  2493                           ;main.c: 273:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2494  0529  300D               	movlw	13
  2495  052A  00F5               	movwf	??_LEA_FECHA+1
  2496  052B  30FB               	movlw	251
  2497  052C  00F4               	movwf	??_LEA_FECHA
  2498  052D                     u1707:
  2499  052D  0BF4               	decfsz	??_LEA_FECHA,f
  2500  052E  2D2D               	goto	u1707
  2501  052F  0BF5               	decfsz	??_LEA_FECHA+1,f
  2502  0530  2D2D               	goto	u1707
  2503  0531  2D32               	nop2
  2504  0532                     l1927:
  2505                           
  2506                           ;main.c: 271:     while (car == 0){
  2507  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0534  0829               	movf	LEA_FECHA@car,w
  2510  0535  1903               	btfsc	3,2
  2511  0536  2D38               	goto	u1091
  2512  0537  2D39               	goto	u1090
  2513  0538                     u1091:
  2514  0538  2D1F               	goto	l1923
  2515  0539                     u1090:
  2516  0539                     l1929:
  2517                           
  2518                           ;main.c: 277:     SEND_CHAR(car);
  2519  0539  0829               	movf	LEA_FECHA@car,w
  2520  053A  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  2521  053F                     l1931:
  2522                           
  2523                           ;main.c: 278:     fecha[4] = car;
  2524  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2525  0540  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0541  0829               	movf	LEA_FECHA@car,w
  2527  0542  00F4               	movwf	??_LEA_FECHA
  2528  0543  0874               	movf	??_LEA_FECHA,w
  2529  0544  00A7               	movwf	LEA_FECHA@fecha+4
  2530  0545                     l1933:
  2531                           
  2532                           ;main.c: 280:     car = 0;
  2533  0545  01A9               	clrf	LEA_FECHA@car
  2534                           
  2535                           ;main.c: 281:     while (car == 0){
  2536  0546  2D5A               	goto	l1939
  2537  0547                     l1935:
  2538                           
  2539                           ;main.c: 282:         car = TECLADO();
  2540  0547  120A  118A  23A2  120A  118A  	fcall	_TECLADO
  2541  054C  00F4               	movwf	??_LEA_FECHA
  2542  054D  0874               	movf	??_LEA_FECHA,w
  2543  054E  1283               	bcf	3,5	;RP0=0, select bank0
  2544  054F  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0550  00A9               	movwf	LEA_FECHA@car
  2546  0551                     l1937:
  2547                           
  2548                           ;main.c: 283:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2549  0551  300D               	movlw	13
  2550  0552  00F5               	movwf	??_LEA_FECHA+1
  2551  0553  30FB               	movlw	251
  2552  0554  00F4               	movwf	??_LEA_FECHA
  2553  0555                     u1717:
  2554  0555  0BF4               	decfsz	??_LEA_FECHA,f
  2555  0556  2D55               	goto	u1717
  2556  0557  0BF5               	decfsz	??_LEA_FECHA+1,f
  2557  0558  2D55               	goto	u1717
  2558  0559  2D5A               	nop2
  2559  055A                     l1939:
  2560                           
  2561                           ;main.c: 281:     while (car == 0){
  2562  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2563  055B  1303               	bcf	3,6	;RP1=0, select bank0
  2564  055C  0829               	movf	LEA_FECHA@car,w
  2565  055D  1903               	btfsc	3,2
  2566  055E  2D60               	goto	u1101
  2567  055F  2D61               	goto	u1100
  2568  0560                     u1101:
  2569  0560  2D47               	goto	l1935
  2570  0561                     u1100:
  2571  0561                     l1941:
  2572                           
  2573                           ;main.c: 286:     SEND_CHAR(car);
  2574  0561  0829               	movf	LEA_FECHA@car,w
  2575  0562  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  2576  0567                     l1943:
  2577                           
  2578                           ;main.c: 287:     fecha[5] = car;
  2579  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0569  0829               	movf	LEA_FECHA@car,w
  2582  056A  00F4               	movwf	??_LEA_FECHA
  2583  056B  0874               	movf	??_LEA_FECHA,w
  2584  056C  00A8               	movwf	LEA_FECHA@fecha+5
  2585  056D                     l1945:
  2586                           
  2587                           ;main.c: 288:     _delay((unsigned long)((200)*(4000000/4000.0)));
  2588  056D  3002               	movlw	2
  2589  056E  00F6               	movwf	??_LEA_FECHA+2
  2590  056F  3004               	movlw	4
  2591  0570  00F5               	movwf	??_LEA_FECHA+1
  2592  0571  30BA               	movlw	186
  2593  0572  00F4               	movwf	??_LEA_FECHA
  2594  0573                     u1727:
  2595  0573  0BF4               	decfsz	??_LEA_FECHA,f
  2596  0574  2D73               	goto	u1727
  2597  0575  0BF5               	decfsz	??_LEA_FECHA+1,f
  2598  0576  2D73               	goto	u1727
  2599  0577  0BF6               	decfsz	??_LEA_FECHA+2,f
  2600  0578  2D73               	goto	u1727
  2601  0579  0000               	nop
  2602                           
  2603                           ;main.c: 290:     SEND_CMD(1);
  2604  057A  3001               	movlw	1
  2605  057B  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
  2606  0580                     l1947:
  2607                           
  2608                           ;main.c: 292:     char DIA = (fecha[0]<<4) + (fecha[1]&0x0F);
  2609  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0582  0823               	movf	LEA_FECHA@fecha,w
  2612  0583  00F4               	movwf	??_LEA_FECHA
  2613  0584  3004               	movlw	4
  2614  0585                     u1115:
  2615  0585  1003               	clrc
  2616  0586  0DF4               	rlf	??_LEA_FECHA,f
  2617  0587  3EFF               	addlw	-1
  2618  0588  1D03               	skipz
  2619  0589  2D85               	goto	u1115
  2620  058A  0824               	movf	LEA_FECHA@fecha+1,w
  2621  058B  390F               	andlw	15
  2622  058C  0774               	addwf	??_LEA_FECHA,w
  2623  058D  00F5               	movwf	??_LEA_FECHA+1
  2624  058E  0875               	movf	??_LEA_FECHA+1,w
  2625  058F  00A0               	movwf	LEA_FECHA@DIA
  2626  0590                     l1949:
  2627                           
  2628                           ;main.c: 293:     Write_Byte_To_DS1307_RTC(4,DIA);
  2629  0590  0820               	movf	LEA_FECHA@DIA,w
  2630  0591  00F4               	movwf	??_LEA_FECHA
  2631  0592  0874               	movf	??_LEA_FECHA,w
  2632  0593  00F1               	movwf	Write_Byte_To_DS1307_RTC@DataByte
  2633  0594  3004               	movlw	4
  2634  0595  120A  118A  2260  120A  118A  	fcall	_Write_Byte_To_DS1307_RTC
  2635                           
  2636                           ;main.c: 295:     char MES = (fecha[2]<<4) + (fecha[3]&0x0F);
  2637  059A  1283               	bcf	3,5	;RP0=0, select bank0
  2638  059B  1303               	bcf	3,6	;RP1=0, select bank0
  2639  059C  0825               	movf	LEA_FECHA@fecha+2,w
  2640  059D  00F4               	movwf	??_LEA_FECHA
  2641  059E  3004               	movlw	4
  2642  059F                     u1125:
  2643  059F  1003               	clrc
  2644  05A0  0DF4               	rlf	??_LEA_FECHA,f
  2645  05A1  3EFF               	addlw	-1
  2646  05A2  1D03               	skipz
  2647  05A3  2D9F               	goto	u1125
  2648  05A4  0826               	movf	LEA_FECHA@fecha+3,w
  2649  05A5  390F               	andlw	15
  2650  05A6  0774               	addwf	??_LEA_FECHA,w
  2651  05A7  00F5               	movwf	??_LEA_FECHA+1
  2652  05A8  0875               	movf	??_LEA_FECHA+1,w
  2653  05A9  00A1               	movwf	LEA_FECHA@MES
  2654  05AA                     l1951:
  2655                           
  2656                           ;main.c: 296:     Write_Byte_To_DS1307_RTC(5,MES);
  2657  05AA  0821               	movf	LEA_FECHA@MES,w
  2658  05AB  00F4               	movwf	??_LEA_FECHA
  2659  05AC  0874               	movf	??_LEA_FECHA,w
  2660  05AD  00F1               	movwf	Write_Byte_To_DS1307_RTC@DataByte
  2661  05AE  3005               	movlw	5
  2662  05AF  120A  118A  2260  120A  118A  	fcall	_Write_Byte_To_DS1307_RTC
  2663  05B4                     l1953:
  2664                           
  2665                           ;main.c: 298:     char ANNO = (fecha[4]<<4) + (fecha[5]&0x0F);
  2666  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2667  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2668  05B6  0827               	movf	LEA_FECHA@fecha+4,w
  2669  05B7  00F4               	movwf	??_LEA_FECHA
  2670  05B8  3004               	movlw	4
  2671  05B9                     u1135:
  2672  05B9  1003               	clrc
  2673  05BA  0DF4               	rlf	??_LEA_FECHA,f
  2674  05BB  3EFF               	addlw	-1
  2675  05BC  1D03               	skipz
  2676  05BD  2DB9               	goto	u1135
  2677  05BE  0828               	movf	LEA_FECHA@fecha+5,w
  2678  05BF  390F               	andlw	15
  2679  05C0  0774               	addwf	??_LEA_FECHA,w
  2680  05C1  00F5               	movwf	??_LEA_FECHA+1
  2681  05C2  0875               	movf	??_LEA_FECHA+1,w
  2682  05C3  00A2               	movwf	LEA_FECHA@ANNO
  2683                           
  2684                           ;main.c: 299:     Write_Byte_To_DS1307_RTC(6,ANNO);
  2685  05C4  0822               	movf	LEA_FECHA@ANNO,w
  2686  05C5  00F4               	movwf	??_LEA_FECHA
  2687  05C6  0874               	movf	??_LEA_FECHA,w
  2688  05C7  00F1               	movwf	Write_Byte_To_DS1307_RTC@DataByte
  2689  05C8  3006               	movlw	6
  2690  05C9  120A  118A  2260  120A  118A  	fcall	_Write_Byte_To_DS1307_RTC
  2691  05CE                     l267:
  2692  05CE  0008               	return
  2693  05CF                     __end_of_LEA_FECHA:
  2694                           
  2695                           	psect	text11
  2696  0260                     __ptext11:	
  2697 ;; *************** function _Write_Byte_To_DS1307_RTC *****************
  2698 ;; Defined at:
  2699 ;;		line 9 in file "./DS1307.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  Address         1    wreg     unsigned char 
  2702 ;;  DataByte        1    1[COMMON] unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  Address         1    2[COMMON] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, pclath, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2714 ;;      Params:         1       0       0       0       0
  2715 ;;      Locals:         1       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0
  2717 ;;      Totals:         2       0       0       0       0
  2718 ;;Total ram usage:        2 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 1
  2721 ;; This function calls:
  2722 ;;		_I2C_Start
  2723 ;;		_I2C_Stop
  2724 ;;		_I2C_Write_Byte
  2725 ;; This function is called by:
  2726 ;;		_RecibeHHMM
  2727 ;;		_LEA_FECHA
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           
  2732                           ;psect for function _Write_Byte_To_DS1307_RTC
  2733  0260                     _Write_Byte_To_DS1307_RTC:
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in _Write_Byte_To_DS1307_RTC: [wreg+status,2+status,0+pclath+cstack]
  2737                           ;Write_Byte_To_DS1307_RTC@Address stored from wreg
  2738  0260  00F2               	movwf	Write_Byte_To_DS1307_RTC@Address
  2739  0261                     l1587:
  2740                           
  2741                           ;./DS1307.c: 9: void Write_Byte_To_DS1307_RTC(unsigned char Address, unsigned char DataB
      +                          yte);./DS1307.c: 10: {;./DS1307.c: 11:  I2C_Start();
  2742  0261  120A  118A  218D  120A  118A  	fcall	_I2C_Start
  2743  0266                     l1591:	
  2744                           ;./DS1307.c: 14:  while(I2C_Write_Byte(0xD0 + 0) == 1)
  2745                           
  2746                           
  2747                           ;./DS1307.c: 14:  while(I2C_Write_Byte(0xD0 + 0) == 1)
  2748  0266  30D0               	movlw	208
  2749  0267  120A  118A  21DA  120A  118A  	fcall	_I2C_Write_Byte
  2750  026C  3A01               	xorlw	1
  2751  026D  1903               	skipnz
  2752  026E  2A70               	goto	u791
  2753  026F  2A71               	goto	u790
  2754  0270                     u791:
  2755  0270  2A61               	goto	l1587
  2756  0271                     u790:
  2757  0271                     l1593:
  2758                           
  2759                           ;./DS1307.c: 17:  I2C_Write_Byte(Address);
  2760  0271  0872               	movf	Write_Byte_To_DS1307_RTC@Address,w
  2761  0272  120A  118A  21DA  120A  118A  	fcall	_I2C_Write_Byte
  2762                           
  2763                           ;./DS1307.c: 18:  I2C_Write_Byte(DataByte);
  2764  0277  0871               	movf	Write_Byte_To_DS1307_RTC@DataByte,w
  2765  0278  120A  118A  21DA  120A  118A  	fcall	_I2C_Write_Byte
  2766  027D                     l1595:
  2767                           
  2768                           ;./DS1307.c: 19:  I2C_Stop();
  2769  027D  120A  118A  2197  120A  118A  	fcall	_I2C_Stop
  2770  0282                     l111:
  2771  0282  0008               	return
  2772  0283                     __end_of_Write_Byte_To_DS1307_RTC:
  2773                           
  2774                           	psect	text12
  2775  01DA                     __ptext12:	
  2776 ;; *************** function _I2C_Write_Byte *****************
  2777 ;; Defined at:
  2778 ;;		line 64 in file "./I2C.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  Byte            1    wreg     unsigned char 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  Byte            1    0[COMMON] unsigned char 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      unsigned char 
  2785 ;; Registers used:
  2786 ;;		wreg
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       0       0       0       0
  2793 ;;      Locals:         1       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0
  2795 ;;      Totals:         1       0       0       0       0
  2796 ;;Total ram usage:        1 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_Write_Byte_To_DS1307_RTC
  2802 ;;		_Read_Byte_From_DS1307_RTC
  2803 ;;		_Write_Bytes_To_DS1307_RTC
  2804 ;;		_Read_Bytes_From_DS1307_RTC
  2805 ;;		_ESCRIBA_SEE
  2806 ;;		_LEA_SEE
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _I2C_Write_Byte
  2812  01DA                     _I2C_Write_Byte:
  2813                           
  2814                           ;incstack = 0
  2815                           ; Regs used in _I2C_Write_Byte: [wreg]
  2816                           ;I2C_Write_Byte@Byte stored from wreg
  2817  01DA  00F0               	movwf	I2C_Write_Byte@Byte
  2818  01DB                     l1559:
  2819                           
  2820                           ;./I2C.c: 64: char I2C_Write_Byte(unsigned char Byte);./I2C.c: 65: {;./I2C.c: 66:  SSPBU
      +                          F = Byte;
  2821  01DB  0870               	movf	I2C_Write_Byte@Byte,w
  2822  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2823  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  2824  01DE  0093               	movwf	19	;volatile
  2825  01DF                     l92:	
  2826                           ;./I2C.c: 67:  while(!SSPIF);
  2827                           
  2828  01DF  1D8C               	btfss	12,3	;volatile
  2829  01E0  29E2               	goto	u731
  2830  01E1  29E3               	goto	u730
  2831  01E2                     u731:
  2832  01E2  29DF               	goto	l92
  2833  01E3                     u730:
  2834  01E3                     l94:
  2835                           
  2836                           ;./I2C.c: 68:  SSPIF = 0;
  2837  01E3  118C               	bcf	12,3	;volatile
  2838  01E4                     l1561:
  2839                           
  2840                           ;./I2C.c: 70:  return ACKSTAT;
  2841  01E4  3000               	movlw	0
  2842  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2843  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2844  01E7  1B11               	btfsc	17,6	;volatile
  2845  01E8  3001               	movlw	1
  2846  01E9                     l95:
  2847  01E9  0008               	return
  2848  01EA                     __end_of_I2C_Write_Byte:
  2849                           
  2850                           	psect	text13
  2851  0197                     __ptext13:	
  2852 ;; *************** function _I2C_Stop *****************
  2853 ;; Defined at:
  2854 ;;		line 35 in file "./I2C.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		None
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         0       0       0       0       0
  2869 ;;      Locals:         0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0
  2871 ;;      Totals:         0       0       0       0       0
  2872 ;;Total ram usage:        0 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_Write_Byte_To_DS1307_RTC
  2878 ;;		_Read_Byte_From_DS1307_RTC
  2879 ;;		_Write_Bytes_To_DS1307_RTC
  2880 ;;		_Read_Bytes_From_DS1307_RTC
  2881 ;;		_ESCRIBA_SEE
  2882 ;;		_LEA_SEE
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           
  2887                           ;psect for function _I2C_Stop
  2888  0197                     _I2C_Stop:
  2889  0197                     l1557:	
  2890                           ;incstack = 0
  2891                           ; Regs used in _I2C_Stop: []
  2892                           
  2893                           
  2894                           ;./I2C.c: 37:  PEN = 1;
  2895  0197  1683               	bsf	3,5	;RP0=1, select bank1
  2896  0198  1303               	bcf	3,6	;RP1=0, select bank1
  2897  0199  1511               	bsf	17,2	;volatile
  2898  019A                     l74:	
  2899                           ;./I2C.c: 38:  while(!SSPIF);
  2900                           
  2901  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2902  019B  1D8C               	btfss	12,3	;volatile
  2903  019C  299E               	goto	u721
  2904  019D  299F               	goto	u720
  2905  019E                     u721:
  2906  019E  299A               	goto	l74
  2907  019F                     u720:
  2908  019F                     l76:
  2909                           
  2910                           ;./I2C.c: 39:  SSPIF = 0;
  2911  019F  118C               	bcf	12,3	;volatile
  2912  01A0                     l77:
  2913  01A0  0008               	return
  2914  01A1                     __end_of_I2C_Stop:
  2915                           
  2916                           	psect	text14
  2917  018D                     __ptext14:	
  2918 ;; *************** function _I2C_Start *****************
  2919 ;; Defined at:
  2920 ;;		line 17 in file "./I2C.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		None
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2934 ;;      Params:         0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used: 1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_Write_Byte_To_DS1307_RTC
  2944 ;;		_Read_Byte_From_DS1307_RTC
  2945 ;;		_Write_Bytes_To_DS1307_RTC
  2946 ;;		_Read_Bytes_From_DS1307_RTC
  2947 ;;		_ESCRIBA_SEE
  2948 ;;		_LEA_SEE
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           
  2953                           ;psect for function _I2C_Start
  2954  018D                     _I2C_Start:
  2955  018D                     l1555:	
  2956                           ;incstack = 0
  2957                           ; Regs used in _I2C_Start: []
  2958                           
  2959                           
  2960                           ;./I2C.c: 19:  SEN = 1;
  2961  018D  1683               	bsf	3,5	;RP0=1, select bank1
  2962  018E  1303               	bcf	3,6	;RP1=0, select bank1
  2963  018F  1411               	bsf	17,0	;volatile
  2964  0190                     l62:	
  2965                           ;./I2C.c: 20:  while(!SSPIF);
  2966                           
  2967  0190  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0191  1D8C               	btfss	12,3	;volatile
  2969  0192  2994               	goto	u711
  2970  0193  2995               	goto	u710
  2971  0194                     u711:
  2972  0194  2990               	goto	l62
  2973  0195                     u710:
  2974  0195                     l64:
  2975                           
  2976                           ;./I2C.c: 21:  SSPIF = 0;
  2977  0195  118C               	bcf	12,3	;volatile
  2978  0196                     l65:
  2979  0196  0008               	return
  2980  0197                     __end_of_I2C_Start:
  2981                           
  2982                           	psect	text15
  2983  03A2                     __ptext15:	
  2984 ;; *************** function _TECLADO *****************
  2985 ;; Defined at:
  2986 ;;		line 155 in file "main.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  Tecla           1    3[COMMON] unsigned char 
  2991 ;;  VPTOD           1    2[COMMON] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      unsigned char 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3001 ;;      Params:         0       0       0       0       0
  3002 ;;      Locals:         2       0       0       0       0
  3003 ;;      Temps:          2       0       0       0       0
  3004 ;;      Totals:         4       0       0       0       0
  3005 ;;Total ram usage:        4 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_LEA_FECHA
  3011 ;;		_main
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           
  3016                           ;psect for function _TECLADO
  3017  03A2                     _TECLADO:
  3018  03A2                     l1621:	
  3019                           ;incstack = 0
  3020                           ; Regs used in _TECLADO: [wreg-fsr0h+status,2+status,0]
  3021                           
  3022                           
  3023                           ;main.c: 156:     char Tecla = 1;
  3024  03A2  01F3               	clrf	TECLADO@Tecla
  3025  03A3  0AF3               	incf	TECLADO@Tecla,f
  3026  03A4                     l1623:
  3027                           
  3028                           ;main.c: 157:     char VPTOD = 0x0E;
  3029  03A4  300E               	movlw	14
  3030  03A5  00F0               	movwf	??_TECLADO
  3031  03A6  0870               	movf	??_TECLADO,w
  3032  03A7  00F2               	movwf	TECLADO@VPTOD
  3033  03A8                     l211:	
  3034                           ;main.c: 159:     do
  3035                           
  3036                           
  3037                           ;main.c: 160:     {;main.c: 161:         PORTD = VPTOD;
  3038  03A8  0872               	movf	TECLADO@VPTOD,w
  3039  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3040  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3041  03AB  0088               	movwf	8	;volatile
  3042  03AC                     l1625:
  3043                           
  3044                           ;main.c: 162:         if (PORTDbits.RD4 == 0) goto Antirrebote;
  3045  03AC  1A08               	btfsc	8,4	;volatile
  3046  03AD  2BAF               	goto	u821
  3047  03AE  2BB0               	goto	u820
  3048  03AF                     u821:
  3049  03AF  2BB1               	goto	l1629
  3050  03B0                     u820:
  3051  03B0  2BE7               	goto	l219
  3052  03B1                     l1629:
  3053                           
  3054                           ;main.c: 163:         Tecla++;
  3055  03B1  3001               	movlw	1
  3056  03B2  00F0               	movwf	??_TECLADO
  3057  03B3  0870               	movf	??_TECLADO,w
  3058  03B4  07F3               	addwf	TECLADO@Tecla,f
  3059  03B5                     l1631:
  3060                           
  3061                           ;main.c: 164:         if (PORTDbits.RD5 == 0) goto Antirrebote;
  3062  03B5  1A88               	btfsc	8,5	;volatile
  3063  03B6  2BB8               	goto	u831
  3064  03B7  2BB9               	goto	u830
  3065  03B8                     u831:
  3066  03B8  2BBA               	goto	l1635
  3067  03B9                     u830:
  3068  03B9  2BE7               	goto	l219
  3069  03BA                     l1635:
  3070                           
  3071                           ;main.c: 165:         Tecla++;
  3072  03BA  3001               	movlw	1
  3073  03BB  00F0               	movwf	??_TECLADO
  3074  03BC  0870               	movf	??_TECLADO,w
  3075  03BD  07F3               	addwf	TECLADO@Tecla,f
  3076  03BE                     l1637:
  3077                           
  3078                           ;main.c: 166:         if (PORTDbits.RD6 == 0) goto Antirrebote;
  3079  03BE  1B08               	btfsc	8,6	;volatile
  3080  03BF  2BC1               	goto	u841
  3081  03C0  2BC2               	goto	u840
  3082  03C1                     u841:
  3083  03C1  2BC3               	goto	l1641
  3084  03C2                     u840:
  3085  03C2  2BE7               	goto	l219
  3086  03C3                     l1641:
  3087                           
  3088                           ;main.c: 167:         Tecla++;
  3089  03C3  3001               	movlw	1
  3090  03C4  00F0               	movwf	??_TECLADO
  3091  03C5  0870               	movf	??_TECLADO,w
  3092  03C6  07F3               	addwf	TECLADO@Tecla,f
  3093  03C7                     l1643:
  3094                           
  3095                           ;main.c: 168:         if (PORTDbits.RD7 == 0) goto Antirrebote;
  3096  03C7  1B88               	btfsc	8,7	;volatile
  3097  03C8  2BCA               	goto	u851
  3098  03C9  2BCB               	goto	u850
  3099  03CA                     u851:
  3100  03CA  2BCC               	goto	l1647
  3101  03CB                     u850:
  3102  03CB  2BE7               	goto	l219
  3103  03CC                     l1647:
  3104                           
  3105                           ;main.c: 169:         Tecla++;
  3106  03CC  3001               	movlw	1
  3107  03CD  00F0               	movwf	??_TECLADO
  3108  03CE  0870               	movf	??_TECLADO,w
  3109  03CF  07F3               	addwf	TECLADO@Tecla,f
  3110  03D0                     l1649:
  3111                           
  3112                           ;main.c: 170:         VPTOD = (char)(VPTOD << 1) | 1;
  3113  03D0  1403               	setc
  3114  03D1  0DF2               	rlf	TECLADO@VPTOD,f
  3115                           
  3116                           ;main.c: 171:         _delay((unsigned long)((10)*(4000000/4000.0)));
  3117  03D2  300D               	movlw	13
  3118  03D3  00F1               	movwf	??_TECLADO+1
  3119  03D4  30FB               	movlw	251
  3120  03D5  00F0               	movwf	??_TECLADO
  3121  03D6                     u1737:
  3122  03D6  0BF0               	decfsz	??_TECLADO,f
  3123  03D7  2BD6               	goto	u1737
  3124  03D8  0BF1               	decfsz	??_TECLADO+1,f
  3125  03D9  2BD6               	goto	u1737
  3126  03DA  2BDB               	nop2
  3127                           
  3128                           ;main.c: 173:     } while (Tecla < 17);
  3129  03DB  3011               	movlw	17
  3130  03DC  0273               	subwf	TECLADO@Tecla,w
  3131  03DD  1C03               	skipc
  3132  03DE  2BE0               	goto	u861
  3133  03DF  2BE1               	goto	u860
  3134  03E0                     u861:
  3135  03E0  2BA8               	goto	l211
  3136  03E1                     u860:
  3137  03E1                     l1651:
  3138                           
  3139                           ;main.c: 174:     PORTD = 0xFF;
  3140  03E1  30FF               	movlw	255
  3141  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3142  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3143  03E4  0088               	movwf	8	;volatile
  3144                           
  3145                           ;main.c: 175:     return 0;
  3146  03E5  3000               	movlw	0
  3147  03E6  2C60               	goto	l218
  3148  03E7                     l219:
  3149  03E7  1E08               	btfss	8,4	;volatile
  3150  03E8  2BEA               	goto	u871
  3151  03E9  2BEB               	goto	u870
  3152  03EA                     u871:
  3153  03EA  2BE7               	goto	l219
  3154  03EB                     u870:
  3155  03EB                     l222:
  3156  03EB  1E88               	btfss	8,5	;volatile
  3157  03EC  2BEE               	goto	u881
  3158  03ED  2BEF               	goto	u880
  3159  03EE                     u881:
  3160  03EE  2BEB               	goto	l222
  3161  03EF                     u880:
  3162  03EF                     l225:
  3163  03EF  1F08               	btfss	8,6	;volatile
  3164  03F0  2BF2               	goto	u891
  3165  03F1  2BF3               	goto	u890
  3166  03F2                     u891:
  3167  03F2  2BEF               	goto	l225
  3168  03F3                     u890:
  3169  03F3                     l228:
  3170  03F3  1F88               	btfss	8,7	;volatile
  3171  03F4  2BF6               	goto	u901
  3172  03F5  2BF7               	goto	u900
  3173  03F6                     u901:
  3174  03F6  2BF3               	goto	l228
  3175  03F7                     u900:
  3176  03F7                     l1655:
  3177                           
  3178                           ;main.c: 182:     _delay((unsigned long)((100)*(4000000/4000.0)));
  3179  03F7  3082               	movlw	130
  3180  03F8  00F1               	movwf	??_TECLADO+1
  3181  03F9  30DD               	movlw	221
  3182  03FA  00F0               	movwf	??_TECLADO
  3183  03FB                     u1747:
  3184  03FB  0BF0               	decfsz	??_TECLADO,f
  3185  03FC  2BFB               	goto	u1747
  3186  03FD  0BF1               	decfsz	??_TECLADO+1,f
  3187  03FE  2BFB               	goto	u1747
  3188  03FF  2C00               	nop2
  3189                           
  3190                           ;main.c: 183:     PORTD = 0xFF;
  3191  0400  30FF               	movlw	255
  3192  0401  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0402  1303               	bcf	3,6	;RP1=0, select bank0
  3194  0403  0088               	movwf	8	;volatile
  3195                           
  3196                           ;main.c: 184:     switch(Tecla){
  3197  0404  2C25               	goto	l1723
  3198  0405                     l1657:
  3199                           
  3200                           ;main.c: 186:             return '7';
  3201  0405  3037               	movlw	55
  3202  0406  2C60               	goto	l218
  3203  0407                     l1661:
  3204                           
  3205                           ;main.c: 188:             return '8';
  3206  0407  3038               	movlw	56
  3207  0408  2C60               	goto	l218
  3208  0409                     l1665:
  3209                           
  3210                           ;main.c: 190:             return '9';
  3211  0409  3039               	movlw	57
  3212  040A  2C60               	goto	l218
  3213  040B                     l1669:
  3214                           
  3215                           ;main.c: 192:             return '/';
  3216  040B  302F               	movlw	47
  3217  040C  2C60               	goto	l218
  3218  040D                     l1673:
  3219                           
  3220                           ;main.c: 194:             return '4';
  3221  040D  3034               	movlw	52
  3222  040E  2C60               	goto	l218
  3223  040F                     l1677:
  3224                           
  3225                           ;main.c: 196:             return '5';
  3226  040F  3035               	movlw	53
  3227  0410  2C60               	goto	l218
  3228  0411                     l1681:
  3229                           
  3230                           ;main.c: 198:             return '6';
  3231  0411  3036               	movlw	54
  3232  0412  2C60               	goto	l218
  3233  0413                     l1685:
  3234                           
  3235                           ;main.c: 200:             return 'X';
  3236  0413  3058               	movlw	88
  3237  0414  2C60               	goto	l218
  3238  0415                     l1689:
  3239                           
  3240                           ;main.c: 202:             return '1';
  3241  0415  3031               	movlw	49
  3242  0416  2C60               	goto	l218
  3243  0417                     l1693:
  3244                           
  3245                           ;main.c: 204:             return '2';
  3246  0417  3032               	movlw	50
  3247  0418  2C60               	goto	l218
  3248  0419                     l1697:
  3249                           
  3250                           ;main.c: 206:             return '3';
  3251  0419  3033               	movlw	51
  3252  041A  2C60               	goto	l218
  3253  041B                     l1701:
  3254                           
  3255                           ;main.c: 208:             return '-';
  3256  041B  302D               	movlw	45
  3257  041C  2C60               	goto	l218
  3258  041D                     l1705:
  3259                           
  3260                           ;main.c: 210:             return 0x0D;
  3261  041D  300D               	movlw	13
  3262  041E  2C60               	goto	l218
  3263  041F                     l1709:
  3264                           
  3265                           ;main.c: 212:             return '0';
  3266  041F  3030               	movlw	48
  3267  0420  2C60               	goto	l218
  3268  0421                     l1713:
  3269                           
  3270                           ;main.c: 214:             return '=';
  3271  0421  303D               	movlw	61
  3272  0422  2C60               	goto	l218
  3273  0423                     l1717:
  3274                           
  3275                           ;main.c: 216:             return '+';
  3276  0423  302B               	movlw	43
  3277  0424  2C60               	goto	l218
  3278  0425                     l1723:
  3279  0425  0873               	movf	TECLADO@Tecla,w
  3280  0426  00F0               	movwf	??_TECLADO
  3281  0427  01F1               	clrf	??_TECLADO+1
  3282                           
  3283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3284                           ; Switch size 1, requested type "simple"
  3285                           ; Number of cases is 1, Range of values is 0 to 0
  3286                           ; switch strategies available:
  3287                           ; Name         Instructions Cycles
  3288                           ; simple_byte            4     3 (average)
  3289                           ; direct_byte           11     8 (fixed)
  3290                           ; jumptable            260     6 (fixed)
  3291                           ;	Chosen strategy is simple_byte
  3292  0428  0871               	movf	??_TECLADO+1,w
  3293  0429  3A00               	xorlw	0	; case 0
  3294  042A  1903               	skipnz
  3295  042B  2C2D               	goto	l2311
  3296  042C  2C5F               	goto	l1725
  3297  042D                     l2311:
  3298                           
  3299                           ; Switch size 1, requested type "simple"
  3300                           ; Number of cases is 16, Range of values is 1 to 16
  3301                           ; switch strategies available:
  3302                           ; Name         Instructions Cycles
  3303                           ; simple_byte           49    25 (average)
  3304                           ; direct_byte           59    11 (fixed)
  3305                           ; jumptable            263     9 (fixed)
  3306                           ;	Chosen strategy is simple_byte
  3307  042D  0870               	movf	??_TECLADO,w
  3308  042E  3A01               	xorlw	1	; case 1
  3309  042F  1903               	skipnz
  3310  0430  2C05               	goto	l1657
  3311  0431  3A03               	xorlw	3	; case 2
  3312  0432  1903               	skipnz
  3313  0433  2C07               	goto	l1661
  3314  0434  3A01               	xorlw	1	; case 3
  3315  0435  1903               	skipnz
  3316  0436  2C09               	goto	l1665
  3317  0437  3A07               	xorlw	7	; case 4
  3318  0438  1903               	skipnz
  3319  0439  2C0B               	goto	l1669
  3320  043A  3A01               	xorlw	1	; case 5
  3321  043B  1903               	skipnz
  3322  043C  2C0D               	goto	l1673
  3323  043D  3A03               	xorlw	3	; case 6
  3324  043E  1903               	skipnz
  3325  043F  2C0F               	goto	l1677
  3326  0440  3A01               	xorlw	1	; case 7
  3327  0441  1903               	skipnz
  3328  0442  2C11               	goto	l1681
  3329  0443  3A0F               	xorlw	15	; case 8
  3330  0444  1903               	skipnz
  3331  0445  2C13               	goto	l1685
  3332  0446  3A01               	xorlw	1	; case 9
  3333  0447  1903               	skipnz
  3334  0448  2C15               	goto	l1689
  3335  0449  3A03               	xorlw	3	; case 10
  3336  044A  1903               	skipnz
  3337  044B  2C17               	goto	l1693
  3338  044C  3A01               	xorlw	1	; case 11
  3339  044D  1903               	skipnz
  3340  044E  2C19               	goto	l1697
  3341  044F  3A07               	xorlw	7	; case 12
  3342  0450  1903               	skipnz
  3343  0451  2C1B               	goto	l1701
  3344  0452  3A01               	xorlw	1	; case 13
  3345  0453  1903               	skipnz
  3346  0454  2C1D               	goto	l1705
  3347  0455  3A03               	xorlw	3	; case 14
  3348  0456  1903               	skipnz
  3349  0457  2C1F               	goto	l1709
  3350  0458  3A01               	xorlw	1	; case 15
  3351  0459  1903               	skipnz
  3352  045A  2C21               	goto	l1713
  3353  045B  3A1F               	xorlw	31	; case 16
  3354  045C  1903               	skipnz
  3355  045D  2C23               	goto	l1717
  3356  045E  2C5F               	goto	l1725
  3357  045F                     l1725:
  3358                           
  3359                           ;main.c: 221:     return 0;
  3360  045F  3000               	movlw	0
  3361  0460                     l218:
  3362  0460  0008               	return
  3363  0461                     __end_of_TECLADO:
  3364                           
  3365                           	psect	text16
  3366  021F                     __ptext16:	
  3367 ;; *************** function _EscribeCadenaLCD *****************
  3368 ;; Defined at:
  3369 ;;		line 62 in file "main.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  s               1    wreg     PTR const unsigned char 
  3372 ;;		 -> STR_21(4), STR_20(4), STR_19(4), STR_18(4), 
  3373 ;;		 -> STR_17(4), STR_16(4), STR_15(4), STR_14(4), 
  3374 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(4), 
  3375 ;;		 -> STR_9(19), STR_8(20), STR_7(20), STR_6(18), 
  3376 ;;		 -> STR_5(17), STR_4(17), STR_3(17), 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  s               1    3[COMMON] PTR const unsigned char 
  3379 ;;		 -> STR_21(4), STR_20(4), STR_19(4), STR_18(4), 
  3380 ;;		 -> STR_17(4), STR_16(4), STR_15(4), STR_14(4), 
  3381 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(4), 
  3382 ;;		 -> STR_9(19), STR_8(20), STR_7(20), STR_6(18), 
  3383 ;;		 -> STR_5(17), STR_4(17), STR_3(17), 
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3393 ;;      Params:         0       0       0       0       0
  3394 ;;      Locals:         1       0       0       0       0
  3395 ;;      Temps:          1       0       0       0       0
  3396 ;;      Totals:         2       0       0       0       0
  3397 ;;Total ram usage:        2 bytes
  3398 ;; Hardware stack levels used: 1
  3399 ;; Hardware stack levels required when called: 1
  3400 ;; This function calls:
  3401 ;;		_SEND_CHAR
  3402 ;; This function is called by:
  3403 ;;		_LEA_FECHA
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function _EscribeCadenaLCD
  3410  021F                     _EscribeCadenaLCD:
  3411                           
  3412                           ;incstack = 0
  3413                           ; Regs used in _EscribeCadenaLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3414                           ;EscribeCadenaLCD@s stored from wreg
  3415  021F  00F3               	movwf	EscribeCadenaLCD@s
  3416  0220                     l1603:
  3417                           
  3418                           ;main.c: 62: void EscribeCadenaLCD (const char *s);main.c: 63: {;main.c: 64:     while(*
      +                          s)
  3419  0220  2A31               	goto	l1609
  3420  0221                     l1605:
  3421                           
  3422                           ;main.c: 65:         SEND_CHAR(*s++);
  3423  0221  0873               	movf	EscribeCadenaLCD@s,w
  3424  0222  0084               	movwf	4
  3425  0223  120A  118A  2003  120A  118A  	fcall	stringdir
  3426  0228  120A  118A  21EA  120A  118A  	fcall	_SEND_CHAR
  3427  022D                     l1607:
  3428  022D  3001               	movlw	1
  3429  022E  00F2               	movwf	??_EscribeCadenaLCD
  3430  022F  0872               	movf	??_EscribeCadenaLCD,w
  3431  0230  07F3               	addwf	EscribeCadenaLCD@s,f
  3432  0231                     l1609:
  3433                           
  3434                           ;main.c: 64:     while(*s)
  3435  0231  0873               	movf	EscribeCadenaLCD@s,w
  3436  0232  0084               	movwf	4
  3437  0233  120A  118A  2003  120A  118A  	fcall	stringdir
  3438  0238  3A00               	xorlw	0
  3439  0239  1D03               	skipz
  3440  023A  2A3C               	goto	u801
  3441  023B  2A3D               	goto	u800
  3442  023C                     u801:
  3443  023C  2A21               	goto	l1605
  3444  023D                     u800:
  3445  023D                     l171:
  3446  023D  0008               	return
  3447  023E                     __end_of_EscribeCadenaLCD:
  3448                           
  3449                           	psect	text17
  3450  01EA                     __ptext17:	
  3451 ;; *************** function _SEND_CHAR *****************
  3452 ;; Defined at:
  3453 ;;		line 43 in file "main.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  dato            1    wreg     unsigned char 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  dato            1    1[COMMON] unsigned char 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         0       0       0       0       0
  3468 ;;      Locals:         1       0       0       0       0
  3469 ;;      Temps:          1       0       0       0       0
  3470 ;;      Totals:         2       0       0       0       0
  3471 ;;Total ram usage:        2 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_EscribeCadenaLCD
  3477 ;;		_LEA_FECHA
  3478 ;;		_main
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           
  3483                           ;psect for function _SEND_CHAR
  3484  01EA                     _SEND_CHAR:
  3485                           
  3486                           ;incstack = 0
  3487                           ; Regs used in _SEND_CHAR: [wreg]
  3488                           ;SEND_CHAR@dato stored from wreg
  3489  01EA  00F1               	movwf	SEND_CHAR@dato
  3490  01EB                     l1565:
  3491                           
  3492                           ;main.c: 43: void SEND_CHAR(char dato);main.c: 44: {;main.c: 45:     PORTCbits.RC1 = 0;
  3493  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  3494  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  3495  01ED  1087               	bcf	7,1	;volatile
  3496                           
  3497                           ;main.c: 46:     PORTCbits.RC0 = 1;
  3498  01EE  1407               	bsf	7,0	;volatile
  3499                           
  3500                           ;main.c: 47:     PORTCbits.RC2 = 1;
  3501  01EF  1507               	bsf	7,2	;volatile
  3502  01F0                     l1567:
  3503                           
  3504                           ;main.c: 48:     PORTB = dato;
  3505  01F0  0871               	movf	SEND_CHAR@dato,w
  3506  01F1  0086               	movwf	6	;volatile
  3507  01F2                     l1569:
  3508                           
  3509                           ;main.c: 49:     PORTCbits.RC2=0;
  3510  01F2  1107               	bcf	7,2	;volatile
  3511                           
  3512                           ;main.c: 50:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3513  01F3  30C7               	movlw	199
  3514  01F4  00F0               	movwf	??_SEND_CHAR
  3515  01F5                     u1757:
  3516  01F5  29F6               	nop2
  3517  01F6  0BF0               	decfsz	??_SEND_CHAR,f
  3518  01F7  29F5               	goto	u1757
  3519  01F8  29F9               	nop2
  3520  01F9  29FA               	nop2
  3521  01FA                     l162:
  3522  01FA  0008               	return
  3523  01FB                     __end_of_SEND_CHAR:
  3524                           
  3525                           	psect	text18
  3526  023E                     __ptext18:	
  3527 ;; *************** function _LCD_Init *****************
  3528 ;; Defined at:
  3529 ;;		line 53 in file "main.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0, pclath, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0
  3545 ;;      Temps:          2       0       0       0       0
  3546 ;;      Totals:         2       0       0       0       0
  3547 ;;Total ram usage:        2 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 1
  3550 ;; This function calls:
  3551 ;;		_SEND_CMD
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           
  3558                           ;psect for function _LCD_Init
  3559  023E                     _LCD_Init:
  3560  023E                     l1807:	
  3561                           ;incstack = 0
  3562                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3563                           
  3564                           
  3565                           ;main.c: 55:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3566  023E  301A               	movlw	26
  3567  023F  00F4               	movwf	??_LCD_Init+1
  3568  0240  30F8               	movlw	248
  3569  0241  00F3               	movwf	??_LCD_Init
  3570  0242                     u1767:
  3571  0242  0BF3               	decfsz	??_LCD_Init,f
  3572  0243  2A42               	goto	u1767
  3573  0244  0BF4               	decfsz	??_LCD_Init+1,f
  3574  0245  2A42               	goto	u1767
  3575  0246  0000               	nop
  3576  0247                     l1809:
  3577                           
  3578                           ;main.c: 56:     SEND_CMD(0x38);
  3579  0247  3038               	movlw	56
  3580  0248  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
  3581  024D                     l1811:
  3582                           
  3583                           ;main.c: 57:     SEND_CMD(0x0C);
  3584  024D  300C               	movlw	12
  3585  024E  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
  3586  0253                     l1813:
  3587                           
  3588                           ;main.c: 58:     SEND_CMD(0x06);
  3589  0253  3006               	movlw	6
  3590  0254  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
  3591  0259                     l1815:
  3592                           
  3593                           ;main.c: 59:     SEND_CMD(0x01);
  3594  0259  3001               	movlw	1
  3595  025A  120A  118A  220C  120A  118A  	fcall	_SEND_CMD
  3596  025F                     l165:
  3597  025F  0008               	return
  3598  0260                     __end_of_LCD_Init:
  3599                           
  3600                           	psect	text19
  3601  020C                     __ptext19:	
  3602 ;; *************** function _SEND_CMD *****************
  3603 ;; Defined at:
  3604 ;;		line 32 in file "main.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  dato            1    wreg     unsigned char 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  dato            1    2[COMMON] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         0       0       0       0       0
  3619 ;;      Locals:         1       0       0       0       0
  3620 ;;      Temps:          2       0       0       0       0
  3621 ;;      Totals:         3       0       0       0       0
  3622 ;;Total ram usage:        3 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_LCD_Init
  3628 ;;		_RecibeHHMM
  3629 ;;		_LEA_FECHA
  3630 ;;		_main
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           
  3635                           ;psect for function _SEND_CMD
  3636  020C                     _SEND_CMD:
  3637                           
  3638                           ;incstack = 0
  3639                           ; Regs used in _SEND_CMD: [wreg]
  3640                           ;SEND_CMD@dato stored from wreg
  3641  020C  00F2               	movwf	SEND_CMD@dato
  3642  020D                     l1597:
  3643                           
  3644                           ;main.c: 32: void SEND_CMD(char dato);main.c: 33: {;main.c: 34:     PORTCbits.RC1 = 0;
  3645  020D  1283               	bcf	3,5	;RP0=0, select bank0
  3646  020E  1303               	bcf	3,6	;RP1=0, select bank0
  3647  020F  1087               	bcf	7,1	;volatile
  3648                           
  3649                           ;main.c: 35:     PORTCbits.RC0 = 0;
  3650  0210  1007               	bcf	7,0	;volatile
  3651                           
  3652                           ;main.c: 36:     PORTCbits.RC2 = 1;
  3653  0211  1507               	bsf	7,2	;volatile
  3654  0212                     l1599:
  3655                           
  3656                           ;main.c: 37:     PORTB = dato;
  3657  0212  0872               	movf	SEND_CMD@dato,w
  3658  0213  0086               	movwf	6	;volatile
  3659  0214                     l1601:
  3660                           
  3661                           ;main.c: 38:     PORTCbits.RC2 = 0;
  3662  0214  1107               	bcf	7,2	;volatile
  3663                           
  3664                           ;main.c: 39:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3665  0215  3003               	movlw	3
  3666  0216  00F1               	movwf	??_SEND_CMD+1
  3667  0217  3097               	movlw	151
  3668  0218  00F0               	movwf	??_SEND_CMD
  3669  0219                     u1777:
  3670  0219  0BF0               	decfsz	??_SEND_CMD,f
  3671  021A  2A19               	goto	u1777
  3672  021B  0BF1               	decfsz	??_SEND_CMD+1,f
  3673  021C  2A19               	goto	u1777
  3674  021D  2A1E               	nop2
  3675  021E                     l159:
  3676  021E  0008               	return
  3677  021F                     __end_of_SEND_CMD:
  3678                           
  3679                           	psect	text20
  3680  01CD                     __ptext20:	
  3681 ;; *************** function _InitI2C *****************
  3682 ;; Defined at:
  3683 ;;		line 5 in file "./I2C.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0
  3700 ;;      Totals:         0       0       0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; This function calls:
  3704 ;;		Nothing
  3705 ;; This function is called by:
  3706 ;;		_main
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           
  3711                           ;psect for function _InitI2C
  3712  01CD                     _InitI2C:
  3713  01CD                     l1735:	
  3714                           ;incstack = 0
  3715                           ; Regs used in _InitI2C: [wreg]
  3716                           
  3717                           
  3718                           ;./I2C.c: 7:  TRISCbits.TRISC4 = 1;
  3719  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  3720  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  3721  01CF  1607               	bsf	7,4	;volatile
  3722                           
  3723                           ;./I2C.c: 8:  TRISCbits.TRISC3 = 1;
  3724  01D0  1587               	bsf	7,3	;volatile
  3725  01D1                     l1737:
  3726                           
  3727                           ;./I2C.c: 10:  SSPADD = ((4000000/4000)/100) - 1;
  3728  01D1  3009               	movlw	9
  3729  01D2  0093               	movwf	19	;volatile
  3730                           
  3731                           ;./I2C.c: 11:  SSPSTAT = 0x80;
  3732  01D3  3080               	movlw	128
  3733  01D4  0094               	movwf	20	;volatile
  3734                           
  3735                           ;./I2C.c: 12:  SSPCON = 0x28;
  3736  01D5  3028               	movlw	40
  3737  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  3738  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  3739  01D8  0094               	movwf	20	;volatile
  3740  01D9                     l59:
  3741  01D9  0008               	return
  3742  01DA                     __end_of_InitI2C:
  3743  007E                     btemp	set	126	;btemp
  3744  007E                     wtemp0	set	126
  3745                           
  3746                           	psect	config
  3747                           
  3748                           ;Config register CONFIG @ 0x2007
  3749                           ;	Oscillator Selection bits
  3750                           ;	FOSC = XT, XT oscillator
  3751                           ;	Watchdog Timer Enable bit
  3752                           ;	WDTE = OFF, WDT disabled
  3753                           ;	Power-up Timer Enable bit
  3754                           ;	PWRTE = ON, PWRT enabled
  3755                           ;	Brown-out Reset Enable bit
  3756                           ;	BOREN = ON, BOR enabled
  3757                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3758                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3759                           ;	Data EEPROM Memory Code Protection bit
  3760                           ;	CPD = ON, Data EEPROM code-protected
  3761                           ;	Flash Program Memory Write Enable bits
  3762                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3763                           ;	In-Circuit Debugger Mode bit
  3764                           ;	DEBUG = 0x1, unprogrammed default
  3765                           ;	Flash Program Memory Code Protection bit
  3766                           ;	CP = OFF, Code protection off
  3767  2007                     	org	8199
  3768  2007  3E71               	dw	15985

Data Sizes:
    Strings     214
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     12      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    MSG_Term@s	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[21]), STR_1(CODE[17]), 

    EscribeCadenaLCD@s	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[19]), STR_8(CODE[20]), STR_7(CODE[20]), STR_6(CODE[18]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 

    sp__Get_DS1307_RTC_Date	PTR unsigned char  size(1) Largest target is 4
		 -> pRTCArray(BANK0[4]), 

    sp__Get_DS1307_RTC_Time	PTR unsigned char  size(1) Largest target is 4
		 -> pRTCArray(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_RecibeHHMM
    _RecibeHHMM->_MSG_Term
    _RecibeHHMM->_SEND_CMD
    _RecibeHHMM->_Write_Byte_To_DS1307_RTC
    _MSG_Term->_SEND_Tx
    _Read_Byte_From_DS1307_RTC->_I2C_Write_Byte
    _LEA_FECHA->_EscribeCadenaLCD
    _LEA_FECHA->_TECLADO
    _Write_Byte_To_DS1307_RTC->_I2C_Write_Byte
    _EscribeCadenaLCD->_SEND_CHAR
    _LCD_Init->_SEND_CMD

Critical Paths under _main in BANK0

    _main->_LEA_FECHA

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4324
                                             10 COMMON     3     3      0
                                             10 BANK0      2     2      0
                   _EscribeCadenaLCD
                            _InitI2C
                           _LCD_Init
                          _LEA_FECHA
                           _MCU_Init
          _Read_Byte_From_DS1307_RTC
                         _RecibeHHMM
                          _SEND_CHAR
                           _SEND_CMD
                            _TECLADO
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RecibeHHMM                                           7     7      0    1043
                                              3 COMMON     7     7      0
                           _MSG_Term
                           _SEND_CMD
                            _SEND_Tx
           _Write_Byte_To_DS1307_RTC
 ---------------------------------------------------------------------------------
 (2) _MSG_Term                                             2     2      0     133
                                              1 COMMON     2     2      0
                            _SEND_Tx
 ---------------------------------------------------------------------------------
 (2) _SEND_Tx                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_Byte_From_DS1307_RTC                            3     3      0      68
                                              1 COMMON     3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEA_FECHA                                           13    13      0    1998
                                              4 COMMON     3     3      0
                                              0 BANK0     10    10      0
                   _EscribeCadenaLCD
                          _SEND_CHAR
                           _SEND_CMD
                            _TECLADO
           _Write_Byte_To_DS1307_RTC
 ---------------------------------------------------------------------------------
 (2) _Write_Byte_To_DS1307_RTC                             2     1      1     522
                                              1 COMMON     2     1      1
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TECLADO                                              4     4      0      95
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _EscribeCadenaLCD                                     2     2      0     694
                                              2 COMMON     2     2      0
                          _SEND_CHAR
 ---------------------------------------------------------------------------------
 (1) _SEND_CHAR                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              3 COMMON     2     2      0
                           _SEND_CMD
 ---------------------------------------------------------------------------------
 (1) _SEND_CMD                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EscribeCadenaLCD
     _SEND_CHAR
   _InitI2C
   _LCD_Init
     _SEND_CMD
   _LEA_FECHA
     _EscribeCadenaLCD
     _SEND_CHAR
     _SEND_CMD
     _TECLADO
     _Write_Byte_To_DS1307_RTC
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
   _MCU_Init
   _Read_Byte_From_DS1307_RTC
     _I2C_ReStart
     _I2C_Read_Byte
     _I2C_Send_NACK
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Byte
   _RecibeHHMM
     _MSG_Term
       _SEND_Tx
     _SEND_CMD
     _SEND_Tx
     _Write_Byte_To_DS1307_RTC
   _SEND_CHAR
   _SEND_CMD
   _TECLADO
   _UART_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Nov 27 12:03:41 2021

                                 pc 0002                  __size_of_I2C_Start 000A  
                                l62 0190                                  l70 01A9  
                                l71 01AA                                  l64 0195  
                                l65 0196                                  l74 019A  
                                l59 01D9                                  l76 019F  
                                l92 01DF                                  l68 01A4  
                                l77 01A0                                  l94 01E3  
                                l86 01BA                                  l95 01E9  
                                l88 01BF                                  l89 01C0  
                                l98 01AE                                  fsr 0004  
                               l100 01B3                                 l101 01B5  
                               l111 0282                                 l200 0334  
                               l202 033A                                 l211 03A8  
                               l204 034D                                 l117 02E3  
                               l222 03EB                                 l206 0353  
                               l208 03A1                                 l225 03EF  
                               l162 01FA                                 l218 0460  
                               l171 023D                                 l219 03E7  
                               l228 03F3                                 l180 01C2  
                               l165 025F                                 l174 020B  
                               l159 021E                                 l183 01CC  
                               l192 02F0                                 l177 018C  
                               l194 02F6                                 l267 05CE  
                               l196 0309                                 l189 02AD  
                               l198 030F                                 _PEN 048A  
                               u710 0195                                 u711 0194  
                               u800 023D                                 u720 019F  
                               u801 023C                                 u721 019E  
                               u730 01E3                                 u810 02A1  
                               u731 01E2                                 u811 02A0  
                               u900 03F7                                 u820 03B0  
                               u740 01C8                                 _SEN 0488  
                               u901 03F6                                 u821 03AF  
                               u741 01C7                                 u830 03B9  
                               u750 01A9                                 u910 02BF  
                               u831 03B8                                 u751 01A8  
                               u911 02BE                                 u840 03C2  
                               u841 03C1                                 u850 03CB  
                               u770 01BF                                 u851 03CA  
                               u771 01BE                                 u860 03E1  
                               u780 01B3                                 u861 03E0  
                               u781 01B2                                 u870 03EB  
                               u790 0271                                 u871 03EA  
                               u791 0270                                 u880 03EF  
                               u960 02F6                                 u881 03EE  
                               u961 02F5                                 u890 03F3  
                               u970 02FA                                 u891 03F2  
                               u971 02F9                                 u980 030F  
                               u981 030E                                 u990 0313  
                               u991 0312                __size_of_I2C_ReStart 000A  
                               fsr0 0004                  I2C_Write_Byte@Byte 0070  
                              l2101 06D2                                l2111 06FA  
                              l2103 06DE                                l2121 071D  
                              l2113 0701                                l2105 06E5  
                              l2123 0724                                l2115 0708  
                              l2107 06EC                                l2131 074D  
                              l2051 05CF                                l2141 07B1  
                              l2125 072B                                l2117 070F  
                              l2109 06F3                                l2133 077B  
                              l2061 0607                                l2053 05E3  
                              l2311 042D                                l2151 07D5  
                              l2143 07B7                                l2135 07A6  
                              l2127 0732                                l2119 0716  
                              l2071 0631                                l2063 060D  
                              l2055 05E9                                l1601 0214  
                              l2153 07DA                                l2137 07AC  
                              l2145 07BC                                l2081 066C  
                              l2073 0641                                l2065 061A  
                              l2057 05F5                                l1603 0220  
                              l1611 0284                                l2155 07E3  
                              l2147 07C5                                l2139 07B0  
                              l2091 06A1                                l2083 0676  
                              l2075 064B                                l2067 0620  
                              l2059 05FB                                l1605 0221  
                              l1701 041B                                l1621 03A2  
                              l1613 0285                                l2157 07E9  
                              l2149 07CF                                l2309 0755  
                              l2093 06A7                                l2085 067C  
                              l2077 0651                                l2069 0626  
                              l1607 022D                                l1631 03B5  
                              l1623 03A4                                l1615 0291  
                              l2095 06B2                                l2087 0687  
                              l2079 065C                                l1609 0231  
                              l1713 0421                                l1705 041D  
                              l1641 03C3                                l1625 03AC  
                              l1561 01E4                                l1617 0295  
                              l2097 06C2                                l2089 0697  
                              l1811 024D                                l1723 0425  
                              l1651 03E1                                l1643 03C7  
                              l1635 03BA                                l1555 018D  
                              l1571 01C2                                l1619 02A1  
                              l2099 06CC                                l1813 0253  
                              l1565 01EB                                l1725 045F  
                              l1717 0423                                l1709 041F  
                              l1661 0407                                l1637 03BE  
                              l1629 03B1                                l1557 0197  
                              l1901 04BF                                l1581 01AB  
                              l1741 02AF                                l1573 01C8  
                              l1821 020A                                l1735 01CD  
                              l1815 0259                                l1807 023E  
                              l1567 01F0                                l1655 03F7  
                              l1647 03CC                                l1559 01DB  
                              l1591 0266                                l1911 04EF  
                              l1903 04D2                                l1823 0185  
                              l1575 01A1                                l1583 01B4  
                              l1751 02CA                                l1831 02EA  
                              l1737 01D1                                l1809 0247  
                              l1569 01F2                                l1681 0411  
                              l1673 040D                                l1665 0409  
                              l1657 0405                                l1649 03D0  
                              l1593 0271                                l1921 051B  
                              l1913 04F6                                l1905 04D8  
                              l1825 0189                                l1753 02D0  
                              l1745 02B4                                l1841 0317  
                              l1833 02FA                                l1817 01FB  
                              l1595 027D                                l1587 0261  
                              l1931 053F                                l1923 051F  
                              l1915 04FC                                l1907 04DC  
                              l1827 018A                                l1579 01B6  
                              l1755 02D8                                l1747 02BF  
                              l1739 02AF                                l1851 033E  
                              l1843 031C                                l1835 02FE  
                              l1819 0207                                l1597 020D  
                              l1693 0417                                l1685 0413  
                              l1677 040F                                l1669 040B  
                              l1941 0561                                l1933 0545  
                              l1925 0529                                l1917 0502  
                              l1909 04E6                                l1757 02DD  
                              l1749 02C5                                l1861 0360  
                              l1853 0342                                l1845 0322  
                              l1837 0303                                l1829 02E4  
                              l1599 0212                                l1951 05AA  
                              l1943 0567                                l1935 0547  
                              l1927 0532                                l1919 0515  
                              l1759 02E2                                l1871 039A  
                              l1863 0366                                l1855 0347  
                              l1847 0328                                l1839 0313  
                              l1697 0419                                l1689 0415  
                              l1953 05B4                                l1945 056D  
                              l1937 0551                                l1929 0539  
                              l1881 047B                                l1873 0461  
                              l1865 036C                                l1857 0357  
                              l1849 032E                                l1947 0580  
                              l1939 055A                                l1891 0499  
                              l1883 0484                                l1875 0467  
                              l1859 035B                                l1867 0372  
                              l1949 0590                                l1893 04A3  
                              l1885 048B                                l1877 046D  
                              l1869 0386                                l1895 04AC  
                              l1887 0491                                l1879 0471  
                              l1897 04B3                                l1889 0497  
                              l1899 04B9                     __end_of_TECLADO 0461  
                              STR_1 009E                                STR_2 0009  
                              STR_3 007C                                STR_4 008D  
                              STR_5 006B                                STR_6 0059  
                              STR_7 001E                                STR_8 0032  
                              STR_9 0046                                u1000 033A  
                              u1001 0339                                u1010 033E  
                              u1011 033D                                u1100 0561  
                              u1020 0353                                u1101 0560  
                              u1021 0352                                u1030 0357  
                              u1031 0356                                u1115 0585  
                              u1060 048B                                u1125 059F  
                              u1061 048A                                u1045 0375  
                              u1070 04B3                                u1135 05B9  
                              u1071 04B2                                u1055 0389  
                              u1080 04F6                                u1400 07D5  
                              u1081 04F5                                u1401 07D4  
                              u1090 0539                                u1091 0538  
                              u1325 0634                                u1335 065F  
                              u1345 068A                                u1355 06B5  
                              u1380 07AC                                u1381 07AB  
                              u1365 0735                                u1390 07B7  
                              u1391 07B6                                u1375 078F  
                              u1707 052D                                u1627 0613  
                              u1717 0555                                u1637 07C0  
                              u1727 0573                                u1647 07DE  
                              u1737 03D6                                u1657 047F  
                              u1747 03FB                                u1667 04A7  
                              u1757 01F5                                u1677 04C5  
                              u1767 0242                                u1687 04EA  
                              u1777 0219                                u1697 0508  
                              _RCEN 048B                                _RSEN 0489  
                __size_of_LEA_FECHA 016E                     __end_of_SEND_Tx 01CD  
                              _Temp 007D                                _main 05CF  
                              btemp 007E                    __end_of_I2C_Stop 01A1  
                              start 0000         ??_Read_Byte_From_DS1307_RTC 0071  
                   __end_of_InitI2C 01DA    Read_Byte_From_DS1307_RTC@Address 0072  
                  __end_of_LCD_Init 0260                  __size_of_SEND_CHAR 0011  
                             ?_main 0070                               _ACKEN 048C  
                             _ACKDT 048D                               STR_10 00B7  
                             STR_11 00AF                               STR_20 00D7  
                             STR_12 00CB                               STR_13 00CF  
                             STR_21 00B3                               STR_14 00DB  
                             STR_15 00BF                               STR_16 00BB  
                             STR_17 00C3                               STR_18 00C7  
                             STR_19 00D3                    __end_of_MCU_Init 018D  
                             _RCREG 001A                               _RCSTA 0018  
                  __end_of_SEND_CMD 021F                               _SPBRG 0099  
                             _PORTB 0006                               _PORTD 0008  
                             _TRISB 0086                               _TRISC 0087  
                             _TRISD 0088                               _SSPIF 0063  
                             _TXREG 0019                               _TXSTA 0098  
                     SEND_CHAR@dato 0071                  __size_of_UART_Init 0011  
                  __end_of_MSG_Term 02AE              __size_of_I2C_Read_Byte 000B  
                             main@a 002A                   __end_of_I2C_Start 0197  
                             pclath 000A              __size_of_I2C_Send_NACK 000B  
                             status 0003                               wtemp0 007E  
                   __initialization 07F5           __size_of_EscribeCadenaLCD 001F  
                      __end_of_main 07F5                          _RecibeHHMM 02E4  
                 __end_of_LEA_FECHA 05CF                              ??_main 007A  
                         ??_TECLADO 0070           _Read_Byte_From_DS1307_RTC 02AE  
                         ??_SEND_Tx 0070                   __end_of_SEND_CHAR 01FB  
                            _SSPADD 0093                              _SSPCON 0014  
                            _SSPBUF 0013                           ??_InitI2C 0070  
                 __end_of_UART_Init 020C                       _I2C_Read_Byte 01AB  
                     _I2C_Send_NACK 01B6                           ?_I2C_Stop 0070  
          _Write_Byte_To_DS1307_RTC 0260             __end_of__initialization 07FC  
                         ?_LCD_Init 0070                           ?_MCU_Init 0070  
                         ?_SEND_CMD 0070                      ?_I2C_Read_Byte 0070  
                    __pcstackCOMMON 0070                           ?_MSG_Term 0070  
                    ?_I2C_Send_NACK 0070                         ?_RecibeHHMM 0070  
                        ??_I2C_Stop 0070                          __pbssBANK0 002C  
                        ??_LCD_Init 0073                         SEND_Tx@dato 0070  
                        ??_MCU_Init 0070                          ??_SEND_CMD 0070  
                        __pmaintext 05CF                    _EscribeCadenaLCD 021F  
                        ??_MSG_Term 0071       Read_Byte_From_DS1307_RTC@Byte 0073  
           __size_of_I2C_Write_Byte 0010                             _ACKSTAT 048E  
                     ??_I2C_ReStart 0070                           MSG_Term@s 0072  
                           _TECLADO 03A2                             _SEND_Tx 01C1  
                           _SSPSTAT 0094                          __stringtab 0003  
                      TECLADO@VPTOD 0072  __size_of_Read_Byte_From_DS1307_RTC 0036  
               __size_of_RecibeHHMM 00BE                        TECLADO@Tecla 0073  
                           _InitI2C 01CD                           _I2C_Start 018D  
                   ??_I2C_Read_Byte 0070                     ??_I2C_Send_NACK 0070  
                           __ptext1 01FB                             __ptext2 02E4  
                           __ptext3 0283                             __ptext4 01C1  
                           __ptext5 02AE                             __ptext6 01B6  
                           __ptext7 01AB                             __ptext8 01A1  
                           __ptext9 0185                           _LEA_FECHA 0461  
               __end_of_I2C_ReStart 01AB                             main@Car 002B  
              end_of_initialization 07FC                          ?_I2C_Start 0070  
                         _SEND_CHAR 01EA                           _UART_Init 01FB  
        ??_Write_Byte_To_DS1307_RTC 0072                           _PORTCbits 0007  
                         _PORTDbits 0008                          ?_LEA_FECHA 0070  
                         _TRISCbits 0087                   __size_of_I2C_Stop 000A  
                         _TXSTAbits 0098                   __size_of_LCD_Init 0022  
                        ?_SEND_CHAR 0070                   __size_of_MCU_Init 0008  
                 __size_of_SEND_CMD 0013                      _I2C_Write_Byte 01DA  
                      ??_RecibeHHMM 0073                          ?_UART_Init 0070  
                 __size_of_MSG_Term 002B                         _I2C_ReStart 01A1  
                   RecibeHHMM@Datos 0075                        SEND_CMD@dato 0072  
               start_initialization 07F5            __end_of_EscribeCadenaLCD 023E  
                __end_of_RecibeHHMM 03A2                         ??_I2C_Start 0070  
            __end_of_I2C_Write_Byte 01EA                           _pRTCArray 002C  
                       ??_LEA_FECHA 0074                         __pbssCOMMON 007D  
                          ?_TECLADO 0070                           ___latbits 0002  
                     __pcstackBANK0 0020                            ?_SEND_Tx 0070  
                     RecibeHHMM@Car 0079                            ?_InitI2C 0070  
                       ??_SEND_CHAR 0070                   EscribeCadenaLCD@s 0073  
                   ?_I2C_Write_Byte 0070                         ??_UART_Init 0070  
  __end_of_Write_Byte_To_DS1307_RTC 0283                           __pstrings 0003  
                          _I2C_Stop 0197                            _LCD_Init 023E  
                          _MCU_Init 0185                            _PIR1bits 000C  
                          _SEND_CMD 020C               __end_of_I2C_Read_Byte 01B6  
                          _MSG_Term 0283               __end_of_I2C_Send_NACK 01C1  
                       __stringbase 0008                    __size_of_TECLADO 00BF  
                  __size_of_SEND_Tx 000C                    __size_of_InitI2C 000D  
        ?_Read_Byte_From_DS1307_RTC 0070                        ?_I2C_ReStart 0070  
                __end_of__stringtab 0009                            __ptext10 0461  
                          __ptext11 0260                            __ptext20 01CD  
                          __ptext12 01DA                            __ptext13 0197  
                          __ptext14 018D                            __ptext15 03A2  
                          __ptext16 021F                            __ptext17 01EA  
                          __ptext18 023E                            __ptext19 020C  
                 ?_EscribeCadenaLCD 0070                  ??_EscribeCadenaLCD 0072  
 __size_of_Write_Byte_To_DS1307_RTC 0023           ?_Write_Byte_To_DS1307_RTC 0071  
                     __size_of_main 0226   __end_of_Read_Byte_From_DS1307_RTC 02E4  
  Write_Byte_To_DS1307_RTC@DataByte 0071                      LEA_FECHA@fecha 0023  
                  ??_I2C_Write_Byte 0070                           stringcode 0003  
   Write_Byte_To_DS1307_RTC@Address 0072                       LEA_FECHA@ANNO 0022  
                          stringdir 0003                            stringtab 0003  
                      LEA_FECHA@DIA 0020                        LEA_FECHA@MES 0021  
                      LEA_FECHA@car 0029  
