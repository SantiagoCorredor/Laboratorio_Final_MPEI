

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Nov 27 02:19:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.32
    36                           ; Generated 02/02/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  0008                     _PORTDbits	set	8
   191  0008                     _PORTD	set	8
   192  001A                     _RCREG	set	26
   193  0019                     _TXREG	set	25
   194  000C                     _PIR1bits	set	12
   195  0018                     _RCSTA	set	24
   196  0006                     _PORTB	set	6
   197  0007                     _PORTCbits	set	7
   198  0013                     _SSPBUF	set	19
   199  0014                     _SSPCON	set	20
   200  0063                     _SSPIF	set	99
   201  0098                     _TXSTAbits	set	152
   202  0088                     _TRISD	set	136
   203  0086                     _TRISB	set	134
   204  0087                     _TRISC	set	135
   205  0099                     _SPBRG	set	153
   206  0098                     _TXSTA	set	152
   207  0094                     _SSPSTAT	set	148
   208  0093                     _SSPADD	set	147
   209  0087                     _TRISCbits	set	135
   210  048B                     _RCEN	set	1163
   211  048E                     _ACKSTAT	set	1166
   212  048C                     _ACKEN	set	1164
   213  048D                     _ACKDT	set	1165
   214  048A                     _PEN	set	1162
   215  0489                     _RSEN	set	1161
   216  0488                     _SEN	set	1160
   217                           
   218                           	psect	strings
   219  0003                     __pstrings:
   220  0003                     stringtab:
   221  0003                     __stringtab:
   222  0003                     stringcode:	
   223                           ;	String table - string pointers are 1 byte each
   224                           
   225  0003                     stringdir:
   226  0003  3000               	movlw	high stringdir
   227  0004  008A               	movwf	10
   228  0005  0804               	movf	4,w
   229  0006  0A84               	incf	4,f
   230  0007  0782               	addwf	2,f
   231  0008                     __stringbase:
   232  0008  3400               	retlw	0
   233  0009                     __end_of__stringtab:
   234  0009                     STR_2:
   235  0009  3445               	retlw	69	;'E'
   236  000A  3473               	retlw	115	;'s'
   237  000B  3463               	retlw	99	;'c'
   238  000C  3472               	retlw	114	;'r'
   239  000D  3469               	retlw	105	;'i'
   240  000E  3462               	retlw	98	;'b'
   241  000F  3461               	retlw	97	;'a'
   242  0010  3420               	retlw	32	;' '
   243  0011  346C               	retlw	108	;'l'
   244  0012  346F               	retlw	111	;'o'
   245  0013  3473               	retlw	115	;'s'
   246  0014  3420               	retlw	32	;' '
   247  0015  346D               	retlw	109	;'m'
   248  0016  3469               	retlw	105	;'i'
   249  0017  346E               	retlw	110	;'n'
   250  0018  3475               	retlw	117	;'u'
   251  0019  3474               	retlw	116	;'t'
   252  001A  346F               	retlw	111	;'o'
   253  001B  3473               	retlw	115	;'s'
   254  001C  343A               	retlw	58	;':'
   255  001D  3400               	retlw	0
   256  001E                     STR_7:
   257  001E  3420               	retlw	32	;' '
   258  001F  342B               	retlw	43	;'+'
   259  0020  342B               	retlw	43	;'+'
   260  0021  342B               	retlw	43	;'+'
   261  0022  3420               	retlw	32	;' '
   262  0023  3452               	retlw	82	;'R'
   263  0024  3454               	retlw	84	;'T'
   264  0025  3443               	retlw	67	;'C'
   265  0026  3420               	retlw	32	;' '
   266  0027  3444               	retlw	68	;'D'
   267  0028  3453               	retlw	83	;'S'
   268  0029  3431               	retlw	49	;'1'
   269  002A  3433               	retlw	51	;'3'
   270  002B  3430               	retlw	48	;'0'
   271  002C  3437               	retlw	55	;'7'
   272  002D  3420               	retlw	32	;' '
   273  002E  342B               	retlw	43	;'+'
   274  002F  342B               	retlw	43	;'+'
   275  0030  342B               	retlw	43	;'+'
   276  0031  3400               	retlw	0
   277  0032                     STR_8:
   278  0032  344C               	retlw	76	;'L'
   279  0033  3465               	retlw	101	;'e'
   280  0034  3463               	retlw	99	;'c'
   281  0035  3474               	retlw	116	;'t'
   282  0036  3475               	retlw	117	;'u'
   283  0037  3472               	retlw	114	;'r'
   284  0038  3461               	retlw	97	;'a'
   285  0039  3420               	retlw	32	;' '
   286  003A  3479               	retlw	121	;'y'
   287  003B  3420               	retlw	32	;' '
   288  003C  3465               	retlw	101	;'e'
   289  003D  3473               	retlw	115	;'s'
   290  003E  3463               	retlw	99	;'c'
   291  003F  3472               	retlw	114	;'r'
   292  0040  3469               	retlw	105	;'i'
   293  0041  3474               	retlw	116	;'t'
   294  0042  3475               	retlw	117	;'u'
   295  0043  3472               	retlw	114	;'r'
   296  0044  3461               	retlw	97	;'a'
   297  0045  3400               	retlw	0
   298  0046                     STR_9:
   299  0046  3444               	retlw	68	;'D'
   300  0047  3445               	retlw	69	;'E'
   301  0048  344C               	retlw	76	;'L'
   302  0049  3420               	retlw	32	;' '
   303  004A  344D               	retlw	77	;'M'
   304  004B  344F               	retlw	79	;'O'
   305  004C  3444               	retlw	68	;'D'
   306  004D  3455               	retlw	85	;'U'
   307  004E  344C               	retlw	76	;'L'
   308  004F  344F               	retlw	79	;'O'
   309  0050  3420               	retlw	32	;' '
   310  0051  3452               	retlw	82	;'R'
   311  0052  3454               	retlw	84	;'T'
   312  0053  3443               	retlw	67	;'C'
   313  0054  343A               	retlw	58	;':'
   314  0055  342E               	retlw	46	;'.'
   315  0056  342E               	retlw	46	;'.'
   316  0057  342E               	retlw	46	;'.'
   317  0058  3400               	retlw	0
   318  0059                     STR_6:
   319  0059  344D               	retlw	77	;'M'
   320  005A  3450               	retlw	80	;'P'
   321  005B  3445               	retlw	69	;'E'
   322  005C  3449               	retlw	73	;'I'
   323  005D  3420               	retlw	32	;' '
   324  005E  3432               	retlw	50	;'2'
   325  005F  3430               	retlw	48	;'0'
   326  0060  3432               	retlw	50	;'2'
   327  0061  3430               	retlw	48	;'0'
   328  0062  342D               	retlw	45	;'-'
   329  0063  3469               	retlw	105	;'i'
   330  0064  3420               	retlw	32	;' '
   331  0065  342B               	retlw	43	;'+'
   332  0066  3420               	retlw	32	;' '
   333  0067  3449               	retlw	73	;'I'
   334  0068  3432               	retlw	50	;'2'
   335  0069  3443               	retlw	67	;'C'
   336  006A  3400               	retlw	0
   337  006B                     STR_5:
   338  006B  3454               	retlw	84	;'T'
   339  006C  3465               	retlw	101	;'e'
   340  006D  3463               	retlw	99	;'c'
   341  006E  346C               	retlw	108	;'l'
   342  006F  3465               	retlw	101	;'e'
   343  0070  3465               	retlw	101	;'e'
   344  0071  3420               	retlw	32	;' '
   345  0072  3461               	retlw	97	;'a'
   346  0073  34F1               	retlw	-15
   347  0074  346F               	retlw	111	;'o'
   348  0075  3420               	retlw	32	;' '
   349  0076  3428               	retlw	40	;'('
   350  0077  3441               	retlw	65	;'A'
   351  0078  3441               	retlw	65	;'A'
   352  0079  3429               	retlw	41	;')'
   353  007A  343A               	retlw	58	;':'
   354  007B  3400               	retlw	0
   355  007C                     STR_3:
   356  007C  3454               	retlw	84	;'T'
   357  007D  3465               	retlw	101	;'e'
   358  007E  3463               	retlw	99	;'c'
   359  007F  346C               	retlw	108	;'l'
   360  0080  3465               	retlw	101	;'e'
   361  0081  3465               	retlw	101	;'e'
   362  0082  3420               	retlw	32	;' '
   363  0083  3464               	retlw	100	;'d'
   364  0084  34ED               	retlw	-19
   365  0085  3461               	retlw	97	;'a'
   366  0086  3420               	retlw	32	;' '
   367  0087  3428               	retlw	40	;'('
   368  0088  3444               	retlw	68	;'D'
   369  0089  3444               	retlw	68	;'D'
   370  008A  3429               	retlw	41	;')'
   371  008B  343A               	retlw	58	;':'
   372  008C  3400               	retlw	0
   373  008D                     STR_4:
   374  008D  3454               	retlw	84	;'T'
   375  008E  3465               	retlw	101	;'e'
   376  008F  3463               	retlw	99	;'c'
   377  0090  346C               	retlw	108	;'l'
   378  0091  3465               	retlw	101	;'e'
   379  0092  3465               	retlw	101	;'e'
   380  0093  3420               	retlw	32	;' '
   381  0094  346D               	retlw	109	;'m'
   382  0095  3465               	retlw	101	;'e'
   383  0096  3473               	retlw	115	;'s'
   384  0097  3420               	retlw	32	;' '
   385  0098  3428               	retlw	40	;'('
   386  0099  344D               	retlw	77	;'M'
   387  009A  344D               	retlw	77	;'M'
   388  009B  3429               	retlw	41	;')'
   389  009C  343A               	retlw	58	;':'
   390  009D  3400               	retlw	0
   391  009E                     STR_1:
   392  009E  3445               	retlw	69	;'E'
   393  009F  3473               	retlw	115	;'s'
   394  00A0  3463               	retlw	99	;'c'
   395  00A1  3472               	retlw	114	;'r'
   396  00A2  3469               	retlw	105	;'i'
   397  00A3  3462               	retlw	98	;'b'
   398  00A4  3461               	retlw	97	;'a'
   399  00A5  3420               	retlw	32	;' '
   400  00A6  346C               	retlw	108	;'l'
   401  00A7  3461               	retlw	97	;'a'
   402  00A8  3420               	retlw	32	;' '
   403  00A9  3448               	retlw	72	;'H'
   404  00AA  346F               	retlw	111	;'o'
   405  00AB  3472               	retlw	114	;'r'
   406  00AC  3461               	retlw	97	;'a'
   407  00AD  343A               	retlw	58	;':'
   408  00AE  3400               	retlw	0
   409  00AF                     STR_11:
   410  00AF  3446               	retlw	70	;'F'
   411  00B0  3445               	retlw	69	;'E'
   412  00B1  3442               	retlw	66	;'B'
   413  00B2  3400               	retlw	0
   414  00B3                     STR_21:
   415  00B3  3444               	retlw	68	;'D'
   416  00B4  3449               	retlw	73	;'I'
   417  00B5  3443               	retlw	67	;'C'
   418  00B6  3400               	retlw	0
   419  00B7                     STR_10:
   420  00B7  3445               	retlw	69	;'E'
   421  00B8  344E               	retlw	78	;'N'
   422  00B9  3445               	retlw	69	;'E'
   423  00BA  3400               	retlw	0
   424  00BB                     STR_16:
   425  00BB  344A               	retlw	74	;'J'
   426  00BC  3455               	retlw	85	;'U'
   427  00BD  344C               	retlw	76	;'L'
   428  00BE  3400               	retlw	0
   429  00BF                     STR_15:
   430  00BF  344A               	retlw	74	;'J'
   431  00C0  3455               	retlw	85	;'U'
   432  00C1  344E               	retlw	78	;'N'
   433  00C2  3400               	retlw	0
   434  00C3                     STR_17:
   435  00C3  3441               	retlw	65	;'A'
   436  00C4  3447               	retlw	71	;'G'
   437  00C5  344F               	retlw	79	;'O'
   438  00C6  3400               	retlw	0
   439  00C7                     STR_18:
   440  00C7  3453               	retlw	83	;'S'
   441  00C8  3445               	retlw	69	;'E'
   442  00C9  3450               	retlw	80	;'P'
   443  00CA  3400               	retlw	0
   444  00CB                     STR_12:
   445  00CB  344D               	retlw	77	;'M'
   446  00CC  3441               	retlw	65	;'A'
   447  00CD  3452               	retlw	82	;'R'
   448  00CE  3400               	retlw	0
   449  00CF                     STR_13:
   450  00CF  3441               	retlw	65	;'A'
   451  00D0  3442               	retlw	66	;'B'
   452  00D1  3452               	retlw	82	;'R'
   453  00D2  3400               	retlw	0
   454  00D3                     STR_19:
   455  00D3  344F               	retlw	79	;'O'
   456  00D4  3443               	retlw	67	;'C'
   457  00D5  3454               	retlw	84	;'T'
   458  00D6  3400               	retlw	0
   459  00D7                     STR_20:
   460  00D7  344E               	retlw	78	;'N'
   461  00D8  344F               	retlw	79	;'O'
   462  00D9  3456               	retlw	86	;'V'
   463  00DA  3400               	retlw	0
   464  00DB                     STR_14:
   465  00DB  344D               	retlw	77	;'M'
   466  00DC  3441               	retlw	65	;'A'
   467  00DD  3459               	retlw	89	;'Y'
   468  00DE  3400               	retlw	0
   469                           
   470                           	psect	cinit
   471  07F5                     start_initialization:	
   472                           ; #config settings
   473                           
   474  07F5                     __initialization:
   475                           
   476                           ; Clear objects allocated to COMMON
   477  07F5  01FD               	clrf	__pbssCOMMON& (0+127)
   478                           
   479                           ; Clear objects allocated to BANK0
   480  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   481  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   482  07F8  01A0               	clrf	__pbssBANK0& (0+127)
   483  07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   484  07FA  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   485  07FB  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   486  07FC                     end_of_initialization:	
   487                           ;End of C runtime variable initialization code
   488                           
   489  07FC                     __end_of__initialization:
   490  07FC  0183               	clrf	3
   491  07FD  120A  118A  2DBF   	ljmp	_main	;jump to C main() function
   492                           
   493                           	psect	bssCOMMON
   494  007D                     __pbssCOMMON:
   495  007D                     _Temp:
   496  007D                     	ds	1
   497                           
   498                           	psect	bssBANK0
   499  0020                     __pbssBANK0:
   500  0020                     _pRTCArray:
   501  0020                     	ds	4
   502                           
   503                           	psect	cstackCOMMON
   504  0070                     __pcstackCOMMON:
   505  0070                     ?_InitI2C:
   506  0070                     ??_InitI2C:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_I2C_Start:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ??_I2C_Start:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_I2C_ReStart:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ??_I2C_ReStart:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_I2C_Stop:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??_I2C_Stop:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_I2C_Send_NACK:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_I2C_Send_NACK:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_I2C_Write_Byte:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ??_I2C_Write_Byte:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_I2C_Read_Byte:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ??_I2C_Read_Byte:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_Read_Byte_From_DS1307_RTC:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_SEND_CMD:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ??_SEND_CMD:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_SEND_CHAR:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ??_SEND_CHAR:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_LCD_Init:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_EscribeCadenaLCD:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_UART_Init:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ??_UART_Init:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_MCU_Init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ??_MCU_Init:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_SEND_Tx:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ??_SEND_Tx:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_MSG_Term:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_RecibeHHMM:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_TECLADO:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ??_TECLADO:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_LEA_SEE:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_main:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     I2C_Write_Byte@Byte:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     SEND_Tx@dato:	
   606                           ; 1 bytes @ 0x0
   607                           
   608                           
   609                           ; 1 bytes @ 0x0
   610  0070                     	ds	1
   611  0071                     ?_Write_Byte_To_DS1307_RTC:
   612  0071                     ??_Read_Byte_From_DS1307_RTC:	
   613                           ; 1 bytes @ 0x1
   614                           
   615  0071                     ??_MSG_Term:	
   616                           ; 1 bytes @ 0x1
   617                           
   618  0071                     ?_ESCRIBA_SEE:	
   619                           ; 1 bytes @ 0x1
   620                           
   621  0071                     ??_LEA_SEE:	
   622                           ; 1 bytes @ 0x1
   623                           
   624  0071                     Write_Byte_To_DS1307_RTC@DataByte:	
   625                           ; 1 bytes @ 0x1
   626                           
   627  0071                     SEND_CHAR@dato:	
   628                           ; 1 bytes @ 0x1
   629                           
   630  0071                     ESCRIBA_SEE@dato:	
   631                           ; 1 bytes @ 0x1
   632                           
   633                           
   634                           ; 1 bytes @ 0x1
   635  0071                     	ds	1
   636  0072                     ??_Write_Byte_To_DS1307_RTC:
   637  0072                     ??_EscribeCadenaLCD:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0072                     ??_ESCRIBA_SEE:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0072                     Write_Byte_To_DS1307_RTC@Address:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     Read_Byte_From_DS1307_RTC@Address:	
   647                           ; 1 bytes @ 0x2
   648                           
   649  0072                     SEND_CMD@dato:	
   650                           ; 1 bytes @ 0x2
   651                           
   652  0072                     MSG_Term@s:	
   653                           ; 1 bytes @ 0x2
   654                           
   655  0072                     TECLADO@VPTOD:	
   656                           ; 1 bytes @ 0x2
   657                           
   658  0072                     ESCRIBA_SEE@addr:	
   659                           ; 1 bytes @ 0x2
   660                           
   661  0072                     LEA_SEE@Address:	
   662                           ; 1 bytes @ 0x2
   663                           
   664                           
   665                           ; 1 bytes @ 0x2
   666  0072                     	ds	1
   667  0073                     ??_LCD_Init:
   668  0073                     ??_RecibeHHMM:	
   669                           ; 1 bytes @ 0x3
   670                           
   671  0073                     Read_Byte_From_DS1307_RTC@Byte:	
   672                           ; 1 bytes @ 0x3
   673                           
   674  0073                     EscribeCadenaLCD@s:	
   675                           ; 1 bytes @ 0x3
   676                           
   677  0073                     TECLADO@Tecla:	
   678                           ; 1 bytes @ 0x3
   679                           
   680  0073                     LEA_SEE@Byte:	
   681                           ; 1 bytes @ 0x3
   682                           
   683                           
   684                           ; 1 bytes @ 0x3
   685  0073                     	ds	2
   686  0075                     RecibeHHMM@Datos:
   687                           
   688                           ; 4 bytes @ 0x5
   689  0075                     	ds	4
   690  0079                     RecibeHHMM@Car:
   691                           
   692                           ; 1 bytes @ 0x9
   693  0079                     	ds	1
   694  007A                     ??_main:
   695                           
   696                           ; 1 bytes @ 0xA
   697  007A                     	ds	3
   698                           
   699                           	psect	cstackBANK0
   700  0024                     __pcstackBANK0:
   701  0024                     main@a:
   702                           
   703                           ; 1 bytes @ 0x0
   704  0024                     	ds	1
   705  0025                     main@Car:
   706                           
   707                           ; 1 bytes @ 0x1
   708  0025                     	ds	1
   709                           
   710                           	psect	maintext
   711  05BF                     __pmaintext:	
   712 ;;
   713 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   714 ;;
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 349 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  a               1    0[BANK0 ] unsigned char 
   722 ;;  Car             1    1[BANK0 ] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : B00/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       2       0       0       0
   734 ;;      Temps:          3       0       0       0       0
   735 ;;      Totals:         3       2       0       0       0
   736 ;;Total ram usage:        5 bytes
   737 ;; Hardware stack levels required when called: 3
   738 ;; This function calls:
   739 ;;		_ESCRIBA_SEE
   740 ;;		_EscribeCadenaLCD
   741 ;;		_InitI2C
   742 ;;		_LCD_Init
   743 ;;		_LEA_SEE
   744 ;;		_MCU_Init
   745 ;;		_Read_Byte_From_DS1307_RTC
   746 ;;		_RecibeHHMM
   747 ;;		_SEND_CHAR
   748 ;;		_SEND_CMD
   749 ;;		_TECLADO
   750 ;;		_UART_Init
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _main
   758  05BF                     _main:
   759  05BF                     l2057:	
   760                           ;incstack = 0
   761                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   762                           
   763                           
   764                           ;main.c: 351:     char Car;;main.c: 352:     MCU_Init();
   765  05BF  120A  118A  227E  120A  118A  	fcall	_MCU_Init
   766                           
   767                           ;main.c: 353:     LCD_Init();
   768  05C4  120A  118A  2337  120A  118A  	fcall	_LCD_Init
   769                           
   770                           ;main.c: 354:     UART_Init();
   771  05C9  120A  118A  22F4  120A  118A  	fcall	_UART_Init
   772                           
   773                           ;main.c: 355:     InitI2C();
   774  05CE  120A  118A  22C6  120A  118A  	fcall	_InitI2C
   775  05D3                     l2059:
   776                           
   777                           ;main.c: 357:     EscribeCadenaLCD("MPEI 2020-i + I2C");
   778  05D3  3051               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   779  05D4  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
   780  05D9                     l2061:
   781                           
   782                           ;main.c: 359:     SEND_CMD(0x80 + 64);
   783  05D9  30C0               	movlw	192
   784  05DA  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
   785                           
   786                           ;main.c: 360:     EscribeCadenaLCD(" +++ RTC DS1307 +++");
   787  05DF  3016               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   788  05E0  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
   789  05E5                     l2063:
   790                           
   791                           ;main.c: 362:     SEND_CMD(0x80+20);
   792  05E5  3094               	movlw	148
   793  05E6  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
   794  05EB                     l2065:
   795                           
   796                           ;main.c: 363:     EscribeCadenaLCD("Lectura y escritura");
   797  05EB  302A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   798  05EC  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
   799                           
   800                           ;main.c: 365:     SEND_CMD(0x80+84);
   801  05F1  30D4               	movlw	212
   802  05F2  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
   803  05F7                     l2067:
   804                           
   805                           ;main.c: 366:     EscribeCadenaLCD("DEL MODULO RTC:...");
   806  05F7  303E               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   807  05F8  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
   808  05FD                     l2069:
   809                           
   810                           ;main.c: 368:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   811  05FD  300B               	movlw	11
   812  05FE  00FC               	movwf	??_main+2
   813  05FF  3026               	movlw	38
   814  0600  00FB               	movwf	??_main+1
   815  0601  305D               	movlw	93
   816  0602  00FA               	movwf	??_main
   817  0603                     u1627:
   818  0603  0BFA               	decfsz	??_main,f
   819  0604  2E03               	goto	u1627
   820  0605  0BFB               	decfsz	??_main+1,f
   821  0606  2E03               	goto	u1627
   822  0607  0BFC               	decfsz	??_main+2,f
   823  0608  2E03               	goto	u1627
   824  0609  2E0A               	nop2
   825  060A                     l2071:
   826                           
   827                           ;main.c: 370:     SEND_CMD(1);
   828  060A  3001               	movlw	1
   829  060B  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
   830  0610                     l2073:
   831                           
   832                           ;main.c: 373:     {;main.c: 374:         SEND_CMD(0x80+0);
   833  0610  3080               	movlw	128
   834  0611  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
   835  0616                     l2075:
   836                           
   837                           ;main.c: 376:         Car = Read_Byte_From_DS1307_RTC(2);
   838  0616  3002               	movlw	2
   839  0617  120A  118A  23D0  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
   840  061C  00FA               	movwf	??_main
   841  061D  087A               	movf	??_main,w
   842  061E  1283               	bcf	3,5	;RP0=0, select bank0
   843  061F  1303               	bcf	3,6	;RP1=0, select bank0
   844  0620  00A5               	movwf	main@Car
   845  0621                     l2077:
   846                           
   847                           ;main.c: 377:         SEND_CHAR(((Car>>4) & 0x0F)+0x30);
   848  0621  0825               	movf	main@Car,w
   849  0622  00FA               	movwf	??_main
   850  0623  3004               	movlw	4
   851  0624                     u1325:
   852  0624  1003               	clrc
   853  0625  0CFA               	rrf	??_main,f
   854  0626  3EFF               	addlw	-1
   855  0627  1D03               	skipz
   856  0628  2E24               	goto	u1325
   857  0629  087A               	movf	??_main,w
   858  062A  390F               	andlw	15
   859  062B  3E30               	addlw	48
   860  062C  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   861  0631                     l2079:
   862                           
   863                           ;main.c: 378:         SEND_CHAR((Car & 0x0F) + 0x30);
   864  0631  1283               	bcf	3,5	;RP0=0, select bank0
   865  0632  1303               	bcf	3,6	;RP1=0, select bank0
   866  0633  0825               	movf	main@Car,w
   867  0634  390F               	andlw	15
   868  0635  3E30               	addlw	48
   869  0636  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   870  063B                     l2081:
   871                           
   872                           ;main.c: 380:         SEND_CHAR(':');
   873  063B  303A               	movlw	58
   874  063C  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   875  0641                     l2083:
   876                           
   877                           ;main.c: 382:         Car = Read_Byte_From_DS1307_RTC(1);
   878  0641  3001               	movlw	1
   879  0642  120A  118A  23D0  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
   880  0647  00FA               	movwf	??_main
   881  0648  087A               	movf	??_main,w
   882  0649  1283               	bcf	3,5	;RP0=0, select bank0
   883  064A  1303               	bcf	3,6	;RP1=0, select bank0
   884  064B  00A5               	movwf	main@Car
   885  064C                     l2085:
   886                           
   887                           ;main.c: 383:         SEND_CHAR(((Car>>4) & 0x0F)+0x30);
   888  064C  0825               	movf	main@Car,w
   889  064D  00FA               	movwf	??_main
   890  064E  3004               	movlw	4
   891  064F                     u1335:
   892  064F  1003               	clrc
   893  0650  0CFA               	rrf	??_main,f
   894  0651  3EFF               	addlw	-1
   895  0652  1D03               	skipz
   896  0653  2E4F               	goto	u1335
   897  0654  087A               	movf	??_main,w
   898  0655  390F               	andlw	15
   899  0656  3E30               	addlw	48
   900  0657  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   901  065C                     l2087:
   902                           
   903                           ;main.c: 384:         SEND_CHAR((Car & 0x0F) + 0x30);
   904  065C  1283               	bcf	3,5	;RP0=0, select bank0
   905  065D  1303               	bcf	3,6	;RP1=0, select bank0
   906  065E  0825               	movf	main@Car,w
   907  065F  390F               	andlw	15
   908  0660  3E30               	addlw	48
   909  0661  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   910  0666                     l2089:
   911                           
   912                           ;main.c: 386:         SEND_CHAR(':');
   913  0666  303A               	movlw	58
   914  0667  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   915  066C                     l2091:
   916                           
   917                           ;main.c: 388:         Car = Read_Byte_From_DS1307_RTC(0);
   918  066C  3000               	movlw	0
   919  066D  120A  118A  23D0  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
   920  0672  00FA               	movwf	??_main
   921  0673  087A               	movf	??_main,w
   922  0674  1283               	bcf	3,5	;RP0=0, select bank0
   923  0675  1303               	bcf	3,6	;RP1=0, select bank0
   924  0676  00A5               	movwf	main@Car
   925  0677                     l2093:
   926                           
   927                           ;main.c: 389:         SEND_CHAR(((Car>>4) & 0x0F)+0x30);
   928  0677  0825               	movf	main@Car,w
   929  0678  00FA               	movwf	??_main
   930  0679  3004               	movlw	4
   931  067A                     u1345:
   932  067A  1003               	clrc
   933  067B  0CFA               	rrf	??_main,f
   934  067C  3EFF               	addlw	-1
   935  067D  1D03               	skipz
   936  067E  2E7A               	goto	u1345
   937  067F  087A               	movf	??_main,w
   938  0680  390F               	andlw	15
   939  0681  3E30               	addlw	48
   940  0682  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   941  0687                     l2095:
   942                           
   943                           ;main.c: 390:         SEND_CHAR((Car & 0x0F) + 0x30);
   944  0687  1283               	bcf	3,5	;RP0=0, select bank0
   945  0688  1303               	bcf	3,6	;RP1=0, select bank0
   946  0689  0825               	movf	main@Car,w
   947  068A  390F               	andlw	15
   948  068B  3E30               	addlw	48
   949  068C  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   950  0691                     l2097:
   951                           
   952                           ;main.c: 392:         SEND_CMD(0xC0);
   953  0691  30C0               	movlw	192
   954  0692  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
   955  0697                     l2099:
   956                           
   957                           ;main.c: 394:         Car = Read_Byte_From_DS1307_RTC(4);
   958  0697  3004               	movlw	4
   959  0698  120A  118A  23D0  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
   960  069D  00FA               	movwf	??_main
   961  069E  087A               	movf	??_main,w
   962  069F  1283               	bcf	3,5	;RP0=0, select bank0
   963  06A0  1303               	bcf	3,6	;RP1=0, select bank0
   964  06A1  00A5               	movwf	main@Car
   965  06A2                     l2101:
   966                           
   967                           ;main.c: 395:         SEND_CHAR(((Car>>4) & 0x03)+0x30);
   968  06A2  0825               	movf	main@Car,w
   969  06A3  00FA               	movwf	??_main
   970  06A4  3004               	movlw	4
   971  06A5                     u1355:
   972  06A5  1003               	clrc
   973  06A6  0CFA               	rrf	??_main,f
   974  06A7  3EFF               	addlw	-1
   975  06A8  1D03               	skipz
   976  06A9  2EA5               	goto	u1355
   977  06AA  087A               	movf	??_main,w
   978  06AB  3903               	andlw	3
   979  06AC  3E30               	addlw	48
   980  06AD  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   981  06B2                     l2103:
   982                           
   983                           ;main.c: 396:         SEND_CHAR((Car & 0x0F) + 0x30);
   984  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   985  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   986  06B4  0825               	movf	main@Car,w
   987  06B5  390F               	andlw	15
   988  06B6  3E30               	addlw	48
   989  06B7  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   990  06BC                     l2105:
   991                           
   992                           ;main.c: 398:         SEND_CHAR('/');
   993  06BC  302F               	movlw	47
   994  06BD  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
   995  06C2                     l2107:
   996                           
   997                           ;main.c: 400:         Car = Read_Byte_From_DS1307_RTC(5);
   998  06C2  3005               	movlw	5
   999  06C3  120A  118A  23D0  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
  1000  06C8  00FA               	movwf	??_main
  1001  06C9  087A               	movf	??_main,w
  1002  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1003  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1004  06CC  00A5               	movwf	main@Car
  1005                           
  1006                           ;main.c: 401:         switch(Car)
  1007  06CD  2F3D               	goto	l2137
  1008  06CE                     l2109:
  1009                           
  1010                           ;main.c: 404:                 EscribeCadenaLCD("ENE");
  1011  06CE  30AF               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1012  06CF  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1013                           
  1014                           ;main.c: 405:                 break;
  1015  06D4  2F6B               	goto	l2139
  1016  06D5                     l2111:
  1017                           
  1018                           ;main.c: 407:                 EscribeCadenaLCD("FEB");
  1019  06D5  30A7               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1020  06D6  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1021                           
  1022                           ;main.c: 408:                 break;
  1023  06DB  2F6B               	goto	l2139
  1024  06DC                     l2113:
  1025                           
  1026                           ;main.c: 410:                 EscribeCadenaLCD("MAR");
  1027  06DC  30C3               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1028  06DD  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1029                           
  1030                           ;main.c: 411:                 break;
  1031  06E2  2F6B               	goto	l2139
  1032  06E3                     l2115:
  1033                           
  1034                           ;main.c: 413:                 EscribeCadenaLCD("ABR");
  1035  06E3  30C7               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1036  06E4  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1037                           
  1038                           ;main.c: 414:                 break;
  1039  06E9  2F6B               	goto	l2139
  1040  06EA                     l2117:
  1041                           
  1042                           ;main.c: 416:                 EscribeCadenaLCD("MAY");
  1043  06EA  30D3               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1044  06EB  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1045                           
  1046                           ;main.c: 417:                 break;
  1047  06F0  2F6B               	goto	l2139
  1048  06F1                     l2119:
  1049                           
  1050                           ;main.c: 419:                 EscribeCadenaLCD("JUN");
  1051  06F1  30B7               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1052  06F2  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1053                           
  1054                           ;main.c: 420:                 break;
  1055  06F7  2F6B               	goto	l2139
  1056  06F8                     l2121:
  1057                           
  1058                           ;main.c: 422:                 EscribeCadenaLCD("JUL");
  1059  06F8  30B3               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1060  06F9  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1061                           
  1062                           ;main.c: 423:                 break;
  1063  06FE  2F6B               	goto	l2139
  1064  06FF                     l2123:
  1065                           
  1066                           ;main.c: 425:                 EscribeCadenaLCD("AGO");
  1067  06FF  30BB               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1068  0700  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1069                           
  1070                           ;main.c: 426:                 break;
  1071  0705  2F6B               	goto	l2139
  1072  0706                     l2125:
  1073                           
  1074                           ;main.c: 428:                 EscribeCadenaLCD("SEP");
  1075  0706  30BF               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1076  0707  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1077                           
  1078                           ;main.c: 429:                 break;
  1079  070C  2F6B               	goto	l2139
  1080  070D                     l2127:
  1081                           
  1082                           ;main.c: 431:                 EscribeCadenaLCD("OCT");
  1083  070D  30CB               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  1084  070E  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1085                           
  1086                           ;main.c: 432:                 break;
  1087  0713  2F6B               	goto	l2139
  1088  0714                     l2129:
  1089                           
  1090                           ;main.c: 434:                 EscribeCadenaLCD("NOV");
  1091  0714  30CF               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  1092  0715  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1093                           
  1094                           ;main.c: 435:                 break;
  1095  071A  2F6B               	goto	l2139
  1096  071B                     l2131:
  1097                           
  1098                           ;main.c: 437:                 EscribeCadenaLCD("DIC");
  1099  071B  30AB               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  1100  071C  120A  118A  2318  120A  118A  	fcall	_EscribeCadenaLCD
  1101                           
  1102                           ;main.c: 438:                 break;
  1103  0721  2F6B               	goto	l2139
  1104  0722                     l2133:
  1105                           
  1106                           ;main.c: 440:                 SEND_CHAR(((Car>>4) & 0x0F) + 0x30);
  1107  0722  0825               	movf	main@Car,w
  1108  0723  00FA               	movwf	??_main
  1109  0724  3004               	movlw	4
  1110  0725                     u1365:
  1111  0725  1003               	clrc
  1112  0726  0CFA               	rrf	??_main,f
  1113  0727  3EFF               	addlw	-1
  1114  0728  1D03               	skipz
  1115  0729  2F25               	goto	u1365
  1116  072A  087A               	movf	??_main,w
  1117  072B  390F               	andlw	15
  1118  072C  3E30               	addlw	48
  1119  072D  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
  1120                           
  1121                           ;main.c: 441:                 SEND_CHAR((Car & 0x0F) + 0x30);
  1122  0732  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0733  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0734  0825               	movf	main@Car,w
  1125  0735  390F               	andlw	15
  1126  0736  3E30               	addlw	48
  1127  0737  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
  1128                           
  1129                           ;main.c: 442:                 break;
  1130  073C  2F6B               	goto	l2139
  1131  073D                     l2137:
  1132  073D  0825               	movf	main@Car,w
  1133  073E  00FA               	movwf	??_main
  1134  073F  01FB               	clrf	??_main+1
  1135                           
  1136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1137                           ; Switch size 1, requested type "simple"
  1138                           ; Number of cases is 1, Range of values is 0 to 0
  1139                           ; switch strategies available:
  1140                           ; Name         Instructions Cycles
  1141                           ; simple_byte            4     3 (average)
  1142                           ; direct_byte           11     8 (fixed)
  1143                           ; jumptable            260     6 (fixed)
  1144                           ;	Chosen strategy is simple_byte
  1145  0740  087B               	movf	??_main+1,w
  1146  0741  3A00               	xorlw	0	; case 0
  1147  0742  1903               	skipnz
  1148  0743  2F45               	goto	l2317
  1149  0744  2F22               	goto	l2133
  1150  0745                     l2317:
  1151                           
  1152                           ; Switch size 1, requested type "simple"
  1153                           ; Number of cases is 12, Range of values is 1 to 18
  1154                           ; switch strategies available:
  1155                           ; Name         Instructions Cycles
  1156                           ; simple_byte           37    19 (average)
  1157                           ; direct_byte           65    11 (fixed)
  1158                           ; jumptable            263     9 (fixed)
  1159                           ;	Chosen strategy is simple_byte
  1160  0745  087A               	movf	??_main,w
  1161  0746  3A01               	xorlw	1	; case 1
  1162  0747  1903               	skipnz
  1163  0748  2ECE               	goto	l2109
  1164  0749  3A03               	xorlw	3	; case 2
  1165  074A  1903               	skipnz
  1166  074B  2ED5               	goto	l2111
  1167  074C  3A01               	xorlw	1	; case 3
  1168  074D  1903               	skipnz
  1169  074E  2EDC               	goto	l2113
  1170  074F  3A07               	xorlw	7	; case 4
  1171  0750  1903               	skipnz
  1172  0751  2EE3               	goto	l2115
  1173  0752  3A01               	xorlw	1	; case 5
  1174  0753  1903               	skipnz
  1175  0754  2EEA               	goto	l2117
  1176  0755  3A03               	xorlw	3	; case 6
  1177  0756  1903               	skipnz
  1178  0757  2EF1               	goto	l2119
  1179  0758  3A01               	xorlw	1	; case 7
  1180  0759  1903               	skipnz
  1181  075A  2EF8               	goto	l2121
  1182  075B  3A0F               	xorlw	15	; case 8
  1183  075C  1903               	skipnz
  1184  075D  2EFF               	goto	l2123
  1185  075E  3A01               	xorlw	1	; case 9
  1186  075F  1903               	skipnz
  1187  0760  2F06               	goto	l2125
  1188  0761  3A19               	xorlw	25	; case 16
  1189  0762  1903               	skipnz
  1190  0763  2F0D               	goto	l2127
  1191  0764  3A01               	xorlw	1	; case 17
  1192  0765  1903               	skipnz
  1193  0766  2F14               	goto	l2129
  1194  0767  3A03               	xorlw	3	; case 18
  1195  0768  1903               	skipnz
  1196  0769  2F1B               	goto	l2131
  1197  076A  2F22               	goto	l2133
  1198  076B                     l2139:
  1199                           
  1200                           ;main.c: 446:         SEND_CHAR('/');
  1201  076B  302F               	movlw	47
  1202  076C  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
  1203                           
  1204                           ;main.c: 448:         Car = Read_Byte_From_DS1307_RTC(6);
  1205  0771  3006               	movlw	6
  1206  0772  120A  118A  23D0  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
  1207  0777  00FA               	movwf	??_main
  1208  0778  087A               	movf	??_main,w
  1209  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1210  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1211  077B  00A5               	movwf	main@Car
  1212                           
  1213                           ;main.c: 449:         SEND_CHAR(((Car >> 4) & 0x0F) + 0x30);
  1214  077C  0825               	movf	main@Car,w
  1215  077D  00FA               	movwf	??_main
  1216  077E  3004               	movlw	4
  1217  077F                     u1375:
  1218  077F  1003               	clrc
  1219  0780  0CFA               	rrf	??_main,f
  1220  0781  3EFF               	addlw	-1
  1221  0782  1D03               	skipz
  1222  0783  2F7F               	goto	u1375
  1223  0784  087A               	movf	??_main,w
  1224  0785  390F               	andlw	15
  1225  0786  3E30               	addlw	48
  1226  0787  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
  1227                           
  1228                           ;main.c: 450:         SEND_CHAR((Car & 0x0F) + 0x30);
  1229  078C  1283               	bcf	3,5	;RP0=0, select bank0
  1230  078D  1303               	bcf	3,6	;RP1=0, select bank0
  1231  078E  0825               	movf	main@Car,w
  1232  078F  390F               	andlw	15
  1233  0790  3E30               	addlw	48
  1234  0791  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
  1235  0796                     l2141:
  1236                           
  1237                           ;main.c: 452:         if(PIR1bits.RCIF == 1)
  1238  0796  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0797  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0798  1E8C               	btfss	12,5	;volatile
  1241  0799  2F9B               	goto	u1381
  1242  079A  2F9C               	goto	u1380
  1243  079B                     u1381:
  1244  079B  2FAC               	goto	l2151
  1245  079C                     u1380:
  1246  079C                     l2143:
  1247                           
  1248                           ;main.c: 453:             {;main.c: 454:                 Car = RCREG;
  1249  079C  081A               	movf	26,w	;volatile
  1250  079D  00FA               	movwf	??_main
  1251  079E  087A               	movf	??_main,w
  1252  079F  00A5               	movwf	main@Car
  1253  07A0                     l2145:
  1254                           
  1255                           ;main.c: 455:                 PIR1bits.RCIF = 0;
  1256  07A0  128C               	bcf	12,5	;volatile
  1257  07A1                     l2147:
  1258                           
  1259                           ;main.c: 456:                 if(Car == 'H') RecibeHHMM();
  1260  07A1  3048               	movlw	72
  1261  07A2  0625               	xorwf	main@Car,w
  1262  07A3  1D03               	btfss	3,2
  1263  07A4  2FA6               	goto	u1391
  1264  07A5  2FA7               	goto	u1390
  1265  07A6                     u1391:
  1266  07A6  2FAC               	goto	l2151
  1267  07A7                     u1390:
  1268  07A7                     l2149:
  1269  07A7  120A  118A  2442  120A  118A  	fcall	_RecibeHHMM
  1270  07AC                     l2151:
  1271                           
  1272                           ;main.c: 459:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1273  07AC  3082               	movlw	130
  1274  07AD  00FB               	movwf	??_main+1
  1275  07AE  30DD               	movlw	221
  1276  07AF  00FA               	movwf	??_main
  1277  07B0                     u1637:
  1278  07B0  0BFA               	decfsz	??_main,f
  1279  07B1  2FB0               	goto	u1637
  1280  07B2  0BFB               	decfsz	??_main+1,f
  1281  07B3  2FB0               	goto	u1637
  1282  07B4  2FB5               	nop2
  1283  07B5                     l2153:
  1284                           
  1285                           ;main.c: 461:         char a = TECLADO();
  1286  07B5  120A  118A  2500  120A  118A  	fcall	_TECLADO
  1287  07BA  00FA               	movwf	??_main
  1288  07BB  087A               	movf	??_main,w
  1289  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1290  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1291  07BE  00A4               	movwf	main@a
  1292  07BF                     l2155:
  1293                           
  1294                           ;main.c: 462:         if(a == 0x0D)
  1295  07BF  300D               	movlw	13
  1296  07C0  0624               	xorwf	main@a,w
  1297  07C1  1D03               	btfss	3,2
  1298  07C2  2FC4               	goto	u1401
  1299  07C3  2FC5               	goto	u1400
  1300  07C4                     u1401:
  1301  07C4  2E10               	goto	l2073
  1302  07C5                     u1400:
  1303  07C5                     l2157:
  1304                           
  1305                           ;main.c: 463:         {;main.c: 465:             ESCRIBA_SEE(0x07,'D');
  1306  07C5  3044               	movlw	68
  1307  07C6  00FA               	movwf	??_main
  1308  07C7  087A               	movf	??_main,w
  1309  07C8  00F1               	movwf	ESCRIBA_SEE@dato
  1310  07C9  3007               	movlw	7
  1311  07CA  120A  118A  237C  120A  118A  	fcall	_ESCRIBA_SEE
  1312  07CF                     l2159:
  1313                           
  1314                           ;main.c: 466:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1315  07CF  300D               	movlw	13
  1316  07D0  00FB               	movwf	??_main+1
  1317  07D1  30FB               	movlw	251
  1318  07D2  00FA               	movwf	??_main
  1319  07D3                     u1647:
  1320  07D3  0BFA               	decfsz	??_main,f
  1321  07D4  2FD3               	goto	u1647
  1322  07D5  0BFB               	decfsz	??_main+1,f
  1323  07D6  2FD3               	goto	u1647
  1324  07D7  2FD8               	nop2
  1325  07D8                     l2161:
  1326                           
  1327                           ;main.c: 467:             a = LEA_SEE(0x07);
  1328  07D8  3007               	movlw	7
  1329  07D9  120A  118A  2406  120A  118A  	fcall	_LEA_SEE
  1330  07DE  00FA               	movwf	??_main
  1331  07DF  087A               	movf	??_main,w
  1332  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1333  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1334  07E2  00A4               	movwf	main@a
  1335  07E3                     l2163:
  1336                           
  1337                           ;main.c: 468:             SEND_CMD(0x80 + 20);
  1338  07E3  3094               	movlw	148
  1339  07E4  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
  1340  07E9                     l2165:
  1341                           
  1342                           ;main.c: 469:             SEND_CHAR(a);
  1343  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1344  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1345  07EB  0824               	movf	main@a,w
  1346  07EC  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
  1347  07F1  2E10               	goto	l2073
  1348  07F2  120A  118A  2800   	ljmp	start
  1349  07F5                     __end_of_main:
  1350                           
  1351                           	psect	text1
  1352  02F4                     __ptext1:	
  1353 ;; *************** function _UART_Init *****************
  1354 ;; Defined at:
  1355 ;;		line 69 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_main
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _UART_Init
  1384  02F4                     _UART_Init:
  1385  02F4                     l1707:	
  1386                           ;incstack = 0
  1387                           ; Regs used in _UART_Init: [wreg]
  1388                           
  1389                           
  1390                           ;main.c: 72:     TXSTA = 0x26;
  1391  02F4  3026               	movlw	38
  1392  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  1393  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  1394  02F7  0098               	movwf	24	;volatile
  1395                           
  1396                           ;main.c: 73:     RCSTA = 0x90;
  1397  02F8  3090               	movlw	144
  1398  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1399  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1400  02FB  0098               	movwf	24	;volatile
  1401                           
  1402                           ;main.c: 74:     SPBRG = 25;
  1403  02FC  3019               	movlw	25
  1404  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  1405  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  1406  02FF  0099               	movwf	25	;volatile
  1407  0300                     l1709:
  1408                           
  1409                           ;main.c: 75:     PIR1bits.TXIF = 0;
  1410  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0302  120C               	bcf	12,4	;volatile
  1413  0303                     l1711:
  1414                           
  1415                           ;main.c: 76:     PIR1bits.RCIF = 0;
  1416  0303  128C               	bcf	12,5	;volatile
  1417  0304                     l174:
  1418  0304  0008               	return
  1419  0305                     __end_of_UART_Init:
  1420                           
  1421                           	psect	text2
  1422  0500                     __ptext2:	
  1423 ;; *************** function _TECLADO *****************
  1424 ;; Defined at:
  1425 ;;		line 155 in file "main.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  Tecla           1    3[COMMON] unsigned char 
  1430 ;;  VPTOD           1    2[COMMON] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      unsigned char 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         2       0       0       0       0
  1442 ;;      Temps:          2       0       0       0       0
  1443 ;;      Totals:         4       0       0       0       0
  1444 ;;Total ram usage:        4 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;;		_LEA_FECHA
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           
  1455                           ;psect for function _TECLADO
  1456  0500                     _TECLADO:
  1457  0500                     l1763:	
  1458                           ;incstack = 0
  1459                           ; Regs used in _TECLADO: [wreg-fsr0h+status,2+status,0]
  1460                           
  1461                           
  1462                           ;main.c: 156:     char Tecla = 1;
  1463  0500  01F3               	clrf	TECLADO@Tecla
  1464  0501  0AF3               	incf	TECLADO@Tecla,f
  1465  0502                     l1765:
  1466                           
  1467                           ;main.c: 157:     char VPTOD = 0x0E;
  1468  0502  300E               	movlw	14
  1469  0503  00F0               	movwf	??_TECLADO
  1470  0504  0870               	movf	??_TECLADO,w
  1471  0505  00F2               	movwf	TECLADO@VPTOD
  1472  0506                     l211:	
  1473                           ;main.c: 159:     do
  1474                           
  1475                           
  1476                           ;main.c: 160:     {;main.c: 161:         PORTD = VPTOD;
  1477  0506  0872               	movf	TECLADO@VPTOD,w
  1478  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0509  0088               	movwf	8	;volatile
  1481  050A                     l1767:
  1482                           
  1483                           ;main.c: 162:         if (PORTDbits.RD4 == 0) goto Antirrebote;
  1484  050A  1A08               	btfsc	8,4	;volatile
  1485  050B  2D0D               	goto	u971
  1486  050C  2D0E               	goto	u970
  1487  050D                     u971:
  1488  050D  2D0F               	goto	l1771
  1489  050E                     u970:
  1490  050E  2D45               	goto	l219
  1491  050F                     l1771:
  1492                           
  1493                           ;main.c: 163:         Tecla++;
  1494  050F  3001               	movlw	1
  1495  0510  00F0               	movwf	??_TECLADO
  1496  0511  0870               	movf	??_TECLADO,w
  1497  0512  07F3               	addwf	TECLADO@Tecla,f
  1498  0513                     l1773:
  1499                           
  1500                           ;main.c: 164:         if (PORTDbits.RD5 == 0) goto Antirrebote;
  1501  0513  1A88               	btfsc	8,5	;volatile
  1502  0514  2D16               	goto	u981
  1503  0515  2D17               	goto	u980
  1504  0516                     u981:
  1505  0516  2D18               	goto	l1777
  1506  0517                     u980:
  1507  0517  2D45               	goto	l219
  1508  0518                     l1777:
  1509                           
  1510                           ;main.c: 165:         Tecla++;
  1511  0518  3001               	movlw	1
  1512  0519  00F0               	movwf	??_TECLADO
  1513  051A  0870               	movf	??_TECLADO,w
  1514  051B  07F3               	addwf	TECLADO@Tecla,f
  1515  051C                     l1779:
  1516                           
  1517                           ;main.c: 166:         if (PORTDbits.RD6 == 0) goto Antirrebote;
  1518  051C  1B08               	btfsc	8,6	;volatile
  1519  051D  2D1F               	goto	u991
  1520  051E  2D20               	goto	u990
  1521  051F                     u991:
  1522  051F  2D21               	goto	l1783
  1523  0520                     u990:
  1524  0520  2D45               	goto	l219
  1525  0521                     l1783:
  1526                           
  1527                           ;main.c: 167:         Tecla++;
  1528  0521  3001               	movlw	1
  1529  0522  00F0               	movwf	??_TECLADO
  1530  0523  0870               	movf	??_TECLADO,w
  1531  0524  07F3               	addwf	TECLADO@Tecla,f
  1532  0525                     l1785:
  1533                           
  1534                           ;main.c: 168:         if (PORTDbits.RD7 == 0) goto Antirrebote;
  1535  0525  1B88               	btfsc	8,7	;volatile
  1536  0526  2D28               	goto	u1001
  1537  0527  2D29               	goto	u1000
  1538  0528                     u1001:
  1539  0528  2D2A               	goto	l1789
  1540  0529                     u1000:
  1541  0529  2D45               	goto	l219
  1542  052A                     l1789:
  1543                           
  1544                           ;main.c: 169:         Tecla++;
  1545  052A  3001               	movlw	1
  1546  052B  00F0               	movwf	??_TECLADO
  1547  052C  0870               	movf	??_TECLADO,w
  1548  052D  07F3               	addwf	TECLADO@Tecla,f
  1549  052E                     l1791:
  1550                           
  1551                           ;main.c: 170:         VPTOD = (char)(VPTOD << 1) | 1;
  1552  052E  1403               	setc
  1553  052F  0DF2               	rlf	TECLADO@VPTOD,f
  1554                           
  1555                           ;main.c: 171:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1556  0530  300D               	movlw	13
  1557  0531  00F1               	movwf	??_TECLADO+1
  1558  0532  30FB               	movlw	251
  1559  0533  00F0               	movwf	??_TECLADO
  1560  0534                     u1657:
  1561  0534  0BF0               	decfsz	??_TECLADO,f
  1562  0535  2D34               	goto	u1657
  1563  0536  0BF1               	decfsz	??_TECLADO+1,f
  1564  0537  2D34               	goto	u1657
  1565  0538  2D39               	nop2
  1566                           
  1567                           ;main.c: 173:     } while (Tecla < 17);
  1568  0539  3011               	movlw	17
  1569  053A  0273               	subwf	TECLADO@Tecla,w
  1570  053B  1C03               	skipc
  1571  053C  2D3E               	goto	u1011
  1572  053D  2D3F               	goto	u1010
  1573  053E                     u1011:
  1574  053E  2D06               	goto	l211
  1575  053F                     u1010:
  1576  053F                     l1793:
  1577                           
  1578                           ;main.c: 174:     PORTD = 0xFF;
  1579  053F  30FF               	movlw	255
  1580  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0542  0088               	movwf	8	;volatile
  1583                           
  1584                           ;main.c: 175:     return 0;
  1585  0543  3000               	movlw	0
  1586  0544  2DBE               	goto	l218
  1587  0545                     l219:
  1588  0545  1E08               	btfss	8,4	;volatile
  1589  0546  2D48               	goto	u1021
  1590  0547  2D49               	goto	u1020
  1591  0548                     u1021:
  1592  0548  2D45               	goto	l219
  1593  0549                     u1020:
  1594  0549                     l222:
  1595  0549  1E88               	btfss	8,5	;volatile
  1596  054A  2D4C               	goto	u1031
  1597  054B  2D4D               	goto	u1030
  1598  054C                     u1031:
  1599  054C  2D49               	goto	l222
  1600  054D                     u1030:
  1601  054D                     l225:
  1602  054D  1F08               	btfss	8,6	;volatile
  1603  054E  2D50               	goto	u1041
  1604  054F  2D51               	goto	u1040
  1605  0550                     u1041:
  1606  0550  2D4D               	goto	l225
  1607  0551                     u1040:
  1608  0551                     l228:
  1609  0551  1F88               	btfss	8,7	;volatile
  1610  0552  2D54               	goto	u1051
  1611  0553  2D55               	goto	u1050
  1612  0554                     u1051:
  1613  0554  2D51               	goto	l228
  1614  0555                     u1050:
  1615  0555                     l1797:
  1616                           
  1617                           ;main.c: 182:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1618  0555  3082               	movlw	130
  1619  0556  00F1               	movwf	??_TECLADO+1
  1620  0557  30DD               	movlw	221
  1621  0558  00F0               	movwf	??_TECLADO
  1622  0559                     u1667:
  1623  0559  0BF0               	decfsz	??_TECLADO,f
  1624  055A  2D59               	goto	u1667
  1625  055B  0BF1               	decfsz	??_TECLADO+1,f
  1626  055C  2D59               	goto	u1667
  1627  055D  2D5E               	nop2
  1628                           
  1629                           ;main.c: 183:     PORTD = 0xFF;
  1630  055E  30FF               	movlw	255
  1631  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0561  0088               	movwf	8	;volatile
  1634                           
  1635                           ;main.c: 184:     switch(Tecla){
  1636  0562  2D83               	goto	l1865
  1637  0563                     l1799:
  1638                           
  1639                           ;main.c: 186:             return '7';
  1640  0563  3037               	movlw	55
  1641  0564  2DBE               	goto	l218
  1642  0565                     l1803:
  1643                           
  1644                           ;main.c: 188:             return '8';
  1645  0565  3038               	movlw	56
  1646  0566  2DBE               	goto	l218
  1647  0567                     l1807:
  1648                           
  1649                           ;main.c: 190:             return '9';
  1650  0567  3039               	movlw	57
  1651  0568  2DBE               	goto	l218
  1652  0569                     l1811:
  1653                           
  1654                           ;main.c: 192:             return '/';
  1655  0569  302F               	movlw	47
  1656  056A  2DBE               	goto	l218
  1657  056B                     l1815:
  1658                           
  1659                           ;main.c: 194:             return '4';
  1660  056B  3034               	movlw	52
  1661  056C  2DBE               	goto	l218
  1662  056D                     l1819:
  1663                           
  1664                           ;main.c: 196:             return '5';
  1665  056D  3035               	movlw	53
  1666  056E  2DBE               	goto	l218
  1667  056F                     l1823:
  1668                           
  1669                           ;main.c: 198:             return '6';
  1670  056F  3036               	movlw	54
  1671  0570  2DBE               	goto	l218
  1672  0571                     l1827:
  1673                           
  1674                           ;main.c: 200:             return 'X';
  1675  0571  3058               	movlw	88
  1676  0572  2DBE               	goto	l218
  1677  0573                     l1831:
  1678                           
  1679                           ;main.c: 202:             return '1';
  1680  0573  3031               	movlw	49
  1681  0574  2DBE               	goto	l218
  1682  0575                     l1835:
  1683                           
  1684                           ;main.c: 204:             return '2';
  1685  0575  3032               	movlw	50
  1686  0576  2DBE               	goto	l218
  1687  0577                     l1839:
  1688                           
  1689                           ;main.c: 206:             return '3';
  1690  0577  3033               	movlw	51
  1691  0578  2DBE               	goto	l218
  1692  0579                     l1843:
  1693                           
  1694                           ;main.c: 208:             return '-';
  1695  0579  302D               	movlw	45
  1696  057A  2DBE               	goto	l218
  1697  057B                     l1847:
  1698                           
  1699                           ;main.c: 210:             return 0x0D;
  1700  057B  300D               	movlw	13
  1701  057C  2DBE               	goto	l218
  1702  057D                     l1851:
  1703                           
  1704                           ;main.c: 212:             return '0';
  1705  057D  3030               	movlw	48
  1706  057E  2DBE               	goto	l218
  1707  057F                     l1855:
  1708                           
  1709                           ;main.c: 214:             return '=';
  1710  057F  303D               	movlw	61
  1711  0580  2DBE               	goto	l218
  1712  0581                     l1859:
  1713                           
  1714                           ;main.c: 216:             return '+';
  1715  0581  302B               	movlw	43
  1716  0582  2DBE               	goto	l218
  1717  0583                     l1865:
  1718  0583  0873               	movf	TECLADO@Tecla,w
  1719  0584  00F0               	movwf	??_TECLADO
  1720  0585  01F1               	clrf	??_TECLADO+1
  1721                           
  1722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1723                           ; Switch size 1, requested type "simple"
  1724                           ; Number of cases is 1, Range of values is 0 to 0
  1725                           ; switch strategies available:
  1726                           ; Name         Instructions Cycles
  1727                           ; simple_byte            4     3 (average)
  1728                           ; direct_byte           11     8 (fixed)
  1729                           ; jumptable            260     6 (fixed)
  1730                           ;	Chosen strategy is simple_byte
  1731  0586  0871               	movf	??_TECLADO+1,w
  1732  0587  3A00               	xorlw	0	; case 0
  1733  0588  1903               	skipnz
  1734  0589  2D8B               	goto	l2319
  1735  058A  2DBD               	goto	l1867
  1736  058B                     l2319:
  1737                           
  1738                           ; Switch size 1, requested type "simple"
  1739                           ; Number of cases is 16, Range of values is 1 to 16
  1740                           ; switch strategies available:
  1741                           ; Name         Instructions Cycles
  1742                           ; simple_byte           49    25 (average)
  1743                           ; direct_byte           59    11 (fixed)
  1744                           ; jumptable            263     9 (fixed)
  1745                           ;	Chosen strategy is simple_byte
  1746  058B  0870               	movf	??_TECLADO,w
  1747  058C  3A01               	xorlw	1	; case 1
  1748  058D  1903               	skipnz
  1749  058E  2D63               	goto	l1799
  1750  058F  3A03               	xorlw	3	; case 2
  1751  0590  1903               	skipnz
  1752  0591  2D65               	goto	l1803
  1753  0592  3A01               	xorlw	1	; case 3
  1754  0593  1903               	skipnz
  1755  0594  2D67               	goto	l1807
  1756  0595  3A07               	xorlw	7	; case 4
  1757  0596  1903               	skipnz
  1758  0597  2D69               	goto	l1811
  1759  0598  3A01               	xorlw	1	; case 5
  1760  0599  1903               	skipnz
  1761  059A  2D6B               	goto	l1815
  1762  059B  3A03               	xorlw	3	; case 6
  1763  059C  1903               	skipnz
  1764  059D  2D6D               	goto	l1819
  1765  059E  3A01               	xorlw	1	; case 7
  1766  059F  1903               	skipnz
  1767  05A0  2D6F               	goto	l1823
  1768  05A1  3A0F               	xorlw	15	; case 8
  1769  05A2  1903               	skipnz
  1770  05A3  2D71               	goto	l1827
  1771  05A4  3A01               	xorlw	1	; case 9
  1772  05A5  1903               	skipnz
  1773  05A6  2D73               	goto	l1831
  1774  05A7  3A03               	xorlw	3	; case 10
  1775  05A8  1903               	skipnz
  1776  05A9  2D75               	goto	l1835
  1777  05AA  3A01               	xorlw	1	; case 11
  1778  05AB  1903               	skipnz
  1779  05AC  2D77               	goto	l1839
  1780  05AD  3A07               	xorlw	7	; case 12
  1781  05AE  1903               	skipnz
  1782  05AF  2D79               	goto	l1843
  1783  05B0  3A01               	xorlw	1	; case 13
  1784  05B1  1903               	skipnz
  1785  05B2  2D7B               	goto	l1847
  1786  05B3  3A03               	xorlw	3	; case 14
  1787  05B4  1903               	skipnz
  1788  05B5  2D7D               	goto	l1851
  1789  05B6  3A01               	xorlw	1	; case 15
  1790  05B7  1903               	skipnz
  1791  05B8  2D7F               	goto	l1855
  1792  05B9  3A1F               	xorlw	31	; case 16
  1793  05BA  1903               	skipnz
  1794  05BB  2D81               	goto	l1859
  1795  05BC  2DBD               	goto	l1867
  1796  05BD                     l1867:
  1797                           
  1798                           ;main.c: 221:     return 0;
  1799  05BD  3000               	movlw	0
  1800  05BE                     l218:
  1801  05BE  0008               	return
  1802  05BF                     __end_of_TECLADO:
  1803                           
  1804                           	psect	text3
  1805  0442                     __ptext3:	
  1806 ;; *************** function _RecibeHHMM *****************
  1807 ;; Defined at:
  1808 ;;		line 100 in file "main.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  Datos           4    5[COMMON] unsigned char [4]
  1813 ;;  Car             1    9[COMMON] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         0       0       0       0       0
  1824 ;;      Locals:         5       0       0       0       0
  1825 ;;      Temps:          2       0       0       0       0
  1826 ;;      Totals:         7       0       0       0       0
  1827 ;;Total ram usage:        7 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 2
  1830 ;; This function calls:
  1831 ;;		_MSG_Term
  1832 ;;		_SEND_CMD
  1833 ;;		_SEND_Tx
  1834 ;;		_Write_Byte_To_DS1307_RTC
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _RecibeHHMM
  1842  0442                     _RecibeHHMM:
  1843  0442                     l1719:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _RecibeHHMM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1846                           
  1847                           
  1848                           ;main.c: 102:     char Car, Datos[4];;main.c: 103:     SEND_CMD(0x01);
  1849  0442  3001               	movlw	1
  1850  0443  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
  1851  0448                     l1721:
  1852                           
  1853                           ;main.c: 105:     MSG_Term("Escriba la Hora:");
  1854  0448  3096               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1855  0449  120A  118A  23A5  120A  118A  	fcall	_MSG_Term
  1856  044E                     l192:	
  1857                           ;main.c: 107:     while(PIR1bits.RCIF == 0);
  1858                           
  1859  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1860  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1861  0450  1E8C               	btfss	12,5	;volatile
  1862  0451  2C53               	goto	u871
  1863  0452  2C54               	goto	u870
  1864  0453                     u871:
  1865  0453  2C4E               	goto	l192
  1866  0454                     u870:
  1867  0454                     l194:
  1868                           
  1869                           ;main.c: 108:     if(PIR1bits.RCIF == 1)
  1870  0454  1E8C               	btfss	12,5	;volatile
  1871  0455  2C57               	goto	u881
  1872  0456  2C58               	goto	u880
  1873  0457                     u881:
  1874  0457  2C67               	goto	l196
  1875  0458                     u880:
  1876  0458                     l1723:
  1877                           
  1878                           ;main.c: 109:         {;main.c: 110:             Car = RCREG;
  1879  0458  081A               	movf	26,w	;volatile
  1880  0459  00F3               	movwf	??_RecibeHHMM
  1881  045A  0873               	movf	??_RecibeHHMM,w
  1882  045B  00F9               	movwf	RecibeHHMM@Car
  1883  045C                     l1725:
  1884                           
  1885                           ;main.c: 111:             PIR1bits.RCIF = 0;
  1886  045C  128C               	bcf	12,5	;volatile
  1887                           
  1888                           ;main.c: 112:             Datos[3] = Car;
  1889  045D  0879               	movf	RecibeHHMM@Car,w
  1890  045E  00F3               	movwf	??_RecibeHHMM
  1891  045F  0873               	movf	??_RecibeHHMM,w
  1892  0460  00F8               	movwf	RecibeHHMM@Datos+3
  1893  0461                     l1727:
  1894                           
  1895                           ;main.c: 113:             SEND_Tx(Car);
  1896  0461  0879               	movf	RecibeHHMM@Car,w
  1897  0462  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  1898  0467                     l196:
  1899  0467  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0468  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0469  1E8C               	btfss	12,5	;volatile
  1902  046A  2C6C               	goto	u891
  1903  046B  2C6D               	goto	u890
  1904  046C                     u891:
  1905  046C  2C67               	goto	l196
  1906  046D                     u890:
  1907  046D                     l198:
  1908                           
  1909                           ;main.c: 116:     if(PIR1bits.RCIF == 1)
  1910  046D  1E8C               	btfss	12,5	;volatile
  1911  046E  2C70               	goto	u901
  1912  046F  2C71               	goto	u900
  1913  0470                     u901:
  1914  0470  2C8C               	goto	l1739
  1915  0471                     u900:
  1916  0471                     l1729:
  1917                           
  1918                           ;main.c: 117:         {;main.c: 118:             Car = RCREG;
  1919  0471  081A               	movf	26,w	;volatile
  1920  0472  00F3               	movwf	??_RecibeHHMM
  1921  0473  0873               	movf	??_RecibeHHMM,w
  1922  0474  00F9               	movwf	RecibeHHMM@Car
  1923  0475                     l1731:
  1924                           
  1925                           ;main.c: 119:             PIR1bits.RCIF = 0;
  1926  0475  128C               	bcf	12,5	;volatile
  1927                           
  1928                           ;main.c: 120:             Datos[2] = Car;
  1929  0476  0879               	movf	RecibeHHMM@Car,w
  1930  0477  00F3               	movwf	??_RecibeHHMM
  1931  0478  0873               	movf	??_RecibeHHMM,w
  1932  0479  00F7               	movwf	RecibeHHMM@Datos+2
  1933  047A                     l1733:
  1934                           
  1935                           ;main.c: 121:             SEND_Tx(Car);
  1936  047A  0879               	movf	RecibeHHMM@Car,w
  1937  047B  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  1938  0480                     l1735:
  1939                           
  1940                           ;main.c: 122:             SEND_Tx(0x0D);
  1941  0480  300D               	movlw	13
  1942  0481  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  1943  0486                     l1737:
  1944                           
  1945                           ;main.c: 123:             SEND_Tx(0x0A);
  1946  0486  300A               	movlw	10
  1947  0487  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  1948  048C                     l1739:
  1949                           
  1950                           ;main.c: 126:     MSG_Term("Escriba los minutos:");
  1951  048C  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1952  048D  120A  118A  23A5  120A  118A  	fcall	_MSG_Term
  1953  0492                     l200:	
  1954                           ;main.c: 127:     while(PIR1bits.RCIF == 0);
  1955                           
  1956  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1958  0494  1E8C               	btfss	12,5	;volatile
  1959  0495  2C97               	goto	u911
  1960  0496  2C98               	goto	u910
  1961  0497                     u911:
  1962  0497  2C92               	goto	l200
  1963  0498                     u910:
  1964  0498                     l202:
  1965                           
  1966                           ;main.c: 128:     if (PIR1bits.RCIF == 1)
  1967  0498  1E8C               	btfss	12,5	;volatile
  1968  0499  2C9B               	goto	u921
  1969  049A  2C9C               	goto	u920
  1970  049B                     u921:
  1971  049B  2CAB               	goto	l204
  1972  049C                     u920:
  1973  049C                     l1741:
  1974                           
  1975                           ;main.c: 129:         {;main.c: 130:             Car = RCREG;
  1976  049C  081A               	movf	26,w	;volatile
  1977  049D  00F3               	movwf	??_RecibeHHMM
  1978  049E  0873               	movf	??_RecibeHHMM,w
  1979  049F  00F9               	movwf	RecibeHHMM@Car
  1980  04A0                     l1743:
  1981                           
  1982                           ;main.c: 131:             PIR1bits.RCIF = 0;
  1983  04A0  128C               	bcf	12,5	;volatile
  1984                           
  1985                           ;main.c: 132:             Datos[1] = Car;
  1986  04A1  0879               	movf	RecibeHHMM@Car,w
  1987  04A2  00F3               	movwf	??_RecibeHHMM
  1988  04A3  0873               	movf	??_RecibeHHMM,w
  1989  04A4  00F6               	movwf	RecibeHHMM@Datos+1
  1990  04A5                     l1745:
  1991                           
  1992                           ;main.c: 133:             SEND_Tx(Car);
  1993  04A5  0879               	movf	RecibeHHMM@Car,w
  1994  04A6  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  1995  04AB                     l204:
  1996  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1997  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1998  04AD  1E8C               	btfss	12,5	;volatile
  1999  04AE  2CB0               	goto	u931
  2000  04AF  2CB1               	goto	u930
  2001  04B0                     u931:
  2002  04B0  2CAB               	goto	l204
  2003  04B1                     u930:
  2004  04B1                     l206:
  2005                           
  2006                           ;main.c: 137:     if(PIR1bits.RCIF == 1)
  2007  04B1  1E8C               	btfss	12,5	;volatile
  2008  04B2  2CB4               	goto	u941
  2009  04B3  2CB5               	goto	u940
  2010  04B4                     u941:
  2011  04B4  2CD0               	goto	l1757
  2012  04B5                     u940:
  2013  04B5                     l1747:
  2014                           
  2015                           ;main.c: 138:         {;main.c: 139:             Car = RCREG;
  2016  04B5  081A               	movf	26,w	;volatile
  2017  04B6  00F3               	movwf	??_RecibeHHMM
  2018  04B7  0873               	movf	??_RecibeHHMM,w
  2019  04B8  00F9               	movwf	RecibeHHMM@Car
  2020  04B9                     l1749:
  2021                           
  2022                           ;main.c: 140:             PIR1bits.RCIF = 0;
  2023  04B9  128C               	bcf	12,5	;volatile
  2024                           
  2025                           ;main.c: 141:             Datos[0] = Car;
  2026  04BA  0879               	movf	RecibeHHMM@Car,w
  2027  04BB  00F3               	movwf	??_RecibeHHMM
  2028  04BC  0873               	movf	??_RecibeHHMM,w
  2029  04BD  00F5               	movwf	RecibeHHMM@Datos
  2030  04BE                     l1751:
  2031                           
  2032                           ;main.c: 142:             SEND_Tx(Car);
  2033  04BE  0879               	movf	RecibeHHMM@Car,w
  2034  04BF  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  2035  04C4                     l1753:
  2036                           
  2037                           ;main.c: 143:             SEND_Tx(0x0D);
  2038  04C4  300D               	movlw	13
  2039  04C5  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  2040  04CA                     l1755:
  2041                           
  2042                           ;main.c: 144:             SEND_Tx(0x0A);
  2043  04CA  300A               	movlw	10
  2044  04CB  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  2045  04D0                     l1757:
  2046                           
  2047                           ;main.c: 149:     Write_Byte_To_DS1307_RTC(2,(Datos[3]<<4)+ (Datos[2]& 0x0F));
  2048  04D0  0878               	movf	RecibeHHMM@Datos+3,w
  2049  04D1  00F3               	movwf	??_RecibeHHMM
  2050  04D2  3004               	movlw	4
  2051  04D3                     u955:
  2052  04D3  1003               	clrc
  2053  04D4  0DF3               	rlf	??_RecibeHHMM,f
  2054  04D5  3EFF               	addlw	-1
  2055  04D6  1D03               	skipz
  2056  04D7  2CD3               	goto	u955
  2057  04D8  0877               	movf	RecibeHHMM@Datos+2,w
  2058  04D9  390F               	andlw	15
  2059  04DA  0773               	addwf	??_RecibeHHMM,w
  2060  04DB  00F4               	movwf	??_RecibeHHMM+1
  2061  04DC  0874               	movf	??_RecibeHHMM+1,w
  2062  04DD  00F1               	movwf	Write_Byte_To_DS1307_RTC@DataByte
  2063  04DE  3002               	movlw	2
  2064  04DF  120A  118A  2359  120A  118A  	fcall	_Write_Byte_To_DS1307_RTC
  2065  04E4                     l1759:
  2066                           
  2067                           ;main.c: 150:     Write_Byte_To_DS1307_RTC(1,(Datos[1]<<4)+ (Datos[0]& 0x0F));
  2068  04E4  0876               	movf	RecibeHHMM@Datos+1,w
  2069  04E5  00F3               	movwf	??_RecibeHHMM
  2070  04E6  3004               	movlw	4
  2071  04E7                     u965:
  2072  04E7  1003               	clrc
  2073  04E8  0DF3               	rlf	??_RecibeHHMM,f
  2074  04E9  3EFF               	addlw	-1
  2075  04EA  1D03               	skipz
  2076  04EB  2CE7               	goto	u965
  2077  04EC  0875               	movf	RecibeHHMM@Datos,w
  2078  04ED  390F               	andlw	15
  2079  04EE  0773               	addwf	??_RecibeHHMM,w
  2080  04EF  00F4               	movwf	??_RecibeHHMM+1
  2081  04F0  0874               	movf	??_RecibeHHMM+1,w
  2082  04F1  00F1               	movwf	Write_Byte_To_DS1307_RTC@DataByte
  2083  04F2  3001               	movlw	1
  2084  04F3  120A  118A  2359  120A  118A  	fcall	_Write_Byte_To_DS1307_RTC
  2085  04F8                     l1761:
  2086                           
  2087                           ;main.c: 151:     Write_Byte_To_DS1307_RTC(0,0);
  2088  04F8  01F1               	clrf	Write_Byte_To_DS1307_RTC@DataByte
  2089  04F9  3000               	movlw	0
  2090  04FA  120A  118A  2359  120A  118A  	fcall	_Write_Byte_To_DS1307_RTC
  2091  04FF                     l208:
  2092  04FF  0008               	return
  2093  0500                     __end_of_RecibeHHMM:
  2094                           
  2095                           	psect	text4
  2096  0359                     __ptext4:	
  2097 ;; *************** function _Write_Byte_To_DS1307_RTC *****************
  2098 ;; Defined at:
  2099 ;;		line 9 in file "./DS1307.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  Address         1    wreg     unsigned char 
  2102 ;;  DataByte        1    1[COMMON] unsigned char 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  Address         1    2[COMMON] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, pclath, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2114 ;;      Params:         1       0       0       0       0
  2115 ;;      Locals:         1       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0
  2117 ;;      Totals:         2       0       0       0       0
  2118 ;;Total ram usage:        2 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 1
  2121 ;; This function calls:
  2122 ;;		_I2C_Start
  2123 ;;		_I2C_Stop
  2124 ;;		_I2C_Write_Byte
  2125 ;; This function is called by:
  2126 ;;		_RecibeHHMM
  2127 ;;		_LEA_FECHA
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _Write_Byte_To_DS1307_RTC
  2133  0359                     _Write_Byte_To_DS1307_RTC:
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in _Write_Byte_To_DS1307_RTC: [wreg+status,2+status,0+pclath+cstack]
  2137                           ;Write_Byte_To_DS1307_RTC@Address stored from wreg
  2138  0359  00F2               	movwf	Write_Byte_To_DS1307_RTC@Address
  2139  035A                     l1585:
  2140                           
  2141                           ;./DS1307.c: 9: void Write_Byte_To_DS1307_RTC(unsigned char Address, unsigned char DataB
      +                          yte);./DS1307.c: 10: {;./DS1307.c: 11:  I2C_Start();
  2142  035A  120A  118A  2286  120A  118A  	fcall	_I2C_Start
  2143  035F                     l1589:	
  2144                           ;./DS1307.c: 14:  while(I2C_Write_Byte(0xD0 + 0) == 1)
  2145                           
  2146                           
  2147                           ;./DS1307.c: 14:  while(I2C_Write_Byte(0xD0 + 0) == 1)
  2148  035F  30D0               	movlw	208
  2149  0360  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  2150  0365  3A01               	xorlw	1
  2151  0366  1903               	skipnz
  2152  0367  2B69               	goto	u791
  2153  0368  2B6A               	goto	u790
  2154  0369                     u791:
  2155  0369  2B5A               	goto	l1585
  2156  036A                     u790:
  2157  036A                     l1591:
  2158                           
  2159                           ;./DS1307.c: 17:  I2C_Write_Byte(Address);
  2160  036A  0872               	movf	Write_Byte_To_DS1307_RTC@Address,w
  2161  036B  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  2162                           
  2163                           ;./DS1307.c: 18:  I2C_Write_Byte(DataByte);
  2164  0370  0871               	movf	Write_Byte_To_DS1307_RTC@DataByte,w
  2165  0371  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  2166  0376                     l1593:
  2167                           
  2168                           ;./DS1307.c: 19:  I2C_Stop();
  2169  0376  120A  118A  2290  120A  118A  	fcall	_I2C_Stop
  2170  037B                     l111:
  2171  037B  0008               	return
  2172  037C                     __end_of_Write_Byte_To_DS1307_RTC:
  2173                           
  2174                           	psect	text5
  2175  03A5                     __ptext5:	
  2176 ;; *************** function _MSG_Term *****************
  2177 ;; Defined at:
  2178 ;;		line 93 in file "main.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  s               1    wreg     PTR const unsigned char 
  2181 ;;		 -> STR_2(21), STR_1(17), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  s               1    2[COMMON] PTR const unsigned char 
  2184 ;;		 -> STR_2(21), STR_1(17), 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       0       0       0       0
  2195 ;;      Locals:         1       0       0       0       0
  2196 ;;      Temps:          1       0       0       0       0
  2197 ;;      Totals:         2       0       0       0       0
  2198 ;;Total ram usage:        2 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 1
  2201 ;; This function calls:
  2202 ;;		_SEND_Tx
  2203 ;; This function is called by:
  2204 ;;		_RecibeHHMM
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           
  2209                           ;psect for function _MSG_Term
  2210  03A5                     _MSG_Term:
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _MSG_Term: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2214                           ;MSG_Term@s stored from wreg
  2215  03A5  00F2               	movwf	MSG_Term@s
  2216  03A6                     l1607:
  2217                           
  2218                           ;main.c: 93: void MSG_Term(const char *s);main.c: 94: {;main.c: 95: while(*s) SEND_Tx(*s
      +                          ++);
  2219  03A6  2BB7               	goto	l1613
  2220  03A7                     l1609:
  2221  03A7  0872               	movf	MSG_Term@s,w
  2222  03A8  0084               	movwf	4
  2223  03A9  120A  118A  2003  120A  118A  	fcall	stringdir
  2224  03AE  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  2225  03B3                     l1611:
  2226  03B3  3001               	movlw	1
  2227  03B4  00F1               	movwf	??_MSG_Term
  2228  03B5  0871               	movf	??_MSG_Term,w
  2229  03B6  07F2               	addwf	MSG_Term@s,f
  2230  03B7                     l1613:
  2231  03B7  0872               	movf	MSG_Term@s,w
  2232  03B8  0084               	movwf	4
  2233  03B9  120A  118A  2003  120A  118A  	fcall	stringdir
  2234  03BE  3A00               	xorlw	0
  2235  03BF  1D03               	skipz
  2236  03C0  2BC2               	goto	u801
  2237  03C1  2BC3               	goto	u800
  2238  03C2                     u801:
  2239  03C2  2BA7               	goto	l1609
  2240  03C3                     u800:
  2241  03C3                     l1615:
  2242                           
  2243                           ;main.c: 96:     SEND_Tx(0x0D);
  2244  03C3  300D               	movlw	13
  2245  03C4  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  2246                           
  2247                           ;main.c: 97:     SEND_Tx(0x0A);
  2248  03C9  300A               	movlw	10
  2249  03CA  120A  118A  22BA  120A  118A  	fcall	_SEND_Tx
  2250  03CF                     l189:
  2251  03CF  0008               	return
  2252  03D0                     __end_of_MSG_Term:
  2253                           
  2254                           	psect	text6
  2255  02BA                     __ptext6:	
  2256 ;; *************** function _SEND_Tx *****************
  2257 ;; Defined at:
  2258 ;;		line 87 in file "main.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  dato            1    wreg     unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  dato            1    0[COMMON] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         0       0       0       0       0
  2273 ;;      Locals:         1       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0
  2275 ;;      Totals:         1       0       0       0       0
  2276 ;;Total ram usage:        1 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_MSG_Term
  2282 ;;		_RecibeHHMM
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _SEND_Tx
  2288  02BA                     _SEND_Tx:
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _SEND_Tx: [wreg]
  2292                           ;SEND_Tx@dato stored from wreg
  2293  02BA  00F0               	movwf	SEND_Tx@dato
  2294  02BB                     l1569:
  2295  02BB                     l180:	
  2296                           ;main.c: 87: void SEND_Tx(char dato);main.c: 88: {;main.c: 89:     while(TXSTAbits.TRMT 
      +                          == 0){};
  2297                           
  2298  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2299  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2300  02BD  1C98               	btfss	24,1	;volatile
  2301  02BE  2AC0               	goto	u741
  2302  02BF  2AC1               	goto	u740
  2303  02C0                     u741:
  2304  02C0  2ABB               	goto	l180
  2305  02C1                     u740:
  2306  02C1                     l1571:
  2307                           
  2308                           ;main.c: 90:     TXREG = dato;
  2309  02C1  0870               	movf	SEND_Tx@dato,w
  2310  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2311  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2312  02C4  0099               	movwf	25	;volatile
  2313  02C5                     l183:
  2314  02C5  0008               	return
  2315  02C6                     __end_of_SEND_Tx:
  2316                           
  2317                           	psect	text7
  2318  03D0                     __ptext7:	
  2319 ;; *************** function _Read_Byte_From_DS1307_RTC *****************
  2320 ;; Defined at:
  2321 ;;		line 37 in file "./DS1307.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  Address         1    wreg     unsigned char 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  Address         1    2[COMMON] unsigned char 
  2326 ;;  Byte            1    3[COMMON] unsigned char 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      unsigned char 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, pclath, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2336 ;;      Params:         0       0       0       0       0
  2337 ;;      Locals:         2       0       0       0       0
  2338 ;;      Temps:          1       0       0       0       0
  2339 ;;      Totals:         3       0       0       0       0
  2340 ;;Total ram usage:        3 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 1
  2343 ;; This function calls:
  2344 ;;		_I2C_ReStart
  2345 ;;		_I2C_Read_Byte
  2346 ;;		_I2C_Send_NACK
  2347 ;;		_I2C_Start
  2348 ;;		_I2C_Stop
  2349 ;;		_I2C_Write_Byte
  2350 ;; This function is called by:
  2351 ;;		_main
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           
  2356                           ;psect for function _Read_Byte_From_DS1307_RTC
  2357  03D0                     _Read_Byte_From_DS1307_RTC:
  2358                           
  2359                           ;incstack = 0
  2360                           ; Regs used in _Read_Byte_From_DS1307_RTC: [wreg+status,2+status,0+pclath+cstack]
  2361                           ;Read_Byte_From_DS1307_RTC@Address stored from wreg
  2362  03D0  00F2               	movwf	Read_Byte_From_DS1307_RTC@Address
  2363  03D1                     l1621:
  2364  03D1                     l1623:
  2365                           
  2366                           ;./DS1307.c: 41:  I2C_Start();
  2367  03D1  120A  118A  2286  120A  118A  	fcall	_I2C_Start
  2368  03D6                     l1627:	
  2369                           ;./DS1307.c: 44:  while(I2C_Write_Byte(0xD0 + 0) == 1)
  2370                           
  2371                           
  2372                           ;./DS1307.c: 44:  while(I2C_Write_Byte(0xD0 + 0) == 1)
  2373  03D6  30D0               	movlw	208
  2374  03D7  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  2375  03DC  3A01               	xorlw	1
  2376  03DD  1903               	skipnz
  2377  03DE  2BE0               	goto	u811
  2378  03DF  2BE1               	goto	u810
  2379  03E0                     u811:
  2380  03E0  2BD1               	goto	l1623
  2381  03E1                     u810:
  2382  03E1                     l1629:
  2383                           
  2384                           ;./DS1307.c: 47:  I2C_Write_Byte(Address);
  2385  03E1  0872               	movf	Read_Byte_From_DS1307_RTC@Address,w
  2386  03E2  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  2387  03E7                     l1631:
  2388                           
  2389                           ;./DS1307.c: 48:  I2C_ReStart();
  2390  03E7  120A  118A  229A  120A  118A  	fcall	_I2C_ReStart
  2391  03EC                     l1633:
  2392                           
  2393                           ;./DS1307.c: 51:  I2C_Write_Byte(0xD0 + 1);
  2394  03EC  30D1               	movlw	209
  2395  03ED  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  2396  03F2                     l1635:
  2397                           
  2398                           ;./DS1307.c: 53:  Byte = I2C_Read_Byte();
  2399  03F2  120A  118A  22A4  120A  118A  	fcall	_I2C_Read_Byte
  2400  03F7  00F1               	movwf	??_Read_Byte_From_DS1307_RTC
  2401  03F8  0871               	movf	??_Read_Byte_From_DS1307_RTC,w
  2402  03F9  00F3               	movwf	Read_Byte_From_DS1307_RTC@Byte
  2403  03FA                     l1637:
  2404                           
  2405                           ;./DS1307.c: 55:  I2C_Send_NACK();
  2406  03FA  120A  118A  22AF  120A  118A  	fcall	_I2C_Send_NACK
  2407  03FF                     l1639:
  2408                           
  2409                           ;./DS1307.c: 56:  I2C_Stop();
  2410  03FF  120A  118A  2290  120A  118A  	fcall	_I2C_Stop
  2411  0404                     l1641:
  2412                           
  2413                           ;./DS1307.c: 58:  return Byte;
  2414  0404  0873               	movf	Read_Byte_From_DS1307_RTC@Byte,w
  2415  0405                     l117:
  2416  0405  0008               	return
  2417  0406                     __end_of_Read_Byte_From_DS1307_RTC:
  2418                           
  2419                           	psect	text8
  2420  027E                     __ptext8:	
  2421 ;; *************** function _MCU_Init *****************
  2422 ;; Defined at:
  2423 ;;		line 80 in file "main.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         0       0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0
  2440 ;;      Totals:         0       0       0       0       0
  2441 ;;Total ram usage:        0 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function _MCU_Init
  2452  027E                     _MCU_Init:
  2453  027E                     l1713:	
  2454                           ;incstack = 0
  2455                           ; Regs used in _MCU_Init: [wreg+status,2]
  2456                           
  2457                           
  2458                           ;main.c: 82:     TRISC= 0xB8;
  2459  027E  30B8               	movlw	184
  2460  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2461  0280  1303               	bcf	3,6	;RP1=0, select bank1
  2462  0281  0087               	movwf	7	;volatile
  2463  0282                     l1715:
  2464                           
  2465                           ;main.c: 83:     TRISB = 0x00;
  2466  0282  0186               	clrf	6	;volatile
  2467  0283                     l1717:
  2468                           
  2469                           ;main.c: 84:     TRISD = 0xF0;
  2470  0283  30F0               	movlw	240
  2471  0284  0088               	movwf	8	;volatile
  2472  0285                     l177:
  2473  0285  0008               	return
  2474  0286                     __end_of_MCU_Init:
  2475                           
  2476                           	psect	text9
  2477  0406                     __ptext9:	
  2478 ;; *************** function _LEA_SEE *****************
  2479 ;; Defined at:
  2480 ;;		line 323 in file "main.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  Address         1    wreg     unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  Address         1    2[COMMON] unsigned char 
  2485 ;;  Byte            1    3[COMMON] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      unsigned char 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, pclath, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         0       0       0       0       0
  2496 ;;      Locals:         2       0       0       0       0
  2497 ;;      Temps:          1       0       0       0       0
  2498 ;;      Totals:         3       0       0       0       0
  2499 ;;Total ram usage:        3 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 1
  2502 ;; This function calls:
  2503 ;;		_I2C_ReStart
  2504 ;;		_I2C_Read_Byte
  2505 ;;		_I2C_Send_NACK
  2506 ;;		_I2C_Start
  2507 ;;		_I2C_Stop
  2508 ;;		_I2C_Write_Byte
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function _LEA_SEE
  2516  0406                     _LEA_SEE:
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _LEA_SEE: [wreg+status,2+status,0+pclath+cstack]
  2520                           ;LEA_SEE@Address stored from wreg
  2521  0406  00F2               	movwf	LEA_SEE@Address
  2522  0407                     l1887:
  2523  0407                     l1889:
  2524                           
  2525                           ;main.c: 328:     I2C_Start();
  2526  0407  120A  118A  2286  120A  118A  	fcall	_I2C_Start
  2527  040C                     l1893:	
  2528                           ;main.c: 330:     while (I2C_Write_Byte(0xA0 + 0) == 1)
  2529                           
  2530                           
  2531                           ;main.c: 330:     while (I2C_Write_Byte(0xA0 + 0) == 1)
  2532  040C  30A0               	movlw	160
  2533  040D  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  2534  0412  3A01               	xorlw	1
  2535  0413  1903               	skipnz
  2536  0414  2C16               	goto	u1071
  2537  0415  2C17               	goto	u1070
  2538  0416                     u1071:
  2539  0416  2C07               	goto	l1889
  2540  0417                     u1070:
  2541  0417                     l1895:
  2542                           
  2543                           ;main.c: 333:     I2C_Write_Byte(0);
  2544  0417  3000               	movlw	0
  2545  0418  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  2546                           
  2547                           ;main.c: 334:     I2C_Write_Byte(Address);
  2548  041D  0872               	movf	LEA_SEE@Address,w
  2549  041E  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  2550  0423                     l1897:
  2551                           
  2552                           ;main.c: 335:     I2C_ReStart();
  2553  0423  120A  118A  229A  120A  118A  	fcall	_I2C_ReStart
  2554  0428                     l1899:
  2555                           
  2556                           ;main.c: 337:     I2C_Write_Byte(0xA0 + 1);
  2557  0428  30A1               	movlw	161
  2558  0429  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  2559  042E                     l1901:
  2560                           
  2561                           ;main.c: 339:     Byte = I2C_Read_Byte();
  2562  042E  120A  118A  22A4  120A  118A  	fcall	_I2C_Read_Byte
  2563  0433  00F1               	movwf	??_LEA_SEE
  2564  0434  0871               	movf	??_LEA_SEE,w
  2565  0435  00F3               	movwf	LEA_SEE@Byte
  2566  0436                     l1903:
  2567                           
  2568                           ;main.c: 341:     I2C_Send_NACK();
  2569  0436  120A  118A  22AF  120A  118A  	fcall	_I2C_Send_NACK
  2570  043B                     l1905:
  2571                           
  2572                           ;main.c: 342:     I2C_Stop();
  2573  043B  120A  118A  2290  120A  118A  	fcall	_I2C_Stop
  2574  0440                     l1907:
  2575                           
  2576                           ;main.c: 344:     return Byte;
  2577  0440  0873               	movf	LEA_SEE@Byte,w
  2578  0441                     l279:
  2579  0441  0008               	return
  2580  0442                     __end_of_LEA_SEE:
  2581                           
  2582                           	psect	text10
  2583  02AF                     __ptext10:	
  2584 ;; *************** function _I2C_Send_NACK *****************
  2585 ;; Defined at:
  2586 ;;		line 54 in file "./I2C.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		None
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used: 1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_Read_Byte_From_DS1307_RTC
  2610 ;;		_LEA_SEE
  2611 ;;		_Read_Bytes_From_DS1307_RTC
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _I2C_Send_NACK
  2617  02AF                     _I2C_Send_NACK:
  2618  02AF                     l1577:	
  2619                           ;incstack = 0
  2620                           ; Regs used in _I2C_Send_NACK: []
  2621                           
  2622                           
  2623                           ;./I2C.c: 56:  ACKDT = 1;
  2624  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2625  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2626  02B1  1691               	bsf	17,5	;volatile
  2627                           
  2628                           ;./I2C.c: 57:  ACKEN = 1;
  2629  02B2  1611               	bsf	17,4	;volatile
  2630  02B3                     l86:	
  2631                           ;./I2C.c: 58:  while(!SSPIF);
  2632                           
  2633  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2634  02B4  1D8C               	btfss	12,3	;volatile
  2635  02B5  2AB7               	goto	u771
  2636  02B6  2AB8               	goto	u770
  2637  02B7                     u771:
  2638  02B7  2AB3               	goto	l86
  2639  02B8                     u770:
  2640  02B8                     l88:
  2641                           
  2642                           ;./I2C.c: 59:  SSPIF = 0;
  2643  02B8  118C               	bcf	12,3	;volatile
  2644  02B9                     l89:
  2645  02B9  0008               	return
  2646  02BA                     __end_of_I2C_Send_NACK:
  2647                           
  2648                           	psect	text11
  2649  02A4                     __ptext11:	
  2650 ;; *************** function _I2C_Read_Byte *****************
  2651 ;; Defined at:
  2652 ;;		line 75 in file "./I2C.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      unsigned char 
  2659 ;; Registers used:
  2660 ;;		wreg
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0
  2669 ;;      Totals:         0       0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_Read_Byte_From_DS1307_RTC
  2676 ;;		_LEA_SEE
  2677 ;;		_Read_Bytes_From_DS1307_RTC
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           
  2682                           ;psect for function _I2C_Read_Byte
  2683  02A4                     _I2C_Read_Byte:
  2684  02A4                     l1579:	
  2685                           ;incstack = 0
  2686                           ; Regs used in _I2C_Read_Byte: [wreg]
  2687                           
  2688                           
  2689                           ;./I2C.c: 77:  RCEN = 1;
  2690  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2691  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  2692  02A6  1591               	bsf	17,3	;volatile
  2693  02A7                     l98:	
  2694                           ;./I2C.c: 78:  while(!SSPIF);
  2695                           
  2696  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2697  02A8  1D8C               	btfss	12,3	;volatile
  2698  02A9  2AAB               	goto	u781
  2699  02AA  2AAC               	goto	u780
  2700  02AB                     u781:
  2701  02AB  2AA7               	goto	l98
  2702  02AC                     u780:
  2703  02AC                     l100:
  2704                           
  2705                           ;./I2C.c: 79:  SSPIF = 0;
  2706  02AC  118C               	bcf	12,3	;volatile
  2707  02AD                     l1581:
  2708                           
  2709                           ;./I2C.c: 81:     return SSPBUF;
  2710  02AD  0813               	movf	19,w	;volatile
  2711  02AE                     l101:
  2712  02AE  0008               	return
  2713  02AF                     __end_of_I2C_Read_Byte:
  2714                           
  2715                           	psect	text12
  2716  029A                     __ptext12:	
  2717 ;; *************** function _I2C_ReStart *****************
  2718 ;; Defined at:
  2719 ;;		line 26 in file "./I2C.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		None
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0
  2736 ;;      Totals:         0       0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_Read_Byte_From_DS1307_RTC
  2743 ;;		_LEA_SEE
  2744 ;;		_Read_Bytes_From_DS1307_RTC
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           
  2749                           ;psect for function _I2C_ReStart
  2750  029A                     _I2C_ReStart:
  2751  029A                     l1573:	
  2752                           ;incstack = 0
  2753                           ; Regs used in _I2C_ReStart: []
  2754                           
  2755                           
  2756                           ;./I2C.c: 28:  RSEN = 1;
  2757  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2758  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2759  029C  1491               	bsf	17,1	;volatile
  2760  029D                     l68:	
  2761                           ;./I2C.c: 29:  while(!SSPIF);
  2762                           
  2763  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2764  029E  1D8C               	btfss	12,3	;volatile
  2765  029F  2AA1               	goto	u751
  2766  02A0  2AA2               	goto	u750
  2767  02A1                     u751:
  2768  02A1  2A9D               	goto	l68
  2769  02A2                     u750:
  2770  02A2                     l70:
  2771                           
  2772                           ;./I2C.c: 30:  SSPIF = 0;
  2773  02A2  118C               	bcf	12,3	;volatile
  2774  02A3                     l71:
  2775  02A3  0008               	return
  2776  02A4                     __end_of_I2C_ReStart:
  2777                           
  2778                           	psect	text13
  2779  0337                     __ptext13:	
  2780 ;; *************** function _LCD_Init *****************
  2781 ;; Defined at:
  2782 ;;		line 53 in file "main.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0, pclath, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0
  2798 ;;      Temps:          2       0       0       0       0
  2799 ;;      Totals:         2       0       0       0       0
  2800 ;;Total ram usage:        2 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; Hardware stack levels required when called: 1
  2803 ;; This function calls:
  2804 ;;		_SEND_CMD
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _LCD_Init
  2812  0337                     _LCD_Init:
  2813  0337                     l1689:	
  2814                           ;incstack = 0
  2815                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2816                           
  2817                           
  2818                           ;main.c: 55:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2819  0337  301A               	movlw	26
  2820  0338  00F4               	movwf	??_LCD_Init+1
  2821  0339  30F8               	movlw	248
  2822  033A  00F3               	movwf	??_LCD_Init
  2823  033B                     u1677:
  2824  033B  0BF3               	decfsz	??_LCD_Init,f
  2825  033C  2B3B               	goto	u1677
  2826  033D  0BF4               	decfsz	??_LCD_Init+1,f
  2827  033E  2B3B               	goto	u1677
  2828  033F  0000               	nop
  2829  0340                     l1691:
  2830                           
  2831                           ;main.c: 56:     SEND_CMD(0x38);
  2832  0340  3038               	movlw	56
  2833  0341  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
  2834  0346                     l1693:
  2835                           
  2836                           ;main.c: 57:     SEND_CMD(0x0C);
  2837  0346  300C               	movlw	12
  2838  0347  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
  2839  034C                     l1695:
  2840                           
  2841                           ;main.c: 58:     SEND_CMD(0x06);
  2842  034C  3006               	movlw	6
  2843  034D  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
  2844  0352                     l1697:
  2845                           
  2846                           ;main.c: 59:     SEND_CMD(0x01);
  2847  0352  3001               	movlw	1
  2848  0353  120A  118A  2305  120A  118A  	fcall	_SEND_CMD
  2849  0358                     l165:
  2850  0358  0008               	return
  2851  0359                     __end_of_LCD_Init:
  2852                           
  2853                           	psect	text14
  2854  0305                     __ptext14:	
  2855 ;; *************** function _SEND_CMD *****************
  2856 ;; Defined at:
  2857 ;;		line 32 in file "main.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  dato            1    wreg     unsigned char 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  dato            1    2[COMMON] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         0       0       0       0       0
  2872 ;;      Locals:         1       0       0       0       0
  2873 ;;      Temps:          2       0       0       0       0
  2874 ;;      Totals:         3       0       0       0       0
  2875 ;;Total ram usage:        3 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_LCD_Init
  2881 ;;		_RecibeHHMM
  2882 ;;		_main
  2883 ;;		_LEA_FECHA
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function _SEND_CMD
  2889  0305                     _SEND_CMD:
  2890                           
  2891                           ;incstack = 0
  2892                           ; Regs used in _SEND_CMD: [wreg]
  2893                           ;SEND_CMD@dato stored from wreg
  2894  0305  00F2               	movwf	SEND_CMD@dato
  2895  0306                     l1595:
  2896                           
  2897                           ;main.c: 32: void SEND_CMD(char dato);main.c: 33: {;main.c: 34:     PORTCbits.RC1 = 0;
  2898  0306  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0307  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0308  1087               	bcf	7,1	;volatile
  2901                           
  2902                           ;main.c: 35:     PORTCbits.RC0 = 0;
  2903  0309  1007               	bcf	7,0	;volatile
  2904                           
  2905                           ;main.c: 36:     PORTCbits.RC2 = 1;
  2906  030A  1507               	bsf	7,2	;volatile
  2907  030B                     l1597:
  2908                           
  2909                           ;main.c: 37:     PORTB = dato;
  2910  030B  0872               	movf	SEND_CMD@dato,w
  2911  030C  0086               	movwf	6	;volatile
  2912  030D                     l1599:
  2913                           
  2914                           ;main.c: 38:     PORTCbits.RC2 = 0;
  2915  030D  1107               	bcf	7,2	;volatile
  2916                           
  2917                           ;main.c: 39:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2918  030E  3003               	movlw	3
  2919  030F  00F1               	movwf	??_SEND_CMD+1
  2920  0310  3097               	movlw	151
  2921  0311  00F0               	movwf	??_SEND_CMD
  2922  0312                     u1687:
  2923  0312  0BF0               	decfsz	??_SEND_CMD,f
  2924  0313  2B12               	goto	u1687
  2925  0314  0BF1               	decfsz	??_SEND_CMD+1,f
  2926  0315  2B12               	goto	u1687
  2927  0316  2B17               	nop2
  2928  0317                     l159:
  2929  0317  0008               	return
  2930  0318                     __end_of_SEND_CMD:
  2931                           
  2932                           	psect	text15
  2933  02C6                     __ptext15:	
  2934 ;; *************** function _InitI2C *****************
  2935 ;; Defined at:
  2936 ;;		line 5 in file "./I2C.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0
  2953 ;;      Totals:         0       0       0       0       0
  2954 ;;Total ram usage:        0 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function _InitI2C
  2965  02C6                     _InitI2C:
  2966  02C6                     l1617:	
  2967                           ;incstack = 0
  2968                           ; Regs used in _InitI2C: [wreg]
  2969                           
  2970                           
  2971                           ;./I2C.c: 7:  TRISCbits.TRISC4 = 1;
  2972  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2973  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  2974  02C8  1607               	bsf	7,4	;volatile
  2975                           
  2976                           ;./I2C.c: 8:  TRISCbits.TRISC3 = 1;
  2977  02C9  1587               	bsf	7,3	;volatile
  2978  02CA                     l1619:
  2979                           
  2980                           ;./I2C.c: 10:  SSPADD = ((4000000/4000)/100) - 1;
  2981  02CA  3009               	movlw	9
  2982  02CB  0093               	movwf	19	;volatile
  2983                           
  2984                           ;./I2C.c: 11:  SSPSTAT = 0x80;
  2985  02CC  3080               	movlw	128
  2986  02CD  0094               	movwf	20	;volatile
  2987                           
  2988                           ;./I2C.c: 12:  SSPCON = 0x28;
  2989  02CE  3028               	movlw	40
  2990  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2991  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2992  02D1  0094               	movwf	20	;volatile
  2993  02D2                     l59:
  2994  02D2  0008               	return
  2995  02D3                     __end_of_InitI2C:
  2996                           
  2997                           	psect	text16
  2998  0318                     __ptext16:	
  2999 ;; *************** function _EscribeCadenaLCD *****************
  3000 ;; Defined at:
  3001 ;;		line 62 in file "main.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  s               1    wreg     PTR const unsigned char 
  3004 ;;		 -> STR_21(4), STR_20(4), STR_19(4), STR_18(4), 
  3005 ;;		 -> STR_17(4), STR_16(4), STR_15(4), STR_14(4), 
  3006 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(4), 
  3007 ;;		 -> STR_9(19), STR_8(20), STR_7(20), STR_6(18), 
  3008 ;;		 -> STR_5(17), STR_4(17), STR_3(17), 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  s               1    3[COMMON] PTR const unsigned char 
  3011 ;;		 -> STR_21(4), STR_20(4), STR_19(4), STR_18(4), 
  3012 ;;		 -> STR_17(4), STR_16(4), STR_15(4), STR_14(4), 
  3013 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(4), 
  3014 ;;		 -> STR_9(19), STR_8(20), STR_7(20), STR_6(18), 
  3015 ;;		 -> STR_5(17), STR_4(17), STR_3(17), 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         0       0       0       0       0
  3026 ;;      Locals:         1       0       0       0       0
  3027 ;;      Temps:          1       0       0       0       0
  3028 ;;      Totals:         2       0       0       0       0
  3029 ;;Total ram usage:        2 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 1
  3032 ;; This function calls:
  3033 ;;		_SEND_CHAR
  3034 ;; This function is called by:
  3035 ;;		_main
  3036 ;;		_LEA_FECHA
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function _EscribeCadenaLCD
  3042  0318                     _EscribeCadenaLCD:
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _EscribeCadenaLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3046                           ;EscribeCadenaLCD@s stored from wreg
  3047  0318  00F3               	movwf	EscribeCadenaLCD@s
  3048  0319                     l1699:
  3049                           
  3050                           ;main.c: 62: void EscribeCadenaLCD (const char *s);main.c: 63: {;main.c: 64:     while(*
      +                          s)
  3051  0319  2B2A               	goto	l1705
  3052  031A                     l1701:
  3053                           
  3054                           ;main.c: 65:         SEND_CHAR(*s++);
  3055  031A  0873               	movf	EscribeCadenaLCD@s,w
  3056  031B  0084               	movwf	4
  3057  031C  120A  118A  2003  120A  118A  	fcall	stringdir
  3058  0321  120A  118A  22E3  120A  118A  	fcall	_SEND_CHAR
  3059  0326                     l1703:
  3060  0326  3001               	movlw	1
  3061  0327  00F2               	movwf	??_EscribeCadenaLCD
  3062  0328  0872               	movf	??_EscribeCadenaLCD,w
  3063  0329  07F3               	addwf	EscribeCadenaLCD@s,f
  3064  032A                     l1705:
  3065                           
  3066                           ;main.c: 64:     while(*s)
  3067  032A  0873               	movf	EscribeCadenaLCD@s,w
  3068  032B  0084               	movwf	4
  3069  032C  120A  118A  2003  120A  118A  	fcall	stringdir
  3070  0331  3A00               	xorlw	0
  3071  0332  1D03               	skipz
  3072  0333  2B35               	goto	u861
  3073  0334  2B36               	goto	u860
  3074  0335                     u861:
  3075  0335  2B1A               	goto	l1701
  3076  0336                     u860:
  3077  0336                     l171:
  3078  0336  0008               	return
  3079  0337                     __end_of_EscribeCadenaLCD:
  3080                           
  3081                           	psect	text17
  3082  02E3                     __ptext17:	
  3083 ;; *************** function _SEND_CHAR *****************
  3084 ;; Defined at:
  3085 ;;		line 43 in file "main.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  dato            1    wreg     unsigned char 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  dato            1    1[COMMON] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         0       0       0       0       0
  3100 ;;      Locals:         1       0       0       0       0
  3101 ;;      Temps:          1       0       0       0       0
  3102 ;;      Totals:         2       0       0       0       0
  3103 ;;Total ram usage:        2 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_EscribeCadenaLCD
  3109 ;;		_main
  3110 ;;		_LEA_FECHA
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _SEND_CHAR
  3116  02E3                     _SEND_CHAR:
  3117                           
  3118                           ;incstack = 0
  3119                           ; Regs used in _SEND_CHAR: [wreg]
  3120                           ;SEND_CHAR@dato stored from wreg
  3121  02E3  00F1               	movwf	SEND_CHAR@dato
  3122  02E4                     l1601:
  3123                           
  3124                           ;main.c: 43: void SEND_CHAR(char dato);main.c: 44: {;main.c: 45:     PORTCbits.RC1 = 0;
  3125  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  3126  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  3127  02E6  1087               	bcf	7,1	;volatile
  3128                           
  3129                           ;main.c: 46:     PORTCbits.RC0 = 1;
  3130  02E7  1407               	bsf	7,0	;volatile
  3131                           
  3132                           ;main.c: 47:     PORTCbits.RC2 = 1;
  3133  02E8  1507               	bsf	7,2	;volatile
  3134  02E9                     l1603:
  3135                           
  3136                           ;main.c: 48:     PORTB = dato;
  3137  02E9  0871               	movf	SEND_CHAR@dato,w
  3138  02EA  0086               	movwf	6	;volatile
  3139  02EB                     l1605:
  3140                           
  3141                           ;main.c: 49:     PORTCbits.RC2=0;
  3142  02EB  1107               	bcf	7,2	;volatile
  3143                           
  3144                           ;main.c: 50:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3145  02EC  30C7               	movlw	199
  3146  02ED  00F0               	movwf	??_SEND_CHAR
  3147  02EE                     u1697:
  3148  02EE  2AEF               	nop2
  3149  02EF  0BF0               	decfsz	??_SEND_CHAR,f
  3150  02F0  2AEE               	goto	u1697
  3151  02F1  2AF2               	nop2
  3152  02F2  2AF3               	nop2
  3153  02F3                     l162:
  3154  02F3  0008               	return
  3155  02F4                     __end_of_SEND_CHAR:
  3156                           
  3157                           	psect	text18
  3158  037C                     __ptext18:	
  3159 ;; *************** function _ESCRIBA_SEE *****************
  3160 ;; Defined at:
  3161 ;;		line 305 in file "main.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  addr            1    wreg     unsigned char 
  3164 ;;  dato            1    1[COMMON] unsigned char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  addr            1    2[COMMON] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, pclath, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3176 ;;      Params:         1       0       0       0       0
  3177 ;;      Locals:         1       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0
  3179 ;;      Totals:         2       0       0       0       0
  3180 ;;Total ram usage:        2 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 1
  3183 ;; This function calls:
  3184 ;;		_I2C_Start
  3185 ;;		_I2C_Stop
  3186 ;;		_I2C_Write_Byte
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           
  3193                           ;psect for function _ESCRIBA_SEE
  3194  037C                     _ESCRIBA_SEE:
  3195                           
  3196                           ;incstack = 0
  3197                           ; Regs used in _ESCRIBA_SEE: [wreg+status,2+status,0+pclath+cstack]
  3198                           ;ESCRIBA_SEE@addr stored from wreg
  3199  037C  00F2               	movwf	ESCRIBA_SEE@addr
  3200  037D                     l1877:
  3201                           
  3202                           ;main.c: 305: void ESCRIBA_SEE(char addr, char dato);main.c: 306: {;main.c: 309:     I2C
      +                          _Start();
  3203  037D  120A  118A  2286  120A  118A  	fcall	_I2C_Start
  3204  0382                     l1881:	
  3205                           ;main.c: 312:     while(I2C_Write_Byte(0xA0 + 0) == 1)
  3206                           
  3207                           
  3208                           ;main.c: 312:     while(I2C_Write_Byte(0xA0 + 0) == 1)
  3209  0382  30A0               	movlw	160
  3210  0383  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  3211  0388  3A01               	xorlw	1
  3212  0389  1903               	skipnz
  3213  038A  2B8C               	goto	u1061
  3214  038B  2B8D               	goto	u1060
  3215  038C                     u1061:
  3216  038C  2B7D               	goto	l1877
  3217  038D                     u1060:
  3218  038D                     l1883:
  3219                           
  3220                           ;main.c: 315:     I2C_Write_Byte(0);
  3221  038D  3000               	movlw	0
  3222  038E  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  3223                           
  3224                           ;main.c: 316:     I2C_Write_Byte(addr);
  3225  0393  0872               	movf	ESCRIBA_SEE@addr,w
  3226  0394  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  3227                           
  3228                           ;main.c: 317:     I2C_Write_Byte(dato);
  3229  0399  0871               	movf	ESCRIBA_SEE@dato,w
  3230  039A  120A  118A  22D3  120A  118A  	fcall	_I2C_Write_Byte
  3231  039F                     l1885:
  3232                           
  3233                           ;main.c: 318:     I2C_Stop();
  3234  039F  120A  118A  2290  120A  118A  	fcall	_I2C_Stop
  3235  03A4                     l273:
  3236  03A4  0008               	return
  3237  03A5                     __end_of_ESCRIBA_SEE:
  3238                           
  3239                           	psect	text19
  3240  02D3                     __ptext19:	
  3241 ;; *************** function _I2C_Write_Byte *****************
  3242 ;; Defined at:
  3243 ;;		line 64 in file "./I2C.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  Byte            1    wreg     unsigned char 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  Byte            1    0[COMMON] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      unsigned char 
  3250 ;; Registers used:
  3251 ;;		wreg
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3257 ;;      Params:         0       0       0       0       0
  3258 ;;      Locals:         1       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0
  3260 ;;      Totals:         1       0       0       0       0
  3261 ;;Total ram usage:        1 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_Write_Byte_To_DS1307_RTC
  3267 ;;		_Read_Byte_From_DS1307_RTC
  3268 ;;		_ESCRIBA_SEE
  3269 ;;		_LEA_SEE
  3270 ;;		_Write_Bytes_To_DS1307_RTC
  3271 ;;		_Read_Bytes_From_DS1307_RTC
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function _I2C_Write_Byte
  3277  02D3                     _I2C_Write_Byte:
  3278                           
  3279                           ;incstack = 0
  3280                           ; Regs used in _I2C_Write_Byte: [wreg]
  3281                           ;I2C_Write_Byte@Byte stored from wreg
  3282  02D3  00F0               	movwf	I2C_Write_Byte@Byte
  3283  02D4                     l1563:
  3284                           
  3285                           ;./I2C.c: 64: char I2C_Write_Byte(unsigned char Byte);./I2C.c: 65: {;./I2C.c: 66:  SSPBU
      +                          F = Byte;
  3286  02D4  0870               	movf	I2C_Write_Byte@Byte,w
  3287  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  3288  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  3289  02D7  0093               	movwf	19	;volatile
  3290  02D8                     l92:	
  3291                           ;./I2C.c: 67:  while(!SSPIF);
  3292                           
  3293  02D8  1D8C               	btfss	12,3	;volatile
  3294  02D9  2ADB               	goto	u731
  3295  02DA  2ADC               	goto	u730
  3296  02DB                     u731:
  3297  02DB  2AD8               	goto	l92
  3298  02DC                     u730:
  3299  02DC                     l94:
  3300                           
  3301                           ;./I2C.c: 68:  SSPIF = 0;
  3302  02DC  118C               	bcf	12,3	;volatile
  3303  02DD                     l1565:
  3304                           
  3305                           ;./I2C.c: 70:  return ACKSTAT;
  3306  02DD  3000               	movlw	0
  3307  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  3308  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  3309  02E0  1B11               	btfsc	17,6	;volatile
  3310  02E1  3001               	movlw	1
  3311  02E2                     l95:
  3312  02E2  0008               	return
  3313  02E3                     __end_of_I2C_Write_Byte:
  3314                           
  3315                           	psect	text20
  3316  0290                     __ptext20:	
  3317 ;; *************** function _I2C_Stop *****************
  3318 ;; Defined at:
  3319 ;;		line 35 in file "./I2C.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		None
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3333 ;;      Params:         0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_Write_Byte_To_DS1307_RTC
  3343 ;;		_Read_Byte_From_DS1307_RTC
  3344 ;;		_ESCRIBA_SEE
  3345 ;;		_LEA_SEE
  3346 ;;		_Write_Bytes_To_DS1307_RTC
  3347 ;;		_Read_Bytes_From_DS1307_RTC
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _I2C_Stop
  3353  0290                     _I2C_Stop:
  3354  0290                     l1561:	
  3355                           ;incstack = 0
  3356                           ; Regs used in _I2C_Stop: []
  3357                           
  3358                           
  3359                           ;./I2C.c: 37:  PEN = 1;
  3360  0290  1683               	bsf	3,5	;RP0=1, select bank1
  3361  0291  1303               	bcf	3,6	;RP1=0, select bank1
  3362  0292  1511               	bsf	17,2	;volatile
  3363  0293                     l74:	
  3364                           ;./I2C.c: 38:  while(!SSPIF);
  3365                           
  3366  0293  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0294  1D8C               	btfss	12,3	;volatile
  3368  0295  2A97               	goto	u721
  3369  0296  2A98               	goto	u720
  3370  0297                     u721:
  3371  0297  2A93               	goto	l74
  3372  0298                     u720:
  3373  0298                     l76:
  3374                           
  3375                           ;./I2C.c: 39:  SSPIF = 0;
  3376  0298  118C               	bcf	12,3	;volatile
  3377  0299                     l77:
  3378  0299  0008               	return
  3379  029A                     __end_of_I2C_Stop:
  3380                           
  3381                           	psect	text21
  3382  0286                     __ptext21:	
  3383 ;; *************** function _I2C_Start *****************
  3384 ;; Defined at:
  3385 ;;		line 17 in file "./I2C.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		None
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3399 ;;      Params:         0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0
  3402 ;;      Totals:         0       0       0       0       0
  3403 ;;Total ram usage:        0 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_Write_Byte_To_DS1307_RTC
  3409 ;;		_Read_Byte_From_DS1307_RTC
  3410 ;;		_ESCRIBA_SEE
  3411 ;;		_LEA_SEE
  3412 ;;		_Write_Bytes_To_DS1307_RTC
  3413 ;;		_Read_Bytes_From_DS1307_RTC
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _I2C_Start
  3419  0286                     _I2C_Start:
  3420  0286                     l1559:	
  3421                           ;incstack = 0
  3422                           ; Regs used in _I2C_Start: []
  3423                           
  3424                           
  3425                           ;./I2C.c: 19:  SEN = 1;
  3426  0286  1683               	bsf	3,5	;RP0=1, select bank1
  3427  0287  1303               	bcf	3,6	;RP1=0, select bank1
  3428  0288  1411               	bsf	17,0	;volatile
  3429  0289                     l62:	
  3430                           ;./I2C.c: 20:  while(!SSPIF);
  3431                           
  3432  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3433  028A  1D8C               	btfss	12,3	;volatile
  3434  028B  2A8D               	goto	u711
  3435  028C  2A8E               	goto	u710
  3436  028D                     u711:
  3437  028D  2A89               	goto	l62
  3438  028E                     u710:
  3439  028E                     l64:
  3440                           
  3441                           ;./I2C.c: 21:  SSPIF = 0;
  3442  028E  118C               	bcf	12,3	;volatile
  3443  028F                     l65:
  3444  028F  0008               	return
  3445  0290                     __end_of_I2C_Start:
  3446  007E                     btemp	set	126	;btemp
  3447  007E                     wtemp0	set	126
  3448                           
  3449                           	psect	config
  3450                           
  3451                           ;Config register CONFIG @ 0x2007
  3452                           ;	Oscillator Selection bits
  3453                           ;	FOSC = XT, XT oscillator
  3454                           ;	Watchdog Timer Enable bit
  3455                           ;	WDTE = OFF, WDT disabled
  3456                           ;	Power-up Timer Enable bit
  3457                           ;	PWRTE = ON, PWRT enabled
  3458                           ;	Brown-out Reset Enable bit
  3459                           ;	BOREN = ON, BOR enabled
  3460                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3461                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3462                           ;	Data EEPROM Memory Code Protection bit
  3463                           ;	CPD = ON, Data EEPROM code-protected
  3464                           ;	Flash Program Memory Write Enable bits
  3465                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3466                           ;	In-Circuit Debugger Mode bit
  3467                           ;	DEBUG = 0x1, unprogrammed default
  3468                           ;	Flash Program Memory Code Protection bit
  3469                           ;	CP = OFF, Code protection off
  3470  2007                     	org	8199
  3471  2007  3E71               	dw	15985

Data Sizes:
    Strings     214
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      2       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    MSG_Term@s	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[21]), STR_1(CODE[17]), 

    EscribeCadenaLCD@s	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[19]), STR_8(CODE[20]), STR_7(CODE[20]), STR_6(CODE[18]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 

    sp__Get_DS1307_RTC_Date	PTR unsigned char  size(1) Largest target is 4
		 -> pRTCArray(BANK0[4]), 

    sp__Get_DS1307_RTC_Time	PTR unsigned char  size(1) Largest target is 4
		 -> pRTCArray(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_RecibeHHMM
    _RecibeHHMM->_MSG_Term
    _RecibeHHMM->_SEND_CMD
    _RecibeHHMM->_Write_Byte_To_DS1307_RTC
    _Write_Byte_To_DS1307_RTC->_I2C_Write_Byte
    _MSG_Term->_SEND_Tx
    _Read_Byte_From_DS1307_RTC->_I2C_Write_Byte
    _LEA_SEE->_I2C_Write_Byte
    _LCD_Init->_SEND_CMD
    _EscribeCadenaLCD->_SEND_CHAR
    _ESCRIBA_SEE->_I2C_Write_Byte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2537
                                             10 COMMON     3     3      0
                                              0 BANK0      2     2      0
                        _ESCRIBA_SEE
                   _EscribeCadenaLCD
                            _InitI2C
                           _LCD_Init
                            _LEA_SEE
                           _MCU_Init
          _Read_Byte_From_DS1307_RTC
                         _RecibeHHMM
                          _SEND_CHAR
                           _SEND_CMD
                            _TECLADO
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TECLADO                                              4     4      0      95
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _RecibeHHMM                                           7     7      0    1043
                                              3 COMMON     7     7      0
                           _MSG_Term
                           _SEND_CMD
                            _SEND_Tx
           _Write_Byte_To_DS1307_RTC
 ---------------------------------------------------------------------------------
 (2) _Write_Byte_To_DS1307_RTC                             2     1      1     522
                                              1 COMMON     2     1      1
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _MSG_Term                                             2     2      0     133
                                              1 COMMON     2     2      0
                            _SEND_Tx
 ---------------------------------------------------------------------------------
 (2) _SEND_Tx                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_Byte_From_DS1307_RTC                            3     3      0      68
                                              1 COMMON     3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEA_SEE                                              3     3      0      68
                                              1 COMMON     3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              3 COMMON     2     2      0
                           _SEND_CMD
 ---------------------------------------------------------------------------------
 (1) _SEND_CMD                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EscribeCadenaLCD                                     2     2      0     694
                                              2 COMMON     2     2      0
                          _SEND_CHAR
 ---------------------------------------------------------------------------------
 (1) _SEND_CHAR                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ESCRIBA_SEE                                          2     1      1     142
                                              1 COMMON     2     1      1
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBA_SEE
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Byte
   _EscribeCadenaLCD
     _SEND_CHAR
   _InitI2C
   _LCD_Init
     _SEND_CMD
   _LEA_SEE
     _I2C_ReStart
     _I2C_Read_Byte
     _I2C_Send_NACK
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Byte
   _MCU_Init
   _Read_Byte_From_DS1307_RTC
     _I2C_ReStart
     _I2C_Read_Byte
     _I2C_Send_NACK
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Byte
   _RecibeHHMM
     _MSG_Term
       _SEND_Tx
     _SEND_CMD
     _SEND_Tx
     _Write_Byte_To_DS1307_RTC
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
   _SEND_CHAR
   _SEND_CMD
   _TECLADO
   _UART_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Nov 27 02:19:26 2021

                                 pc 0002                  __size_of_I2C_Start 000A  
                                l62 0289                                  l70 02A2  
                                l71 02A3                                  l64 028E  
                                l65 028F                                  l74 0293  
                                l59 02D2                                  l76 0298  
                                l92 02D8                                  l68 029D  
                                l77 0299                                  l94 02DC  
                                l86 02B3                                  l95 02E2  
                                l88 02B8                                  l89 02B9  
                                l98 02A7                                  fsr 0004  
                       LEA_SEE@Byte 0073                                 l100 02AC  
                               l101 02AE                                 l111 037B  
                               l200 0492                                 l202 0498  
                               l211 0506                                 l204 04AB  
                               l117 0405                                 l206 04B1  
                               l222 0549                                 l208 04FF  
                               l225 054D                                 l162 02F3  
                               l218 05BE                                 l171 0336  
                               l219 0545                                 l180 02BB  
                               l228 0551                                 l165 0358  
                               l174 0304                                 l159 0317  
                               l183 02C5                                 l192 044E  
                               l273 03A4                                 l177 0285  
                               l194 0454                                 l196 0467  
                               l189 03CF                                 l198 046D  
                               l279 0441                                 _PEN 048A  
                               u710 028E                                 u711 028D  
                               u720 0298                                 u800 03C3  
                               u721 0297                                 u801 03C2  
                               u730 02DC                                 u810 03E1  
                               u731 02DB                                 u811 03E0  
                               u740 02C1                                 u900 0471  
                               _SEN 0488                                 u741 02C0  
                               u901 0470                                 u750 02A2  
                               u910 0498                                 u751 02A1  
                               u911 0497                                 u920 049C  
                               u921 049B                                 u770 02B8  
                               u930 04B1                                 u771 02B7  
                               u931 04B0                                 u860 0336  
                               u780 02AC                                 u940 04B5  
                               u861 0335                                 u781 02AB  
                               u941 04B4                                 u790 036A  
                               u870 0454                                 u791 0369  
                               u871 0453                                 u880 0458  
                               u881 0457                                 u890 046D  
                               u970 050E                                 u955 04D3  
                               u891 046C                                 u971 050D  
                               u980 0517                                 u965 04E7  
                               u981 0516                                 u990 0520  
                               u991 051F                __size_of_I2C_ReStart 000A  
                               fsr0 0004                  I2C_Write_Byte@Byte 0070  
                   __end_of_LEA_SEE 0442                                l2101 06A2  
                              l2111 06D5                                l2103 06B2  
                              l2121 06F8                                l2113 06DC  
                              l2105 06BC                                l2131 071B  
                              l2123 06FF                                l2115 06E3  
                              l2107 06C2                                l2141 0796  
                              l2133 0722                                l2125 0706  
                              l2117 06EA                                l2109 06CE  
                              l2061 05D9                                l2143 079C  
                              l2151 07AC                                l2127 070D  
                              l2119 06F1                                l2071 060A  
                              l2063 05E5                                l1601 02E4  
                              l2161 07D8                                l2153 07B5  
                              l2145 07A0                                l2129 0714  
                              l2137 073D                                l2081 063B  
                              l2073 0610                                l2065 05EB  
                              l2057 05BF                                l1603 02E9  
                              l1611 03B3                                l2163 07E3  
                              l2155 07BF                                l2147 07A1  
                              l2139 076B                                l2091 066C  
                              l2083 0641                                l2075 0616  
                              l2067 05F7                                l2059 05D3  
                              l1605 02EB                                l1701 031A  
                              l1621 03D1                                l1613 03B7  
                              l2165 07E9                                l2157 07C5  
                              l2149 07A7                                l2317 0745  
                              l2093 0677                                l2085 064C  
                              l2077 0621                                l2069 05FD  
                              l1703 0326                                l1631 03E7  
                              l1623 03D1                                l1615 03C3  
                              l1607 03A6                                l2319 058B  
                              l1711 0303                                l2159 07CF  
                              l2095 0687                                l2087 065C  
                              l2079 0631                                l1561 0290  
                              l1705 032A                                l1617 02C6  
                              l1713 027E                                l1641 0404  
                              l1633 03EC                                l1609 03A7  
                              l1721 0448                                l2097 0691  
                              l2089 0666                                l1563 02D4  
                              l1619 02CA                                l1715 0282  
                              l1635 03F2                                l1627 03D6  
                              l1571 02C1                                l1731 0475  
                              l1723 0458                                l1811 0569  
                              l1803 0565                                l1707 02F4  
                              l2099 0697                                l1565 02DD  
                              l1573 029A                                l1581 02AD  
                              l1901 042E                                l1717 0283  
                              l1637 03FA                                l1629 03E1  
                              l1741 049C                                l1733 047A  
                              l1725 045C                                l1709 0300  
                              l1559 0286                                l1903 0436  
                              l1639 03FF                                l1591 036A  
                              l1751 04BE                                l1743 04A0  
                              l1735 0480                                l1727 0461  
                              l1719 0442                                l1831 0573  
                              l1823 056F                                l1815 056B  
                              l1807 0567                                l1577 02AF  
                              l1905 043B                                l1569 02BB  
                              l1593 0376                                l1585 035A  
                              l1761 04F8                                l1753 04C4  
                              l1745 04A5                                l1737 0486  
                              l1729 0471                                l1595 0306  
                              l1691 0340                                l1579 02A4  
                              l1907 0440                                l1755 04CA  
                              l1747 04B5                                l1739 048C  
                              l1851 057D                                l1843 0579  
                              l1835 0575                                l1827 0571  
                              l1819 056D                                l1771 050F  
                              l1763 0500                                l1597 030B  
                              l1693 0346                                l1589 035F  
                              l1749 04B9                                l1757 04D0  
                              l1773 0513                                l1765 0502  
                              l1599 030D                                l1695 034C  
                              l1759 04E4                                l1855 057F  
                              l1847 057B                                l1839 0577  
                              l1791 052E                                l1783 0521  
                              l1767 050A                                l1881 0382  
                              l1697 0352                                l1689 0337  
                              l1865 0583                                l1793 053F  
                              l1785 0525                                l1777 0518  
                              l1883 038D                                l1699 0319  
                              l1867 05BD                                l1859 0581  
                              l1779 051C                                l1885 039F  
                              l1877 037D                                l1893 040C  
                              l1797 0555                                l1789 052A  
                              l1895 0417                                l1887 0407  
                              l1799 0563                                l1897 0423  
                              l1889 0407                                l1899 0428  
                   __end_of_TECLADO 05BF                                STR_1 009E  
                              STR_2 0009                                STR_3 007C  
                              STR_4 008D                                STR_5 006B  
                              STR_6 0059                                STR_7 001E  
                              STR_8 0032                                STR_9 0046  
                              u1000 0529                                u1001 0528  
                              u1010 053F                                u1011 053E  
                              u1020 0549                                u1021 0548  
                              u1030 054D                                u1031 054C  
                              u1040 0551                                u1041 0550  
                              u1050 0555                                u1051 0554  
                              u1060 038D                                u1061 038C  
                              u1070 0417                                u1071 0416  
                              u1400 07C5                                u1401 07C4  
                              u1325 0624                                u1335 064F  
                              u1345 067A                                u1355 06A5  
                              u1380 079C                                u1381 079B  
                              u1365 0725                                u1390 07A7  
                              u1391 07A6                                u1375 077F  
                              u1627 0603                                u1637 07B0  
                              u1647 07D3                                u1657 0534  
                              u1667 0559                                u1677 033B  
                              u1687 0312                                u1697 02EE  
                              _RCEN 048B                                _RSEN 0489  
                   __end_of_SEND_Tx 02C6                                _Temp 007D  
                              _main 05BF                                btemp 007E  
                  __end_of_I2C_Stop 029A                                start 0000  
       ??_Read_Byte_From_DS1307_RTC 0071                     __end_of_InitI2C 02D3  
  Read_Byte_From_DS1307_RTC@Address 0072                    __end_of_LCD_Init 0359  
                __size_of_SEND_CHAR 0011                               ?_main 0070  
                             _ACKEN 048C                               _ACKDT 048D  
                             STR_10 00B7                               STR_11 00AF  
                             STR_20 00D7                               STR_12 00CB  
                             STR_13 00CF                               STR_21 00B3  
                             STR_14 00DB                               STR_15 00BF  
                             STR_16 00BB                               STR_17 00C3  
                             STR_18 00C7                               STR_19 00D3  
                  __end_of_MCU_Init 0286                               _RCREG 001A  
                             _RCSTA 0018                    __end_of_SEND_CMD 0318  
                             _SPBRG 0099                               _PORTB 0006  
                             _PORTD 0008                               _TRISB 0086  
                             _TRISC 0087                               _TRISD 0088  
                             _SSPIF 0063                               _TXREG 0019  
                             _TXSTA 0098                       SEND_CHAR@dato 0071  
                __size_of_UART_Init 0011                    __end_of_MSG_Term 03D0  
            __size_of_I2C_Read_Byte 000B                               main@a 0024  
                 __end_of_I2C_Start 0290                               pclath 000A  
            __size_of_I2C_Send_NACK 000B                               status 0003  
                             wtemp0 007E                     __initialization 07F5  
         __size_of_EscribeCadenaLCD 001F                        __end_of_main 07F5  
                    LEA_SEE@Address 0072                          _RecibeHHMM 0442  
                            ??_main 007A                           ??_LEA_SEE 0071  
                         ??_TECLADO 0070           _Read_Byte_From_DS1307_RTC 03D0  
                         ??_SEND_Tx 0070                __size_of_ESCRIBA_SEE 0029  
                 __end_of_SEND_CHAR 02F4                              _SSPADD 0093  
                            _SSPCON 0014                              _SSPBUF 0013  
                         ??_InitI2C 0070                   __end_of_UART_Init 0305  
                     _I2C_Read_Byte 02A4                       _I2C_Send_NACK 02AF  
                         ?_I2C_Stop 0070            _Write_Byte_To_DS1307_RTC 0359  
           __end_of__initialization 07FC                           ?_LCD_Init 0070  
                         ?_MCU_Init 0070                           ?_SEND_CMD 0070  
                    ?_I2C_Read_Byte 0070                      __pcstackCOMMON 0070  
                         ?_MSG_Term 0070                      ?_I2C_Send_NACK 0070  
                       ?_RecibeHHMM 0070                          ??_I2C_Stop 0070  
                        __pbssBANK0 0020                          ??_LCD_Init 0073  
                       SEND_Tx@dato 0070                          ??_MCU_Init 0070  
                        ??_SEND_CMD 0070                          __pmaintext 05BF  
                  _EscribeCadenaLCD 0318                          ??_MSG_Term 0071  
     Read_Byte_From_DS1307_RTC@Byte 0073             __size_of_I2C_Write_Byte 0010  
                           _ACKSTAT 048E                       ??_I2C_ReStart 0070  
                   ESCRIBA_SEE@addr 0072                     ESCRIBA_SEE@dato 0071  
                         MSG_Term@s 0072                             _LEA_SEE 0406  
                           _TECLADO 0500                             _SEND_Tx 02BA  
                           _SSPSTAT 0094                          __stringtab 0003  
                      TECLADO@VPTOD 0072  __size_of_Read_Byte_From_DS1307_RTC 0036  
               __size_of_RecibeHHMM 00BE                        TECLADO@Tecla 0073  
                           _InitI2C 02C6                           _I2C_Start 0286  
                   ??_I2C_Read_Byte 0070                     ??_I2C_Send_NACK 0070  
                           __ptext1 02F4                             __ptext2 0500  
                           __ptext3 0442                             __ptext4 0359  
                           __ptext5 03A5                             __ptext6 02BA  
                           __ptext7 03D0                             __ptext8 027E  
                           __ptext9 0406                 __end_of_I2C_ReStart 02A4  
                           main@Car 0025                end_of_initialization 07FC  
                        ?_I2C_Start 0070                           _SEND_CHAR 02E3  
                         _UART_Init 02F4          ??_Write_Byte_To_DS1307_RTC 0072  
                         _PORTCbits 0007                           _PORTDbits 0008  
                     ??_ESCRIBA_SEE 0072                           _TRISCbits 0087  
                 __size_of_I2C_Stop 000A                           _TXSTAbits 0098  
                 __size_of_LCD_Init 0022                          ?_SEND_CHAR 0070  
                 __size_of_MCU_Init 0008                   __size_of_SEND_CMD 0013  
                    _I2C_Write_Byte 02D3                        ??_RecibeHHMM 0073  
                        ?_UART_Init 0070                   __size_of_MSG_Term 002B  
                       _I2C_ReStart 029A                     RecibeHHMM@Datos 0075  
                      SEND_CMD@dato 0072                 start_initialization 07F5  
          __end_of_EscribeCadenaLCD 0337                 __end_of_ESCRIBA_SEE 03A5  
                __end_of_RecibeHHMM 0500                         ??_I2C_Start 0070  
            __end_of_I2C_Write_Byte 02E3                           _pRTCArray 0020  
                          ?_LEA_SEE 0070                         __pbssCOMMON 007D  
                          ?_TECLADO 0070                           ___latbits 0002  
                     __pcstackBANK0 0024                            ?_SEND_Tx 0070  
                     RecibeHHMM@Car 0079                            ?_InitI2C 0070  
                       ??_SEND_CHAR 0070                   EscribeCadenaLCD@s 0073  
                   ?_I2C_Write_Byte 0070                         ??_UART_Init 0070  
  __end_of_Write_Byte_To_DS1307_RTC 037C                           __pstrings 0003  
                          _I2C_Stop 0290                         _ESCRIBA_SEE 037C  
                          _LCD_Init 0337                            _MCU_Init 027E  
                          _PIR1bits 000C                            _SEND_CMD 0305  
             __end_of_I2C_Read_Byte 02AF                            _MSG_Term 03A5  
             __end_of_I2C_Send_NACK 02BA                         __stringbase 0008  
                  __size_of_LEA_SEE 003C                    __size_of_TECLADO 00BF  
                  __size_of_SEND_Tx 000C                    __size_of_InitI2C 000D  
        ?_Read_Byte_From_DS1307_RTC 0070                        ?_I2C_ReStart 0070  
                __end_of__stringtab 0009                            __ptext10 02AF  
                          __ptext11 02A4                            __ptext20 0290  
                          __ptext12 029A                            __ptext21 0286  
                          __ptext13 0337                            __ptext14 0305  
                          __ptext15 02C6                            __ptext16 0318  
                          __ptext17 02E3                            __ptext18 037C  
                          __ptext19 02D3                   ?_EscribeCadenaLCD 0070  
                ??_EscribeCadenaLCD 0072   __size_of_Write_Byte_To_DS1307_RTC 0023  
         ?_Write_Byte_To_DS1307_RTC 0071                       __size_of_main 0236  
 __end_of_Read_Byte_From_DS1307_RTC 0406    Write_Byte_To_DS1307_RTC@DataByte 0071  
                  ??_I2C_Write_Byte 0070                           stringcode 0003  
   Write_Byte_To_DS1307_RTC@Address 0072                        ?_ESCRIBA_SEE 0071  
                          stringdir 0003                            stringtab 0003  
