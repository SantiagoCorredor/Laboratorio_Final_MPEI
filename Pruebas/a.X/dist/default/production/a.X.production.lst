

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Nov 27 13:00:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.32
    40                           ; Generated 02/02/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  001A                     _RCREG	set	26
   195  0008                     _PORTDbits	set	8
   196  0008                     _PORTD	set	8
   197  0019                     _TXREG	set	25
   198  000C                     _PIR1bits	set	12
   199  0018                     _RCSTA	set	24
   200  0006                     _PORTB	set	6
   201  0007                     _PORTCbits	set	7
   202  0013                     _SSPBUF	set	19
   203  0014                     _SSPCON	set	20
   204  0063                     _SSPIF	set	99
   205  0098                     _TXSTAbits	set	152
   206  0088                     _TRISD	set	136
   207  0086                     _TRISB	set	134
   208  0087                     _TRISC	set	135
   209  0099                     _SPBRG	set	153
   210  0098                     _TXSTA	set	152
   211  0094                     _SSPSTAT	set	148
   212  0093                     _SSPADD	set	147
   213  0087                     _TRISCbits	set	135
   214  048B                     _RCEN	set	1163
   215  048E                     _ACKSTAT	set	1166
   216  048C                     _ACKEN	set	1164
   217  048D                     _ACKDT	set	1165
   218  048A                     _PEN	set	1162
   219  0489                     _RSEN	set	1161
   220  0488                     _SEN	set	1160
   221                           
   222                           	psect	strings
   223  0934                     __pstrings:
   224  0934                     stringtab:
   225  0934                     __stringtab:
   226                           
   227                           ;	String table - string pointers are 2 bytes each
   228  0934  1BFF               	btfsc	btemp+1,7
   229  0935  293E               	ljmp	stringcode
   230  0936  1383               	bcf	3,7
   231  0937  187F               	btfsc	btemp+1,0
   232  0938  1783               	bsf	3,7
   233  0939  0800               	movf	0,w
   234  093A  0A84               	incf	4,f
   235  093B  1903               	skipnz
   236  093C  0AFF               	incf	btemp+1,f
   237  093D  0008               	return
   238  093E                     stringcode:
   239  093E  087F               	movf	btemp+1,w
   240  093F  397F               	andlw	127
   241  0940  008A               	movwf	10
   242  0941  0804               	movf	4,w
   243  0942  0A84               	incf	4,f
   244  0943  1903               	skipnz
   245  0944  0AFF               	incf	btemp+1,f
   246  0945  0082               	movwf	2
   247  0946                     __stringbase:
   248  0946                     __end_of__stringtab:
   249                           
   250                           	psect	stringtext
   251  0800                     __pstringtext:
   252  0800                     STR_32:
   253  0800  344C               	retlw	76	;'L'
   254  0801  3465               	retlw	101	;'e'
   255  0802  3463               	retlw	99	;'c'
   256  0803  3474               	retlw	116	;'t'
   257  0804  3475               	retlw	117	;'u'
   258  0805  3472               	retlw	114	;'r'
   259  0806  3461               	retlw	97	;'a'
   260  0807  3420               	retlw	32	;' '
   261  0808  3479               	retlw	121	;'y'
   262  0809  3420               	retlw	32	;' '
   263  080A  3465               	retlw	101	;'e'
   264  080B  3473               	retlw	115	;'s'
   265  080C  3463               	retlw	99	;'c'
   266  080D  3472               	retlw	114	;'r'
   267  080E  3469               	retlw	105	;'i'
   268  080F  3474               	retlw	116	;'t'
   269  0810  3475               	retlw	117	;'u'
   270  0811  3472               	retlw	114	;'r'
   271  0812  3461               	retlw	97	;'a'
   272  0813  3400               	retlw	0
   273  0814                     STR_31:
   274  0814  3420               	retlw	32	;' '
   275  0815  3420               	retlw	32	;' '
   276  0816  3420               	retlw	32	;' '
   277  0817  3420               	retlw	32	;' '
   278  0818  3452               	retlw	82	;'R'
   279  0819  3454               	retlw	84	;'T'
   280  081A  3443               	retlw	67	;'C'
   281  081B  3420               	retlw	32	;' '
   282  081C  3444               	retlw	68	;'D'
   283  081D  3453               	retlw	83	;'S'
   284  081E  3431               	retlw	49	;'1'
   285  081F  3433               	retlw	51	;'3'
   286  0820  3430               	retlw	48	;'0'
   287  0821  3437               	retlw	55	;'7'
   288  0822  3420               	retlw	32	;' '
   289  0823  3420               	retlw	32	;' '
   290  0824  3420               	retlw	32	;' '
   291  0825  3400               	retlw	0
   292  0826                     STR_34:
   293  0826  3448               	retlw	72	;'H'
   294  0827  3461               	retlw	97	;'a'
   295  0828  3473               	retlw	115	;'s'
   296  0829  3474               	retlw	116	;'t'
   297  082A  3461               	retlw	97	;'a'
   298  082B  3420               	retlw	32	;' '
   299  082C  3461               	retlw	97	;'a'
   300  082D  3463               	retlw	99	;'c'
   301  082E  34E1               	retlw	-31
   302  082F  3420               	retlw	32	;' '
   303  0830  346C               	retlw	108	;'l'
   304  0831  346C               	retlw	108	;'l'
   305  0832  3465               	retlw	101	;'e'
   306  0833  3467               	retlw	103	;'g'
   307  0834  3475               	retlw	117	;'u'
   308  0835  34E9               	retlw	-23
   309  0836  3400               	retlw	0
   310  0837                     STR_22:
   311  0837  3454               	retlw	84	;'T'
   312  0838  3465               	retlw	101	;'e'
   313  0839  3463               	retlw	99	;'c'
   314  083A  346C               	retlw	108	;'l'
   315  083B  3465               	retlw	101	;'e'
   316  083C  3465               	retlw	101	;'e'
   317  083D  3420               	retlw	32	;' '
   318  083E  3461               	retlw	97	;'a'
   319  083F  34F1               	retlw	-15
   320  0840  346F               	retlw	111	;'o'
   321  0841  3420               	retlw	32	;' '
   322  0842  3428               	retlw	40	;'('
   323  0843  3441               	retlw	65	;'A'
   324  0844  3441               	retlw	65	;'A'
   325  0845  3429               	retlw	41	;')'
   326  0846  343A               	retlw	58	;':'
   327  0847  3400               	retlw	0
   328  0848                     STR_20:
   329  0848  3454               	retlw	84	;'T'
   330  0849  3465               	retlw	101	;'e'
   331  084A  3463               	retlw	99	;'c'
   332  084B  346C               	retlw	108	;'l'
   333  084C  3465               	retlw	101	;'e'
   334  084D  3465               	retlw	101	;'e'
   335  084E  3420               	retlw	32	;' '
   336  084F  3464               	retlw	100	;'d'
   337  0850  34ED               	retlw	-19
   338  0851  3461               	retlw	97	;'a'
   339  0852  3420               	retlw	32	;' '
   340  0853  3428               	retlw	40	;'('
   341  0854  3444               	retlw	68	;'D'
   342  0855  3444               	retlw	68	;'D'
   343  0856  3429               	retlw	41	;')'
   344  0857  343A               	retlw	58	;':'
   345  0858  3400               	retlw	0
   346  0859                     STR_21:
   347  0859  3454               	retlw	84	;'T'
   348  085A  3465               	retlw	101	;'e'
   349  085B  3463               	retlw	99	;'c'
   350  085C  346C               	retlw	108	;'l'
   351  085D  3465               	retlw	101	;'e'
   352  085E  3465               	retlw	101	;'e'
   353  085F  3420               	retlw	32	;' '
   354  0860  346D               	retlw	109	;'m'
   355  0861  3465               	retlw	101	;'e'
   356  0862  3473               	retlw	115	;'s'
   357  0863  3420               	retlw	32	;' '
   358  0864  3428               	retlw	40	;'('
   359  0865  344D               	retlw	77	;'M'
   360  0866  344D               	retlw	77	;'M'
   361  0867  3429               	retlw	41	;')'
   362  0868  343A               	retlw	58	;':'
   363  0869  3400               	retlw	0
   364  086A                     STR_1:
   365  086A  3445               	retlw	69	;'E'
   366  086B  3473               	retlw	115	;'s'
   367  086C  3463               	retlw	99	;'c'
   368  086D  3472               	retlw	114	;'r'
   369  086E  3469               	retlw	105	;'i'
   370  086F  3462               	retlw	98	;'b'
   371  0870  3461               	retlw	97	;'a'
   372  0871  3420               	retlw	32	;' '
   373  0872  346C               	retlw	108	;'l'
   374  0873  3461               	retlw	97	;'a'
   375  0874  3420               	retlw	32	;' '
   376  0875  3448               	retlw	72	;'H'
   377  0876  346F               	retlw	111	;'o'
   378  0877  3472               	retlw	114	;'r'
   379  0878  3461               	retlw	97	;'a'
   380  0879  343A               	retlw	58	;':'
   381  087A  3400               	retlw	0
   382  087B                     STR_15:
   383  087B  3445               	retlw	69	;'E'
   384  087C  3473               	retlw	115	;'s'
   385  087D  3463               	retlw	99	;'c'
   386  087E  3472               	retlw	114	;'r'
   387  087F  3469               	retlw	105	;'i'
   388  0880  3462               	retlw	98	;'b'
   389  0881  3461               	retlw	97	;'a'
   390  0882  3420               	retlw	32	;' '
   391  0883  3461               	retlw	97	;'a'
   392  0884  346C               	retlw	108	;'l'
   393  0885  3461               	retlw	97	;'a'
   394  0886  3472               	retlw	114	;'r'
   395  0887  346D               	retlw	109	;'m'
   396  0888  3461               	retlw	97	;'a'
   397  0889  3420               	retlw	32	;' '
   398  088A  3400               	retlw	0
   399  088B                     STR_16:
   400  088B  3441               	retlw	65	;'A'
   401  088C  3441               	retlw	65	;'A'
   402  088D  342F               	retlw	47	;'/'
   403  088E  344D               	retlw	77	;'M'
   404  088F  344D               	retlw	77	;'M'
   405  0890  342F               	retlw	47	;'/'
   406  0891  3444               	retlw	68	;'D'
   407  0892  3444               	retlw	68	;'D'
   408  0893  3420               	retlw	32	;' '
   409  0894  3448               	retlw	72	;'H'
   410  0895  3448               	retlw	72	;'H'
   411  0896  343A               	retlw	58	;':'
   412  0897  344D               	retlw	77	;'M'
   413  0898  344D               	retlw	77	;'M'
   414  0899  3400               	retlw	0
   415  089A                     STR_33:
   416  089A  3441               	retlw	65	;'A'
   417  089B  344C               	retlw	76	;'L'
   418  089C  3441               	retlw	65	;'A'
   419  089D  3452               	retlw	82	;'R'
   420  089E  344D               	retlw	77	;'M'
   421  089F  3441               	retlw	65	;'A'
   422  08A0  3453               	retlw	83	;'S'
   423  08A1  3420               	retlw	32	;' '
   424  08A2  3445               	retlw	69	;'E'
   425  08A3  3445               	retlw	69	;'E'
   426  08A4  3450               	retlw	80	;'P'
   427  08A5  3452               	retlw	82	;'R'
   428  08A6  344F               	retlw	79	;'O'
   429  08A7  344D               	retlw	77	;'M'
   430  08A8  3400               	retlw	0
   431  08A9                     STR_17:
   432  08A9  342A               	retlw	42	;'*'
   433  08AA  343D               	retlw	61	;'='
   434  08AB  346F               	retlw	111	;'o'
   435  08AC  346E               	retlw	110	;'n'
   436  08AD  3420               	retlw	32	;' '
   437  08AE  3423               	retlw	35	;'#'
   438  08AF  343D               	retlw	61	;'='
   439  08B0  346F               	retlw	111	;'o'
   440  08B1  3466               	retlw	102	;'f'
   441  08B2  3466               	retlw	102	;'f'
   442  08B3  3420               	retlw	32	;' '
   443  08B4  3400               	retlw	0
   444  08B5                     STR_30:
   445  08B5  344D               	retlw	77	;'M'
   446  08B6  3450               	retlw	80	;'P'
   447  08B7  3445               	retlw	69	;'E'
   448  08B8  3449               	retlw	73	;'I'
   449  08B9  3420               	retlw	32	;' '
   450  08BA  344C               	retlw	76	;'L'
   451  08BB  3441               	retlw	65	;'A'
   452  08BC  3442               	retlw	66	;'B'
   453  08BD  3420               	retlw	32	;' '
   454  08BE  3436               	retlw	54	;'6'
   455  08BF  3400               	retlw	0
   456  08C0                     STR_25:
   457  08C0  344D               	retlw	77	;'M'
   458  08C1  3469               	retlw	105	;'i'
   459  08C2  3465               	retlw	101	;'e'
   460  08C3  3472               	retlw	114	;'r'
   461  08C4  3463               	retlw	99	;'c'
   462  08C5  346F               	retlw	111	;'o'
   463  08C6  346C               	retlw	108	;'l'
   464  08C7  3465               	retlw	101	;'e'
   465  08C8  3473               	retlw	115	;'s'
   466  08C9  3400               	retlw	0
   467  08CA                     STR_29:
   468  08CA  3444               	retlw	68	;'D'
   469  08CB  346F               	retlw	111	;'o'
   470  08CC  346D               	retlw	109	;'m'
   471  08CD  3469               	retlw	105	;'i'
   472  08CE  346E               	retlw	110	;'n'
   473  08CF  3467               	retlw	103	;'g'
   474  08D0  346F               	retlw	111	;'o'
   475  08D1  3400               	retlw	0
   476  08D2                     STR_27:
   477  08D2  3456               	retlw	86	;'V'
   478  08D3  3469               	retlw	105	;'i'
   479  08D4  3465               	retlw	101	;'e'
   480  08D5  3472               	retlw	114	;'r'
   481  08D6  346E               	retlw	110	;'n'
   482  08D7  3465               	retlw	101	;'e'
   483  08D8  3473               	retlw	115	;'s'
   484  08D9  3400               	retlw	0
   485  08DA                     STR_28:
   486  08DA  3453               	retlw	83	;'S'
   487  08DB  3461               	retlw	97	;'a'
   488  08DC  3462               	retlw	98	;'b'
   489  08DD  3461               	retlw	97	;'a'
   490  08DE  3464               	retlw	100	;'d'
   491  08DF  346F               	retlw	111	;'o'
   492  08E0  3400               	retlw	0
   493  08E1                     STR_24:
   494  08E1  344D               	retlw	77	;'M'
   495  08E2  3461               	retlw	97	;'a'
   496  08E3  3472               	retlw	114	;'r'
   497  08E4  3474               	retlw	116	;'t'
   498  08E5  3465               	retlw	101	;'e'
   499  08E6  3473               	retlw	115	;'s'
   500  08E7  3400               	retlw	0
   501  08E8                     STR_26:
   502  08E8  344A               	retlw	74	;'J'
   503  08E9  3475               	retlw	117	;'u'
   504  08EA  3465               	retlw	101	;'e'
   505  08EB  3476               	retlw	118	;'v'
   506  08EC  3465               	retlw	101	;'e'
   507  08ED  3473               	retlw	115	;'s'
   508  08EE  3400               	retlw	0
   509  08EF                     STR_2:
   510  08EF  3448               	retlw	72	;'H'
   511  08F0  3448               	retlw	72	;'H'
   512  08F1  342F               	retlw	47	;'/'
   513  08F2  344D               	retlw	77	;'M'
   514  08F3  344D               	retlw	77	;'M'
   515  08F4  3400               	retlw	0
   516  08F5                     STR_23:
   517  08F5  344C               	retlw	76	;'L'
   518  08F6  3475               	retlw	117	;'u'
   519  08F7  346E               	retlw	110	;'n'
   520  08F8  3465               	retlw	101	;'e'
   521  08F9  3473               	retlw	115	;'s'
   522  08FA  3400               	retlw	0
   523  08FB                     STR_4:
   524  08FB  3446               	retlw	70	;'F'
   525  08FC  3445               	retlw	69	;'E'
   526  08FD  3442               	retlw	66	;'B'
   527  08FE  3400               	retlw	0
   528  08FF                     STR_14:
   529  08FF  3444               	retlw	68	;'D'
   530  0900  3449               	retlw	73	;'I'
   531  0901  3443               	retlw	67	;'C'
   532  0902  3400               	retlw	0
   533  0903                     STR_3:
   534  0903  3445               	retlw	69	;'E'
   535  0904  344E               	retlw	78	;'N'
   536  0905  3445               	retlw	69	;'E'
   537  0906  3400               	retlw	0
   538  0907                     STR_9:
   539  0907  344A               	retlw	74	;'J'
   540  0908  3455               	retlw	85	;'U'
   541  0909  344C               	retlw	76	;'L'
   542  090A  3400               	retlw	0
   543  090B                     STR_8:
   544  090B  344A               	retlw	74	;'J'
   545  090C  3455               	retlw	85	;'U'
   546  090D  344E               	retlw	78	;'N'
   547  090E  3400               	retlw	0
   548  090F                     STR_10:
   549  090F  3441               	retlw	65	;'A'
   550  0910  3447               	retlw	71	;'G'
   551  0911  344F               	retlw	79	;'O'
   552  0912  3400               	retlw	0
   553  0913                     STR_11:
   554  0913  3453               	retlw	83	;'S'
   555  0914  3445               	retlw	69	;'E'
   556  0915  3450               	retlw	80	;'P'
   557  0916  3400               	retlw	0
   558  0917                     STR_5:
   559  0917  344D               	retlw	77	;'M'
   560  0918  3441               	retlw	65	;'A'
   561  0919  3452               	retlw	82	;'R'
   562  091A  3400               	retlw	0
   563  091B                     STR_6:
   564  091B  3441               	retlw	65	;'A'
   565  091C  3442               	retlw	66	;'B'
   566  091D  3452               	retlw	82	;'R'
   567  091E  3400               	retlw	0
   568  091F                     STR_12:
   569  091F  344F               	retlw	79	;'O'
   570  0920  3443               	retlw	67	;'C'
   571  0921  3454               	retlw	84	;'T'
   572  0922  3400               	retlw	0
   573  0923                     STR_13:
   574  0923  344E               	retlw	78	;'N'
   575  0924  344F               	retlw	79	;'O'
   576  0925  3456               	retlw	86	;'V'
   577  0926  3400               	retlw	0
   578  0927                     STR_7:
   579  0927  344D               	retlw	77	;'M'
   580  0928  3441               	retlw	65	;'A'
   581  0929  3459               	retlw	89	;'Y'
   582  092A  3400               	retlw	0
   583  092B                     STR_19:
   584  092B  344F               	retlw	79	;'O'
   585  092C  3466               	retlw	102	;'f'
   586  092D  3466               	retlw	102	;'f'
   587  092E  3400               	retlw	0
   588  092F                     STR_18:
   589  092F  344F               	retlw	79	;'O'
   590  0930  346E               	retlw	110	;'n'
   591  0931  3400               	retlw	0
   592  0932                     STR_36:
   593  0932  3431               	retlw	49	;'1'
   594  0933  3400               	retlw	0
   595  0826                     
   596                           	psect	cinit
   597  07F5                     start_initialization:	
   598                           ; #config settings
   599                           
   600  07F5                     __initialization:
   601                           
   602                           ; Clear objects allocated to COMMON
   603  07F5  01FD               	clrf	__pbssCOMMON& (0+127)
   604                           
   605                           ; Clear objects allocated to BANK0
   606  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   607  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   608  07F8  01B5               	clrf	__pbssBANK0& (0+127)
   609  07F9  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   610  07FA  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   611  07FB  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   612  07FC                     end_of_initialization:	
   613                           ;End of C runtime variable initialization code
   614                           
   615  07FC                     __end_of__initialization:
   616  07FC  0183               	clrf	3
   617  07FD  120A  118A  2A29   	ljmp	_main	;jump to C main() function
   618                           
   619                           	psect	bssCOMMON
   620  007D                     __pbssCOMMON:
   621  007D                     _Temp:
   622  007D                     	ds	1
   623                           
   624                           	psect	bssBANK0
   625  0035                     __pbssBANK0:
   626  0035                     _pRTCArray:
   627  0035                     	ds	4
   628                           
   629                           	psect	cstackCOMMON
   630  0070                     __pcstackCOMMON:
   631  0070                     ?_InitI2C:
   632  0070                     ??_InitI2C:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_I2C_Start:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ??_I2C_Start:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_I2C_ReStart:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ??_I2C_ReStart:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_I2C_Stop:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_I2C_Stop:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_I2C_Send_NACK:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_I2C_Send_NACK:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_I2C_Write_Byte:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_I2C_Write_Byte:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_I2C_Read_Byte:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_I2C_Read_Byte:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_Read_Byte_From_DS1307_RTC:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_SEND_CMD:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ??_SEND_CMD:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_SEND_CHAR:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ??_SEND_CHAR:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_LCD_Init:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_UART_Init:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_UART_Init:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_MCU_Init:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ??_MCU_Init:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_SEND_Tx:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ??_SEND_Tx:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_TECLADO:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ??_TECLADO:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_Deco_num:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ??_Deco_num:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_RecibeALARMAS:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_anti_r:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ??_anti_r:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_main:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?___bmul:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?___awdiv:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     I2C_Write_Byte@Byte:	
   738                           ; 2 bytes @ 0x0
   739                           
   740  0070                     SEND_Tx@dato:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ___bmul@multiplicand:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ___awdiv@divisor:	
   747                           ; 1 bytes @ 0x0
   748                           
   749                           
   750                           ; 2 bytes @ 0x0
   751  0070                     	ds	1
   752  0071                     ??_Read_Byte_From_DS1307_RTC:
   753  0071                     ?_MSG_Term:	
   754                           ; 1 bytes @ 0x1
   755                           
   756  0071                     ?_ESCRIBA_SEE:	
   757                           ; 1 bytes @ 0x1
   758                           
   759  0071                     ??___bmul:	
   760                           ; 1 bytes @ 0x1
   761                           
   762  0071                     SEND_CHAR@dato:	
   763                           ; 1 bytes @ 0x1
   764                           
   765  0071                     ESCRIBA_SEE@dato:	
   766                           ; 1 bytes @ 0x1
   767                           
   768  0071                     anti_r@Car:	
   769                           ; 1 bytes @ 0x1
   770                           
   771  0071                     MSG_Term@s:	
   772                           ; 1 bytes @ 0x1
   773                           
   774                           
   775                           ; 2 bytes @ 0x1
   776  0071                     	ds	1
   777  0072                     ??_ESCRIBA_SEE:
   778  0072                     Read_Byte_From_DS1307_RTC@Address:	
   779                           ; 1 bytes @ 0x2
   780                           
   781  0072                     SEND_CMD@dato:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  0072                     TECLADO@VPTOD:	
   785                           ; 1 bytes @ 0x2
   786                           
   787  0072                     Deco_num@dato:	
   788                           ; 1 bytes @ 0x2
   789                           
   790  0072                     ESCRIBA_SEE@addr:	
   791                           ; 1 bytes @ 0x2
   792                           
   793  0072                     ___bmul@product:	
   794                           ; 1 bytes @ 0x2
   795                           
   796  0072                     ___awdiv@dividend:	
   797                           ; 1 bytes @ 0x2
   798                           
   799                           
   800                           ; 2 bytes @ 0x2
   801  0072                     	ds	1
   802  0073                     ??_LCD_Init:
   803  0073                     ?_SEND_MSJ:	
   804                           ; 1 bytes @ 0x3
   805                           
   806  0073                     ??_MSG_Term:	
   807                           ; 1 bytes @ 0x3
   808                           
   809  0073                     Read_Byte_From_DS1307_RTC@Byte:	
   810                           ; 1 bytes @ 0x3
   811                           
   812  0073                     TECLADO@Tecla:	
   813                           ; 1 bytes @ 0x3
   814                           
   815  0073                     ___bmul@multiplier:	
   816                           ; 1 bytes @ 0x3
   817                           
   818  0073                     SEND_MSJ@Msj:	
   819                           ; 1 bytes @ 0x3
   820                           
   821                           
   822                           ; 2 bytes @ 0x3
   823  0073                     	ds	1
   824  0074                     ??___awdiv:
   825                           
   826                           ; 1 bytes @ 0x4
   827  0074                     	ds	1
   828  0075                     ??_SEND_MSJ:
   829  0075                     ___awdiv@counter:	
   830                           ; 1 bytes @ 0x5
   831                           
   832                           
   833                           ; 1 bytes @ 0x5
   834  0075                     	ds	1
   835  0076                     SEND_MSJ@POS:
   836  0076                     ___awdiv@sign:	
   837                           ; 1 bytes @ 0x6
   838                           
   839                           
   840                           ; 1 bytes @ 0x6
   841  0076                     	ds	1
   842  0077                     SEND_MSJ@carac:
   843  0077                     ___awdiv@quotient:	
   844                           ; 1 bytes @ 0x7
   845                           
   846                           
   847                           ; 2 bytes @ 0x7
   848  0077                     	ds	1
   849  0078                     ?_deco_mes:
   850  0078                     deco_mes@Car:	
   851                           ; 1 bytes @ 0x8
   852                           
   853                           
   854                           ; 1 bytes @ 0x8
   855  0078                     	ds	1
   856  0079                     ??_deco_mes:
   857                           
   858                           ; 1 bytes @ 0x9
   859  0079                     	ds	2
   860  007B                     deco_mes@addr:
   861                           
   862                           ; 1 bytes @ 0xB
   863  007B                     	ds	1
   864  007C                     main@Car:
   865                           
   866                           ; 1 bytes @ 0xC
   867  007C                     	ds	1
   868                           
   869                           	psect	cstackBANK0
   870  0020                     __pcstackBANK0:
   871  0020                     ??_RecibeALARMAS:
   872                           
   873                           ; 1 bytes @ 0x0
   874  0020                     	ds	3
   875  0023                     RecibeALARMAS@aux2:
   876                           
   877                           ; 1 bytes @ 0x3
   878  0023                     	ds	1
   879  0024                     RecibeALARMAS@aux1:
   880                           
   881                           ; 1 bytes @ 0x4
   882  0024                     	ds	1
   883  0025                     RecibeALARMAS@ctr:
   884                           
   885                           ; 1 bytes @ 0x5
   886  0025                     	ds	1
   887  0026                     RecibeALARMAS@Datos:
   888                           
   889                           ; 10 bytes @ 0x6
   890  0026                     	ds	10
   891  0030                     RecibeALARMAS@addr:
   892                           
   893                           ; 1 bytes @ 0x10
   894  0030                     	ds	1
   895  0031                     RecibeALARMAS@Car:
   896                           
   897                           ; 1 bytes @ 0x11
   898  0031                     	ds	1
   899  0032                     ??_main:
   900                           
   901                           ; 1 bytes @ 0x12
   902  0032                     	ds	3
   903                           
   904                           	psect	maintext
   905  0229                     __pmaintext:	
   906 ;;
   907 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   908 ;;
   909 ;; *************** function _main *****************
   910 ;; Defined at:
   911 ;;		line 604 in file "main.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  Car             1   12[COMMON] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : B00/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         1       0       0       0       0
   927 ;;      Temps:          0       3       0       0       0
   928 ;;      Totals:         1       3       0       0       0
   929 ;;Total ram usage:        4 bytes
   930 ;; Hardware stack levels required when called: 4
   931 ;; This function calls:
   932 ;;		_InitI2C
   933 ;;		_LCD_Init
   934 ;;		_MCU_Init
   935 ;;		_MSG_Term
   936 ;;		_Read_Byte_From_DS1307_RTC
   937 ;;		_RecibeALARMAS
   938 ;;		_SEND_CHAR
   939 ;;		_SEND_CMD
   940 ;;		_SEND_MSJ
   941 ;;		_UART_Init
   942 ;;		_anti_r
   943 ;;		_deco_mes
   944 ;; This function is called by:
   945 ;;		Startup code after reset
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _main
   951  0229                     _main:
   952  0229                     l2909:	
   953                           ;incstack = 0
   954                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   955                           
   956                           
   957                           ;main.c: 605:     char Car;;main.c: 606:     MCU_Init();
   958  0229  120A  158A  264B  120A  118A  	fcall	_MCU_Init
   959                           
   960                           ;main.c: 607:     LCD_Init();
   961  022E  120A  158A  270D  120A  118A  	fcall	_LCD_Init
   962                           
   963                           ;main.c: 608:     UART_Init();
   964  0233  120A  158A  26C1  120A  118A  	fcall	_UART_Init
   965                           
   966                           ;main.c: 609:     InitI2C();
   967  0238  120A  158A  2693  120A  118A  	fcall	_InitI2C
   968  023D                     l2911:
   969                           
   970                           ;main.c: 611:     SEND_MSJ(0x80,"MPEI LAB 6");
   971  023D  30B5               	movlw	low (STR_30| (0+32768))
   972  023E  00F3               	movwf	SEND_MSJ@Msj
   973  023F  3088               	movlw	high (STR_30| (0+32768))
   974  0240  00F4               	movwf	SEND_MSJ@Msj+1
   975  0241  3080               	movlw	128
   976  0242  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
   977  0247                     l2913:
   978                           
   979                           ;main.c: 613:     SEND_MSJ(0xC0 , "    RTC DS1307   ");
   980  0247  3014               	movlw	low (STR_31| (0+32768))
   981  0248  00F3               	movwf	SEND_MSJ@Msj
   982  0249  3088               	movlw	high (STR_31| (0+32768))
   983  024A  00F4               	movwf	SEND_MSJ@Msj+1
   984  024B  30C0               	movlw	192
   985  024C  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
   986  0251                     l2915:
   987                           
   988                           ;main.c: 615:     SEND_MSJ(0x80 + 20, "Lectura y escritura");
   989  0251  3000               	movlw	low (STR_32| (0+32768))
   990  0252  00F3               	movwf	SEND_MSJ@Msj
   991  0253  3088               	movlw	high (STR_32| (0+32768))
   992  0254  00F4               	movwf	SEND_MSJ@Msj+1
   993  0255  3094               	movlw	148
   994  0256  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
   995  025B                     l2917:
   996                           
   997                           ;main.c: 617:     SEND_MSJ(0xC0 + 20, "ALARMAS EEPROM");
   998  025B  309A               	movlw	low (STR_33| (0+32768))
   999  025C  00F3               	movwf	SEND_MSJ@Msj
  1000  025D  3088               	movlw	high (STR_33| (0+32768))
  1001  025E  00F4               	movwf	SEND_MSJ@Msj+1
  1002  025F  30D4               	movlw	212
  1003  0260  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  1004  0265                     l2919:
  1005                           
  1006                           ;main.c: 619:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1007  0265  300B               	movlw	11
  1008  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0268  00B4               	movwf	??_main+2
  1011  0269  3026               	movlw	38
  1012  026A  00B3               	movwf	??_main+1
  1013  026B  305D               	movlw	93
  1014  026C  00B2               	movwf	??_main
  1015  026D                     u1937:
  1016  026D  0BB2               	decfsz	??_main,f
  1017  026E  2A6D               	goto	u1937
  1018  026F  0BB3               	decfsz	??_main+1,f
  1019  0270  2A6D               	goto	u1937
  1020  0271  0BB4               	decfsz	??_main+2,f
  1021  0272  2A6D               	goto	u1937
  1022  0273                     l2921:
  1023                           
  1024                           ;main.c: 621:     SEND_CMD(1);
  1025  0273  3001               	movlw	1
  1026  0274  120A  158A  26D2  120A  118A  	fcall	_SEND_CMD
  1027  0279                     l2923:
  1028                           
  1029                           ;main.c: 622:     MSG_Term("Hasta acá llegué");
  1030  0279  3026               	movlw	low (STR_34| (0+32768))
  1031  027A  00F1               	movwf	MSG_Term@s
  1032  027B  3088               	movlw	high (STR_34| (0+32768))
  1033  027C  00F2               	movwf	MSG_Term@s+1
  1034  027D  120A  118A  2003  120A  118A  	fcall	_MSG_Term
  1035  0282                     l2925:
  1036                           
  1037                           ;main.c: 624:         if (PIR1bits.RCIF == 1) {
  1038  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0284  1E8C               	btfss	12,5	;volatile
  1041  0285  2A87               	goto	u1781
  1042  0286  2A88               	goto	u1780
  1043  0287                     u1781:
  1044  0287  2B39               	goto	l2965
  1045  0288                     u1780:
  1046  0288                     l2927:
  1047                           
  1048                           ;main.c: 625:             Car = RCREG;
  1049  0288  081A               	movf	26,w	;volatile
  1050  0289  00B2               	movwf	??_main
  1051  028A  0832               	movf	??_main,w
  1052  028B  00FC               	movwf	main@Car
  1053  028C                     l2929:
  1054                           
  1055                           ;main.c: 626:             PIR1bits.RCIF = 0;
  1056  028C  128C               	bcf	12,5	;volatile
  1057  028D                     l2931:
  1058                           
  1059                           ;main.c: 627:             MSG_Term("Hasta acá llegué");
  1060  028D  3026               	movlw	low (STR_34| (0+32768))
  1061  028E  00F1               	movwf	MSG_Term@s
  1062  028F  3088               	movlw	high (STR_34| (0+32768))
  1063  0290  00F2               	movwf	MSG_Term@s+1
  1064  0291  120A  118A  2003  120A  118A  	fcall	_MSG_Term
  1065                           
  1066                           ;main.c: 629:         switch (Car){
  1067  0296  2B0F               	goto	l2963
  1068  0297                     l2933:
  1069                           
  1070                           ;main.c: 631:                 anti_r();
  1071  0297  120A  158A  26E5  120A  118A  	fcall	_anti_r
  1072  029C                     l2935:
  1073                           
  1074                           ;main.c: 632:                 RecibeALARMAS(0);
  1075  029C  3000               	movlw	0
  1076  029D  120A  118A  2433  120A  118A  	fcall	_RecibeALARMAS
  1077  02A2                     l2937:
  1078                           
  1079                           ;main.c: 633:                 MSG_Term("1");
  1080  02A2  3032               	movlw	low (STR_36| (0+32768))
  1081  02A3  00F1               	movwf	MSG_Term@s
  1082  02A4  3089               	movlw	high (STR_36| (0+32768))
  1083  02A5  00F2               	movwf	MSG_Term@s+1
  1084  02A6  120A  118A  2003  120A  118A  	fcall	_MSG_Term
  1085  02AB                     l375:	
  1086                           ;main.c: 635:             case '2':
  1087                           
  1088                           
  1089                           ;main.c: 636:                 anti_r();
  1090  02AB  120A  158A  26E5  120A  118A  	fcall	_anti_r
  1091  02B0                     l2939:
  1092                           
  1093                           ;main.c: 637:                 RecibeALARMAS(8);
  1094  02B0  3008               	movlw	8
  1095  02B1  120A  118A  2433  120A  118A  	fcall	_RecibeALARMAS
  1096  02B6                     l2941:
  1097                           
  1098                           ;main.c: 640:                 anti_r();
  1099  02B6  120A  158A  26E5  120A  118A  	fcall	_anti_r
  1100                           
  1101                           ;main.c: 641:                 RecibeALARMAS(16);
  1102  02BB  3010               	movlw	16
  1103  02BC  120A  118A  2433  120A  118A  	fcall	_RecibeALARMAS
  1104  02C1                     l2943:
  1105                           
  1106                           ;main.c: 643:                 anti_r();
  1107  02C1  120A  158A  26E5  120A  118A  	fcall	_anti_r
  1108  02C6                     l2945:
  1109                           
  1110                           ;main.c: 644:                 RecibeALARMAS(24);
  1111  02C6  3018               	movlw	24
  1112  02C7  120A  118A  2433  120A  118A  	fcall	_RecibeALARMAS
  1113  02CC                     l378:	
  1114                           ;main.c: 645:             case '5':
  1115                           
  1116                           
  1117                           ;main.c: 646:                 anti_r();
  1118  02CC  120A  158A  26E5  120A  118A  	fcall	_anti_r
  1119  02D1                     l2947:
  1120                           
  1121                           ;main.c: 647:                 RecibeALARMAS(32);
  1122  02D1  3020               	movlw	32
  1123  02D2  120A  118A  2433  120A  118A  	fcall	_RecibeALARMAS
  1124  02D7                     l2949:
  1125                           
  1126                           ;main.c: 649:                 anti_r();
  1127  02D7  120A  158A  26E5  120A  118A  	fcall	_anti_r
  1128                           
  1129                           ;main.c: 650:                 RecibeALARMAS(40);
  1130  02DC  3028               	movlw	40
  1131  02DD  120A  118A  2433  120A  118A  	fcall	_RecibeALARMAS
  1132  02E2                     l2951:
  1133                           
  1134                           ;main.c: 652:                 anti_r();
  1135  02E2  120A  158A  26E5  120A  118A  	fcall	_anti_r
  1136  02E7                     l2953:
  1137                           
  1138                           ;main.c: 653:                 RecibeALARMAS(48);
  1139  02E7  3030               	movlw	48
  1140  02E8  120A  118A  2433  120A  118A  	fcall	_RecibeALARMAS
  1141  02ED                     l381:	
  1142                           ;main.c: 654:             case '8':
  1143                           
  1144                           
  1145                           ;main.c: 655:                 anti_r();
  1146  02ED  120A  158A  26E5  120A  118A  	fcall	_anti_r
  1147  02F2                     l2955:
  1148                           
  1149                           ;main.c: 656:                 RecibeALARMAS(56);
  1150  02F2  3038               	movlw	56
  1151  02F3  120A  118A  2433  120A  118A  	fcall	_RecibeALARMAS
  1152  02F8                     l2957:
  1153                           
  1154                           ;main.c: 658:                 anti_r();
  1155  02F8  120A  158A  26E5  120A  118A  	fcall	_anti_r
  1156                           
  1157                           ;main.c: 659:                 RecibeALARMAS(64);
  1158  02FD  3040               	movlw	64
  1159  02FE  120A  118A  2433  120A  118A  	fcall	_RecibeALARMAS
  1160  0303                     l2959:
  1161                           
  1162                           ;main.c: 661:                 anti_r();
  1163  0303  120A  158A  26E5  120A  118A  	fcall	_anti_r
  1164  0308                     l2961:
  1165                           
  1166                           ;main.c: 662:                 RecibeALARMAS(72);
  1167  0308  3048               	movlw	72
  1168  0309  120A  118A  2433  120A  118A  	fcall	_RecibeALARMAS
  1169                           
  1170                           ;main.c: 663:             }
  1171  030E  2B39               	goto	l2965
  1172  030F                     l2963:
  1173  030F  087C               	movf	main@Car,w
  1174  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1175  0311  1303               	bcf	3,6	;RP1=0, select bank0
  1176  0312  00B2               	movwf	??_main
  1177  0313  01B3               	clrf	??_main+1
  1178                           
  1179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1180                           ; Switch size 1, requested type "simple"
  1181                           ; Number of cases is 1, Range of values is 0 to 0
  1182                           ; switch strategies available:
  1183                           ; Name         Instructions Cycles
  1184                           ; simple_byte            4     3 (average)
  1185                           ; direct_byte           11     8 (fixed)
  1186                           ; jumptable            260     6 (fixed)
  1187                           ;	Chosen strategy is simple_byte
  1188  0314  0833               	movf	??_main+1,w
  1189  0315  3A00               	xorlw	0	; case 0
  1190  0316  1903               	skipnz
  1191  0317  2B19               	goto	l3111
  1192  0318  2B39               	goto	l2965
  1193  0319                     l3111:
  1194                           
  1195                           ; Switch size 1, requested type "simple"
  1196                           ; Number of cases is 10, Range of values is 48 to 57
  1197                           ; switch strategies available:
  1198                           ; Name         Instructions Cycles
  1199                           ; simple_byte           31    16 (average)
  1200                           ; direct_byte           41    11 (fixed)
  1201                           ; jumptable            263     9 (fixed)
  1202                           ;	Chosen strategy is simple_byte
  1203  0319  0832               	movf	??_main,w
  1204  031A  3A30               	xorlw	48	; case 48
  1205  031B  1903               	skipnz
  1206  031C  2B03               	goto	l2959
  1207  031D  3A01               	xorlw	1	; case 49
  1208  031E  1903               	skipnz
  1209  031F  2A97               	goto	l2933
  1210  0320  3A03               	xorlw	3	; case 50
  1211  0321  1903               	skipnz
  1212  0322  2AAB               	goto	l375
  1213  0323  3A01               	xorlw	1	; case 51
  1214  0324  1903               	skipnz
  1215  0325  2AB6               	goto	l2941
  1216  0326  3A07               	xorlw	7	; case 52
  1217  0327  1903               	skipnz
  1218  0328  2AC1               	goto	l2943
  1219  0329  3A01               	xorlw	1	; case 53
  1220  032A  1903               	skipnz
  1221  032B  2ACC               	goto	l378
  1222  032C  3A03               	xorlw	3	; case 54
  1223  032D  1903               	skipnz
  1224  032E  2AD7               	goto	l2949
  1225  032F  3A01               	xorlw	1	; case 55
  1226  0330  1903               	skipnz
  1227  0331  2AE2               	goto	l2951
  1228  0332  3A0F               	xorlw	15	; case 56
  1229  0333  1903               	skipnz
  1230  0334  2AED               	goto	l381
  1231  0335  3A01               	xorlw	1	; case 57
  1232  0336  1903               	skipnz
  1233  0337  2AF8               	goto	l2957
  1234  0338  2B39               	goto	l2965
  1235  0339                     l2965:
  1236                           
  1237                           ;main.c: 667:         SEND_CMD(0x80+0);
  1238  0339  3080               	movlw	128
  1239  033A  120A  158A  26D2  120A  118A  	fcall	_SEND_CMD
  1240                           
  1241                           ;main.c: 669:         Car = Read_Byte_From_DS1307_RTC(2);
  1242  033F  3002               	movlw	2
  1243  0340  120A  158A  2789  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
  1244  0345  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0346  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0347  00B2               	movwf	??_main
  1247  0348  0832               	movf	??_main,w
  1248  0349  00FC               	movwf	main@Car
  1249                           
  1250                           ;main.c: 670:         SEND_CHAR(((Car>>4) & 0x0F)+0x30);
  1251  034A  087C               	movf	main@Car,w
  1252  034B  00B2               	movwf	??_main
  1253  034C  3004               	movlw	4
  1254  034D                     u1795:
  1255  034D  1003               	clrc
  1256  034E  0CB2               	rrf	??_main,f
  1257  034F  3EFF               	addlw	-1
  1258  0350  1D03               	skipz
  1259  0351  2B4D               	goto	u1795
  1260  0352  0832               	movf	??_main,w
  1261  0353  390F               	andlw	15
  1262  0354  3E30               	addlw	48
  1263  0355  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1264                           
  1265                           ;main.c: 671:         SEND_CHAR((Car & 0x0F) + 0x30);
  1266  035A  087C               	movf	main@Car,w
  1267  035B  390F               	andlw	15
  1268  035C  3E30               	addlw	48
  1269  035D  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1270                           
  1271                           ;main.c: 673:         SEND_CHAR(':');
  1272  0362  303A               	movlw	58
  1273  0363  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1274                           
  1275                           ;main.c: 675:         Car = Read_Byte_From_DS1307_RTC(1);
  1276  0368  3001               	movlw	1
  1277  0369  120A  158A  2789  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
  1278  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1279  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0370  00B2               	movwf	??_main
  1281  0371  0832               	movf	??_main,w
  1282  0372  00FC               	movwf	main@Car
  1283                           
  1284                           ;main.c: 676:         SEND_CHAR(((Car>>4) & 0x0F)+0x30);
  1285  0373  087C               	movf	main@Car,w
  1286  0374  00B2               	movwf	??_main
  1287  0375  3004               	movlw	4
  1288  0376                     u1805:
  1289  0376  1003               	clrc
  1290  0377  0CB2               	rrf	??_main,f
  1291  0378  3EFF               	addlw	-1
  1292  0379  1D03               	skipz
  1293  037A  2B76               	goto	u1805
  1294  037B  0832               	movf	??_main,w
  1295  037C  390F               	andlw	15
  1296  037D  3E30               	addlw	48
  1297  037E  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1298                           
  1299                           ;main.c: 677:         SEND_CHAR((Car & 0x0F) + 0x30);
  1300  0383  087C               	movf	main@Car,w
  1301  0384  390F               	andlw	15
  1302  0385  3E30               	addlw	48
  1303  0386  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1304                           
  1305                           ;main.c: 679:         SEND_CHAR(':');
  1306  038B  303A               	movlw	58
  1307  038C  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1308                           
  1309                           ;main.c: 681:         Car = Read_Byte_From_DS1307_RTC(0);
  1310  0391  3000               	movlw	0
  1311  0392  120A  158A  2789  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
  1312  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0399  00B2               	movwf	??_main
  1315  039A  0832               	movf	??_main,w
  1316  039B  00FC               	movwf	main@Car
  1317                           
  1318                           ;main.c: 682:         SEND_CHAR(((Car>>4) & 0x0F)+0x30);
  1319  039C  087C               	movf	main@Car,w
  1320  039D  00B2               	movwf	??_main
  1321  039E  3004               	movlw	4
  1322  039F                     u1815:
  1323  039F  1003               	clrc
  1324  03A0  0CB2               	rrf	??_main,f
  1325  03A1  3EFF               	addlw	-1
  1326  03A2  1D03               	skipz
  1327  03A3  2B9F               	goto	u1815
  1328  03A4  0832               	movf	??_main,w
  1329  03A5  390F               	andlw	15
  1330  03A6  3E30               	addlw	48
  1331  03A7  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1332                           
  1333                           ;main.c: 683:         SEND_CHAR((Car & 0x0F) + 0x30);
  1334  03AC  087C               	movf	main@Car,w
  1335  03AD  390F               	andlw	15
  1336  03AE  3E30               	addlw	48
  1337  03AF  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1338                           
  1339                           ;main.c: 685:         SEND_CMD(0xC0);
  1340  03B4  30C0               	movlw	192
  1341  03B5  120A  158A  26D2  120A  118A  	fcall	_SEND_CMD
  1342                           
  1343                           ;main.c: 687:         Car = Read_Byte_From_DS1307_RTC(4);
  1344  03BA  3004               	movlw	4
  1345  03BB  120A  158A  2789  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
  1346  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1347  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1348  03C2  00B2               	movwf	??_main
  1349  03C3  0832               	movf	??_main,w
  1350  03C4  00FC               	movwf	main@Car
  1351                           
  1352                           ;main.c: 688:         SEND_CHAR(((Car>>4) & 0x03)+0x30);
  1353  03C5  087C               	movf	main@Car,w
  1354  03C6  00B2               	movwf	??_main
  1355  03C7  3004               	movlw	4
  1356  03C8                     u1825:
  1357  03C8  1003               	clrc
  1358  03C9  0CB2               	rrf	??_main,f
  1359  03CA  3EFF               	addlw	-1
  1360  03CB  1D03               	skipz
  1361  03CC  2BC8               	goto	u1825
  1362  03CD  0832               	movf	??_main,w
  1363  03CE  3903               	andlw	3
  1364  03CF  3E30               	addlw	48
  1365  03D0  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1366                           
  1367                           ;main.c: 689:         SEND_CHAR((Car & 0x0F) + 0x30);
  1368  03D5  087C               	movf	main@Car,w
  1369  03D6  390F               	andlw	15
  1370  03D7  3E30               	addlw	48
  1371  03D8  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1372                           
  1373                           ;main.c: 691:         SEND_CHAR('/');
  1374  03DD  302F               	movlw	47
  1375  03DE  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1376                           
  1377                           ;main.c: 693:         Car = Read_Byte_From_DS1307_RTC(5);
  1378  03E3  3005               	movlw	5
  1379  03E4  120A  158A  2789  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
  1380  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1381  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1382  03EB  00B2               	movwf	??_main
  1383  03EC  0832               	movf	??_main,w
  1384  03ED  00FC               	movwf	main@Car
  1385  03EE                     l2967:
  1386                           
  1387                           ;main.c: 695:         deco_mes(0xC0+4,(Car));
  1388  03EE  087C               	movf	main@Car,w
  1389  03EF  00B2               	movwf	??_main
  1390  03F0  0832               	movf	??_main,w
  1391  03F1  00F8               	movwf	deco_mes@Car
  1392  03F2  30C4               	movlw	196
  1393  03F3  120A  118A  215B  120A  118A  	fcall	_deco_mes
  1394  03F8                     l2969:
  1395                           
  1396                           ;main.c: 696:         SEND_CHAR('/');
  1397  03F8  302F               	movlw	47
  1398  03F9  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1399  03FE                     l2971:
  1400                           
  1401                           ;main.c: 698:         Car = Read_Byte_From_DS1307_RTC(6);
  1402  03FE  3006               	movlw	6
  1403  03FF  120A  158A  2789  120A  118A  	fcall	_Read_Byte_From_DS1307_RTC
  1404  0404  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0405  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0406  00B2               	movwf	??_main
  1407  0407  0832               	movf	??_main,w
  1408  0408  00FC               	movwf	main@Car
  1409  0409                     l2973:
  1410                           
  1411                           ;main.c: 699:         SEND_CHAR(((Car >> 4) & 0x0F) + 0x30);
  1412  0409  087C               	movf	main@Car,w
  1413  040A  00B2               	movwf	??_main
  1414  040B  3004               	movlw	4
  1415  040C                     u1835:
  1416  040C  1003               	clrc
  1417  040D  0CB2               	rrf	??_main,f
  1418  040E  3EFF               	addlw	-1
  1419  040F  1D03               	skipz
  1420  0410  2C0C               	goto	u1835
  1421  0411  0832               	movf	??_main,w
  1422  0412  390F               	andlw	15
  1423  0413  3E30               	addlw	48
  1424  0414  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1425  0419                     l2975:
  1426                           
  1427                           ;main.c: 700:         SEND_CHAR((Car & 0x0F) + 0x30);
  1428  0419  087C               	movf	main@Car,w
  1429  041A  390F               	andlw	15
  1430  041B  3E30               	addlw	48
  1431  041C  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1432  0421                     l2977:
  1433                           
  1434                           ;main.c: 703:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1435  0421  3006               	movlw	6
  1436  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0423  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0424  00B4               	movwf	??_main+2
  1439  0425  3013               	movlw	19
  1440  0426  00B3               	movwf	??_main+1
  1441  0427  30AD               	movlw	173
  1442  0428  00B2               	movwf	??_main
  1443  0429                     u1947:
  1444  0429  0BB2               	decfsz	??_main,f
  1445  042A  2C29               	goto	u1947
  1446  042B  0BB3               	decfsz	??_main+1,f
  1447  042C  2C29               	goto	u1947
  1448  042D  0BB4               	decfsz	??_main+2,f
  1449  042E  2C29               	goto	u1947
  1450  042F  2A82               	goto	l2925
  1451  0430  120A  118A  2800   	ljmp	start
  1452  0433                     __end_of_main:
  1453                           
  1454                           	psect	text1
  1455  0EE5                     __ptext1:	
  1456 ;; *************** function _anti_r *****************
  1457 ;; Defined at:
  1458 ;;		line 579 in file "main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  Car             1    1[COMMON] unsigned char 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       0       0       0       0
  1473 ;;      Locals:         1       0       0       0       0
  1474 ;;      Temps:          1       0       0       0       0
  1475 ;;      Totals:         2       0       0       0       0
  1476 ;;Total ram usage:        2 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; This function calls:
  1479 ;;		Nothing
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           
  1486                           ;psect for function _anti_r
  1487  0EE5                     _anti_r:
  1488  0EE5                     l1619:	
  1489                           ;incstack = 0
  1490                           ; Regs used in _anti_r: [wreg+status,2+status,0]
  1491                           
  1492                           
  1493                           ;main.c: 580:     char Car;;main.c: 581:     while (Car != 'r') {
  1494  0EE5  2EF1               	goto	l1625
  1495  0EE6                     l354:
  1496                           
  1497                           ;main.c: 582:         if (PIR1bits.RCIF == 1) {
  1498  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0EE8  1E8C               	btfss	12,5	;volatile
  1501  0EE9  2EEB               	goto	u591
  1502  0EEA  2EEC               	goto	u590
  1503  0EEB                     u591:
  1504  0EEB  2EF1               	goto	l1625
  1505  0EEC                     u590:
  1506  0EEC                     l1621:
  1507                           
  1508                           ;main.c: 584:             Car = RCREG;
  1509  0EEC  081A               	movf	26,w	;volatile
  1510  0EED  00F0               	movwf	??_anti_r
  1511  0EEE  0870               	movf	??_anti_r,w
  1512  0EEF  00F1               	movwf	anti_r@Car
  1513  0EF0                     l1623:
  1514                           
  1515                           ;main.c: 585:             PIR1bits.RCIF = 0;
  1516  0EF0  128C               	bcf	12,5	;volatile
  1517  0EF1                     l1625:
  1518                           
  1519                           ;main.c: 581:     while (Car != 'r') {
  1520  0EF1  3072               	movlw	114
  1521  0EF2  0671               	xorwf	anti_r@Car,w
  1522  0EF3  1D03               	btfss	3,2
  1523  0EF4  2EF6               	goto	u601
  1524  0EF5  2EF7               	goto	u600
  1525  0EF6                     u601:
  1526  0EF6  2EE6               	goto	l354
  1527  0EF7                     u600:
  1528  0EF7                     l357:
  1529  0EF7  0008               	return
  1530  0EF8                     __end_of_anti_r:
  1531                           
  1532                           	psect	text2
  1533  0EC1                     __ptext2:	
  1534 ;; *************** function _UART_Init *****************
  1535 ;; Defined at:
  1536 ;;		line 72 in file "main.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _UART_Init
  1565  0EC1                     _UART_Init:
  1566  0EC1                     l1391:	
  1567                           ;incstack = 0
  1568                           ; Regs used in _UART_Init: [wreg]
  1569                           
  1570                           
  1571                           ;main.c: 74:     TXSTA = 0x26;
  1572  0EC1  3026               	movlw	38
  1573  0EC2  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0EC3  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0EC4  0098               	movwf	24	;volatile
  1576                           
  1577                           ;main.c: 75:     RCSTA = 0x90;
  1578  0EC5  3090               	movlw	144
  1579  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0EC8  0098               	movwf	24	;volatile
  1582                           
  1583                           ;main.c: 76:     SPBRG = 25;
  1584  0EC9  3019               	movlw	25
  1585  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  1586  0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  1587  0ECC  0099               	movwf	25	;volatile
  1588  0ECD                     l1393:
  1589                           
  1590                           ;main.c: 77:     PIR1bits.TXIF = 0;
  1591  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0ECF  120C               	bcf	12,4	;volatile
  1594  0ED0                     l1395:
  1595                           
  1596                           ;main.c: 78:     PIR1bits.RCIF = 0;
  1597  0ED0  128C               	bcf	12,5	;volatile
  1598  0ED1                     l174:
  1599  0ED1  0008               	return
  1600  0ED2                     __end_of_UART_Init:
  1601                           
  1602                           	psect	text3
  1603  0433                     __ptext3:	
  1604 ;; *************** function _RecibeALARMAS *****************
  1605 ;; Defined at:
  1606 ;;		line 291 in file "main.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  addr            1    wreg     unsigned char 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  addr            1   16[BANK0 ] unsigned char 
  1611 ;;  Datos          10    6[BANK0 ] unsigned char [10]
  1612 ;;  Car             1   17[BANK0 ] unsigned char 
  1613 ;;  ctr             1    5[BANK0 ] unsigned char 
  1614 ;;  aux1            1    4[BANK0 ] unsigned char 
  1615 ;;  aux2            1    3[BANK0 ] unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1625 ;;      Params:         0       0       0       0       0
  1626 ;;      Locals:         0      15       0       0       0
  1627 ;;      Temps:          0       3       0       0       0
  1628 ;;      Totals:         0      18       0       0       0
  1629 ;;Total ram usage:       18 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 3
  1632 ;; This function calls:
  1633 ;;		_Deco_num
  1634 ;;		_ESCRIBA_SEE
  1635 ;;		_SEND_CHAR
  1636 ;;		_SEND_CMD
  1637 ;;		_SEND_MSJ
  1638 ;;		_TECLADO
  1639 ;;		___awdiv
  1640 ;;		___bmul
  1641 ;;		_deco_mes
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _RecibeALARMAS
  1649  0433                     _RecibeALARMAS:
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _RecibeALARMAS: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1653                           ;RecibeALARMAS@addr stored from wreg
  1654  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0435  00B0               	movwf	RecibeALARMAS@addr
  1657  0436                     l2459:
  1658                           
  1659                           ;main.c: 292:     char Car, Datos[10], aux1, aux2,ctr;;main.c: 293:     SEND_CMD(0x01);
  1660  0436  3001               	movlw	1
  1661  0437  120A  158A  26D2  120A  118A  	fcall	_SEND_CMD
  1662  043C                     l2461:
  1663                           
  1664                           ;main.c: 295:     SEND_MSJ(0x80, "Escriba alarma ");
  1665  043C  307B               	movlw	low (STR_15| (0+32768))
  1666  043D  00F3               	movwf	SEND_MSJ@Msj
  1667  043E  3088               	movlw	high (STR_15| (0+32768))
  1668  043F  00F4               	movwf	SEND_MSJ@Msj+1
  1669  0440  3080               	movlw	128
  1670  0441  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  1671  0446                     l2463:
  1672                           
  1673                           ;main.c: 296:     aux1 = addr / 10;
  1674  0446  300A               	movlw	10
  1675  0447  00F0               	movwf	___awdiv@divisor
  1676  0448  3000               	movlw	0
  1677  0449  00F1               	movwf	___awdiv@divisor+1
  1678  044A  1283               	bcf	3,5	;RP0=0, select bank0
  1679  044B  1303               	bcf	3,6	;RP1=0, select bank0
  1680  044C  0830               	movf	RecibeALARMAS@addr,w
  1681  044D  00A0               	movwf	??_RecibeALARMAS
  1682  044E  01A1               	clrf	??_RecibeALARMAS+1
  1683  044F  0820               	movf	??_RecibeALARMAS,w
  1684  0450  00F2               	movwf	___awdiv@dividend
  1685  0451  0821               	movf	??_RecibeALARMAS+1,w
  1686  0452  00F3               	movwf	___awdiv@dividend+1
  1687  0453  120A  118A  2035  120A  118A  	fcall	___awdiv
  1688  0458  0870               	movf	?___awdiv,w
  1689  0459  1283               	bcf	3,5	;RP0=0, select bank0
  1690  045A  1303               	bcf	3,6	;RP1=0, select bank0
  1691  045B  00A2               	movwf	??_RecibeALARMAS+2
  1692  045C  0822               	movf	??_RecibeALARMAS+2,w
  1693  045D  00A4               	movwf	RecibeALARMAS@aux1
  1694  045E                     l2465:
  1695                           
  1696                           ;main.c: 297:     aux2 = aux1 * 10 - addr;
  1697  045E  300A               	movlw	10
  1698  045F  00A0               	movwf	??_RecibeALARMAS
  1699  0460  0820               	movf	??_RecibeALARMAS,w
  1700  0461  00F0               	movwf	___bmul@multiplicand
  1701  0462  0824               	movf	RecibeALARMAS@aux1,w
  1702  0463  120A  158A  26F8  120A  118A  	fcall	___bmul
  1703  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0469  1303               	bcf	3,6	;RP1=0, select bank0
  1705  046A  00A1               	movwf	??_RecibeALARMAS+1
  1706  046B  0830               	movf	RecibeALARMAS@addr,w
  1707  046C  0221               	subwf	??_RecibeALARMAS+1,w
  1708  046D  00A2               	movwf	??_RecibeALARMAS+2
  1709  046E  0822               	movf	??_RecibeALARMAS+2,w
  1710  046F  00A3               	movwf	RecibeALARMAS@aux2
  1711  0470                     l2467:
  1712                           
  1713                           ;main.c: 298:     SEND_CHAR(Deco_num(aux1));
  1714  0470  0824               	movf	RecibeALARMAS@aux1,w
  1715  0471  120A  158A  27BF  120A  118A  	fcall	_Deco_num
  1716  0476  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1717  047B                     l2469:
  1718                           
  1719                           ;main.c: 299:     SEND_CHAR(Deco_num(aux2));
  1720  047B  1283               	bcf	3,5	;RP0=0, select bank0
  1721  047C  1303               	bcf	3,6	;RP1=0, select bank0
  1722  047D  0823               	movf	RecibeALARMAS@aux2,w
  1723  047E  120A  158A  27BF  120A  118A  	fcall	_Deco_num
  1724  0483  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1725  0488                     l2471:
  1726                           
  1727                           ;main.c: 300:     SEND_MSJ(0xC0, "AA/MM/DD HH:MM");
  1728  0488  308B               	movlw	low (STR_16| (0+32768))
  1729  0489  00F3               	movwf	SEND_MSJ@Msj
  1730  048A  3088               	movlw	high (STR_16| (0+32768))
  1731  048B  00F4               	movwf	SEND_MSJ@Msj+1
  1732  048C  30C0               	movlw	192
  1733  048D  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  1734  0492                     l2473:
  1735                           
  1736                           ;main.c: 301:     SEND_MSJ(0x80+20, "*=on #=off ");
  1737  0492  30A9               	movlw	low (STR_17| (0+32768))
  1738  0493  00F3               	movwf	SEND_MSJ@Msj
  1739  0494  3088               	movlw	high (STR_17| (0+32768))
  1740  0495  00F4               	movwf	SEND_MSJ@Msj+1
  1741  0496  3094               	movlw	148
  1742  0497  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  1743  049C                     l2475:
  1744                           
  1745                           ;main.c: 302:     SEND_CHAR('a');
  1746  049C  3061               	movlw	97
  1747  049D  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  1748  04A2                     l2477:
  1749                           
  1750                           ;main.c: 303:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1751  04A2  300B               	movlw	11
  1752  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1753  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1754  04A5  00A2               	movwf	??_RecibeALARMAS+2
  1755  04A6  3026               	movlw	38
  1756  04A7  00A1               	movwf	??_RecibeALARMAS+1
  1757  04A8  305D               	movlw	93
  1758  04A9  00A0               	movwf	??_RecibeALARMAS
  1759  04AA                     u1957:
  1760  04AA  0BA0               	decfsz	??_RecibeALARMAS,f
  1761  04AB  2CAA               	goto	u1957
  1762  04AC  0BA1               	decfsz	??_RecibeALARMAS+1,f
  1763  04AD  2CAA               	goto	u1957
  1764  04AE  0BA2               	decfsz	??_RecibeALARMAS+2,f
  1765  04AF  2CAA               	goto	u1957
  1766  04B0                     l2479:
  1767                           
  1768                           ;main.c: 304:     SEND_CMD(1);
  1769  04B0  3001               	movlw	1
  1770  04B1  120A  158A  26D2  120A  118A  	fcall	_SEND_CMD
  1771  04B6                     l2481:
  1772                           
  1773                           ;main.c: 306:     Car = TECLADO();
  1774  04B6  120A  118A  209C  120A  118A  	fcall	_TECLADO
  1775  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  1776  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  1777  04BD  00A0               	movwf	??_RecibeALARMAS
  1778  04BE  0820               	movf	??_RecibeALARMAS,w
  1779  04BF  00B1               	movwf	RecibeALARMAS@Car
  1780                           
  1781                           ;main.c: 307:     while (Car == 0){
  1782  04C0  2CD5               	goto	l2487
  1783  04C1                     l2483:
  1784                           
  1785                           ;main.c: 308:         Car = TECLADO();
  1786  04C1  120A  118A  209C  120A  118A  	fcall	_TECLADO
  1787  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  1788  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  1789  04C8  00A0               	movwf	??_RecibeALARMAS
  1790  04C9  0820               	movf	??_RecibeALARMAS,w
  1791  04CA  00B1               	movwf	RecibeALARMAS@Car
  1792  04CB                     l2485:
  1793                           
  1794                           ;main.c: 309:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1795  04CB  300D               	movlw	13
  1796  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1797  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1798  04CE  00A1               	movwf	??_RecibeALARMAS+1
  1799  04CF  30FB               	movlw	251
  1800  04D0  00A0               	movwf	??_RecibeALARMAS
  1801  04D1                     u1967:
  1802  04D1  0BA0               	decfsz	??_RecibeALARMAS,f
  1803  04D2  2CD1               	goto	u1967
  1804  04D3  0BA1               	decfsz	??_RecibeALARMAS+1,f
  1805  04D4  2CD1               	goto	u1967
  1806  04D5                     l2487:
  1807                           
  1808                           ;main.c: 307:     while (Car == 0){
  1809  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1810  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1811  04D7  0831               	movf	RecibeALARMAS@Car,w
  1812  04D8  1903               	btfsc	3,2
  1813  04D9  2CDB               	goto	u1321
  1814  04DA  2CDC               	goto	u1320
  1815  04DB                     u1321:
  1816  04DB  2CC1               	goto	l2483
  1817  04DC                     u1320:
  1818  04DC                     l2489:
  1819                           
  1820                           ;main.c: 311:     Datos[9] = Car;
  1821  04DC  0831               	movf	RecibeALARMAS@Car,w
  1822  04DD  00A0               	movwf	??_RecibeALARMAS
  1823  04DE  0820               	movf	??_RecibeALARMAS,w
  1824  04DF  00AF               	movwf	RecibeALARMAS@Datos+9
  1825  04E0                     l2491:
  1826                           
  1827                           ;main.c: 312:     Car = TECLADO();
  1828  04E0  120A  118A  209C  120A  118A  	fcall	_TECLADO
  1829  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1830  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1831  04E7  00A0               	movwf	??_RecibeALARMAS
  1832  04E8  0820               	movf	??_RecibeALARMAS,w
  1833  04E9  00B1               	movwf	RecibeALARMAS@Car
  1834                           
  1835                           ;main.c: 313:     while (Car == 0){
  1836  04EA  2CFF               	goto	l2497
  1837  04EB                     l2493:
  1838                           
  1839                           ;main.c: 314:         Car = TECLADO();
  1840  04EB  120A  118A  209C  120A  118A  	fcall	_TECLADO
  1841  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  1842  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  1843  04F2  00A0               	movwf	??_RecibeALARMAS
  1844  04F3  0820               	movf	??_RecibeALARMAS,w
  1845  04F4  00B1               	movwf	RecibeALARMAS@Car
  1846  04F5                     l2495:
  1847                           
  1848                           ;main.c: 315:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1849  04F5  300D               	movlw	13
  1850  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1851  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1852  04F8  00A1               	movwf	??_RecibeALARMAS+1
  1853  04F9  30FB               	movlw	251
  1854  04FA  00A0               	movwf	??_RecibeALARMAS
  1855  04FB                     u1977:
  1856  04FB  0BA0               	decfsz	??_RecibeALARMAS,f
  1857  04FC  2CFB               	goto	u1977
  1858  04FD  0BA1               	decfsz	??_RecibeALARMAS+1,f
  1859  04FE  2CFB               	goto	u1977
  1860  04FF                     l2497:
  1861                           
  1862                           ;main.c: 313:     while (Car == 0){
  1863  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0500  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0501  0831               	movf	RecibeALARMAS@Car,w
  1866  0502  1903               	btfsc	3,2
  1867  0503  2D05               	goto	u1331
  1868  0504  2D06               	goto	u1330
  1869  0505                     u1331:
  1870  0505  2CEB               	goto	l2493
  1871  0506                     u1330:
  1872  0506                     l2499:
  1873                           
  1874                           ;main.c: 317:     Datos[8] = Car;
  1875  0506  0831               	movf	RecibeALARMAS@Car,w
  1876  0507  00A0               	movwf	??_RecibeALARMAS
  1877  0508  0820               	movf	??_RecibeALARMAS,w
  1878  0509  00AE               	movwf	RecibeALARMAS@Datos+8
  1879  050A                     l2501:
  1880                           
  1881                           ;main.c: 319:     Car = TECLADO();
  1882  050A  120A  118A  209C  120A  118A  	fcall	_TECLADO
  1883  050F  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0510  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0511  00A0               	movwf	??_RecibeALARMAS
  1886  0512  0820               	movf	??_RecibeALARMAS,w
  1887  0513  00B1               	movwf	RecibeALARMAS@Car
  1888                           
  1889                           ;main.c: 320:     while (Car == 0){
  1890  0514  2D29               	goto	l2507
  1891  0515                     l2503:
  1892                           
  1893                           ;main.c: 321:         Car = TECLADO();
  1894  0515  120A  118A  209C  120A  118A  	fcall	_TECLADO
  1895  051A  1283               	bcf	3,5	;RP0=0, select bank0
  1896  051B  1303               	bcf	3,6	;RP1=0, select bank0
  1897  051C  00A0               	movwf	??_RecibeALARMAS
  1898  051D  0820               	movf	??_RecibeALARMAS,w
  1899  051E  00B1               	movwf	RecibeALARMAS@Car
  1900  051F                     l2505:
  1901                           
  1902                           ;main.c: 322:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1903  051F  300D               	movlw	13
  1904  0520  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0521  1303               	bcf	3,6	;RP1=0, select bank0
  1906  0522  00A1               	movwf	??_RecibeALARMAS+1
  1907  0523  30FB               	movlw	251
  1908  0524  00A0               	movwf	??_RecibeALARMAS
  1909  0525                     u1987:
  1910  0525  0BA0               	decfsz	??_RecibeALARMAS,f
  1911  0526  2D25               	goto	u1987
  1912  0527  0BA1               	decfsz	??_RecibeALARMAS+1,f
  1913  0528  2D25               	goto	u1987
  1914  0529                     l2507:
  1915                           
  1916                           ;main.c: 320:     while (Car == 0){
  1917  0529  1283               	bcf	3,5	;RP0=0, select bank0
  1918  052A  1303               	bcf	3,6	;RP1=0, select bank0
  1919  052B  0831               	movf	RecibeALARMAS@Car,w
  1920  052C  1903               	btfsc	3,2
  1921  052D  2D2F               	goto	u1341
  1922  052E  2D30               	goto	u1340
  1923  052F                     u1341:
  1924  052F  2D15               	goto	l2503
  1925  0530                     u1340:
  1926  0530                     l2509:
  1927                           
  1928                           ;main.c: 324:     Datos[7] = Car;
  1929  0530  0831               	movf	RecibeALARMAS@Car,w
  1930  0531  00A0               	movwf	??_RecibeALARMAS
  1931  0532  0820               	movf	??_RecibeALARMAS,w
  1932  0533  00AD               	movwf	RecibeALARMAS@Datos+7
  1933  0534                     l2511:
  1934                           
  1935                           ;main.c: 325:     Car = TECLADO();
  1936  0534  120A  118A  209C  120A  118A  	fcall	_TECLADO
  1937  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1938  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1939  053B  00A0               	movwf	??_RecibeALARMAS
  1940  053C  0820               	movf	??_RecibeALARMAS,w
  1941  053D  00B1               	movwf	RecibeALARMAS@Car
  1942                           
  1943                           ;main.c: 326:     while (Car == 0){
  1944  053E  2D53               	goto	l2517
  1945  053F                     l2513:
  1946                           
  1947                           ;main.c: 327:         Car = TECLADO();
  1948  053F  120A  118A  209C  120A  118A  	fcall	_TECLADO
  1949  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0546  00A0               	movwf	??_RecibeALARMAS
  1952  0547  0820               	movf	??_RecibeALARMAS,w
  1953  0548  00B1               	movwf	RecibeALARMAS@Car
  1954  0549                     l2515:
  1955                           
  1956                           ;main.c: 328:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1957  0549  300D               	movlw	13
  1958  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1959  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1960  054C  00A1               	movwf	??_RecibeALARMAS+1
  1961  054D  30FB               	movlw	251
  1962  054E  00A0               	movwf	??_RecibeALARMAS
  1963  054F                     u1997:
  1964  054F  0BA0               	decfsz	??_RecibeALARMAS,f
  1965  0550  2D4F               	goto	u1997
  1966  0551  0BA1               	decfsz	??_RecibeALARMAS+1,f
  1967  0552  2D4F               	goto	u1997
  1968  0553                     l2517:
  1969                           
  1970                           ;main.c: 326:     while (Car == 0){
  1971  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0555  0831               	movf	RecibeALARMAS@Car,w
  1974  0556  1903               	btfsc	3,2
  1975  0557  2D59               	goto	u1351
  1976  0558  2D5A               	goto	u1350
  1977  0559                     u1351:
  1978  0559  2D3F               	goto	l2513
  1979  055A                     u1350:
  1980  055A                     l2519:
  1981                           
  1982                           ;main.c: 330:     Datos[6] = Car;
  1983  055A  0831               	movf	RecibeALARMAS@Car,w
  1984  055B  00A0               	movwf	??_RecibeALARMAS
  1985  055C  0820               	movf	??_RecibeALARMAS,w
  1986  055D  00AC               	movwf	RecibeALARMAS@Datos+6
  1987  055E                     l2521:
  1988                           
  1989                           ;main.c: 332:     Car = TECLADO();
  1990  055E  120A  118A  209C  120A  118A  	fcall	_TECLADO
  1991  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0565  00A0               	movwf	??_RecibeALARMAS
  1994  0566  0820               	movf	??_RecibeALARMAS,w
  1995  0567  00B1               	movwf	RecibeALARMAS@Car
  1996                           
  1997                           ;main.c: 333:     while (Car == 0){
  1998  0568  2D7D               	goto	l2527
  1999  0569                     l2523:
  2000                           
  2001                           ;main.c: 334:         Car = TECLADO();
  2002  0569  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2003  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2004  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2005  0570  00A0               	movwf	??_RecibeALARMAS
  2006  0571  0820               	movf	??_RecibeALARMAS,w
  2007  0572  00B1               	movwf	RecibeALARMAS@Car
  2008  0573                     l2525:
  2009                           
  2010                           ;main.c: 335:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2011  0573  300D               	movlw	13
  2012  0574  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0575  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0576  00A1               	movwf	??_RecibeALARMAS+1
  2015  0577  30FB               	movlw	251
  2016  0578  00A0               	movwf	??_RecibeALARMAS
  2017  0579                     u2007:
  2018  0579  0BA0               	decfsz	??_RecibeALARMAS,f
  2019  057A  2D79               	goto	u2007
  2020  057B  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2021  057C  2D79               	goto	u2007
  2022  057D                     l2527:
  2023                           
  2024                           ;main.c: 333:     while (Car == 0){
  2025  057D  1283               	bcf	3,5	;RP0=0, select bank0
  2026  057E  1303               	bcf	3,6	;RP1=0, select bank0
  2027  057F  0831               	movf	RecibeALARMAS@Car,w
  2028  0580  1903               	btfsc	3,2
  2029  0581  2D83               	goto	u1361
  2030  0582  2D84               	goto	u1360
  2031  0583                     u1361:
  2032  0583  2D69               	goto	l2523
  2033  0584                     u1360:
  2034  0584                     l2529:
  2035                           
  2036                           ;main.c: 337:     Datos[5] = Car;
  2037  0584  0831               	movf	RecibeALARMAS@Car,w
  2038  0585  00A0               	movwf	??_RecibeALARMAS
  2039  0586  0820               	movf	??_RecibeALARMAS,w
  2040  0587  00AB               	movwf	RecibeALARMAS@Datos+5
  2041  0588                     l2531:
  2042                           
  2043                           ;main.c: 338:     Car = TECLADO();
  2044  0588  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2045  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2046  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2047  058F  00A0               	movwf	??_RecibeALARMAS
  2048  0590  0820               	movf	??_RecibeALARMAS,w
  2049  0591  00B1               	movwf	RecibeALARMAS@Car
  2050                           
  2051                           ;main.c: 339:     while (Car == 0){
  2052  0592  2DA7               	goto	l2537
  2053  0593                     l2533:
  2054                           
  2055                           ;main.c: 340:         Car = TECLADO();
  2056  0593  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2057  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2059  059A  00A0               	movwf	??_RecibeALARMAS
  2060  059B  0820               	movf	??_RecibeALARMAS,w
  2061  059C  00B1               	movwf	RecibeALARMAS@Car
  2062  059D                     l2535:
  2063                           
  2064                           ;main.c: 341:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2065  059D  300D               	movlw	13
  2066  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2067  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2068  05A0  00A1               	movwf	??_RecibeALARMAS+1
  2069  05A1  30FB               	movlw	251
  2070  05A2  00A0               	movwf	??_RecibeALARMAS
  2071  05A3                     u2017:
  2072  05A3  0BA0               	decfsz	??_RecibeALARMAS,f
  2073  05A4  2DA3               	goto	u2017
  2074  05A5  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2075  05A6  2DA3               	goto	u2017
  2076  05A7                     l2537:
  2077                           
  2078                           ;main.c: 339:     while (Car == 0){
  2079  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  2080  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  2081  05A9  0831               	movf	RecibeALARMAS@Car,w
  2082  05AA  1903               	btfsc	3,2
  2083  05AB  2DAD               	goto	u1371
  2084  05AC  2DAE               	goto	u1370
  2085  05AD                     u1371:
  2086  05AD  2D93               	goto	l2533
  2087  05AE                     u1370:
  2088  05AE                     l2539:
  2089                           
  2090                           ;main.c: 343:     Datos[4] = Car;
  2091  05AE  0831               	movf	RecibeALARMAS@Car,w
  2092  05AF  00A0               	movwf	??_RecibeALARMAS
  2093  05B0  0820               	movf	??_RecibeALARMAS,w
  2094  05B1  00AA               	movwf	RecibeALARMAS@Datos+4
  2095  05B2                     l2541:
  2096                           
  2097                           ;main.c: 345:     Car = TECLADO();
  2098  05B2  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2099  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  2100  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  2101  05B9  00A0               	movwf	??_RecibeALARMAS
  2102  05BA  0820               	movf	??_RecibeALARMAS,w
  2103  05BB  00B1               	movwf	RecibeALARMAS@Car
  2104                           
  2105                           ;main.c: 346:     while (Car == 0){
  2106  05BC  2DD1               	goto	l2547
  2107  05BD                     l2543:
  2108                           
  2109                           ;main.c: 347:         Car = TECLADO();
  2110  05BD  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2111  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2112  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2113  05C4  00A0               	movwf	??_RecibeALARMAS
  2114  05C5  0820               	movf	??_RecibeALARMAS,w
  2115  05C6  00B1               	movwf	RecibeALARMAS@Car
  2116  05C7                     l2545:
  2117                           
  2118                           ;main.c: 348:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2119  05C7  300D               	movlw	13
  2120  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2121  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2122  05CA  00A1               	movwf	??_RecibeALARMAS+1
  2123  05CB  30FB               	movlw	251
  2124  05CC  00A0               	movwf	??_RecibeALARMAS
  2125  05CD                     u2027:
  2126  05CD  0BA0               	decfsz	??_RecibeALARMAS,f
  2127  05CE  2DCD               	goto	u2027
  2128  05CF  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2129  05D0  2DCD               	goto	u2027
  2130  05D1                     l2547:
  2131                           
  2132                           ;main.c: 346:     while (Car == 0){
  2133  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2134  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2135  05D3  0831               	movf	RecibeALARMAS@Car,w
  2136  05D4  1903               	btfsc	3,2
  2137  05D5  2DD7               	goto	u1381
  2138  05D6  2DD8               	goto	u1380
  2139  05D7                     u1381:
  2140  05D7  2DBD               	goto	l2543
  2141  05D8                     u1380:
  2142  05D8                     l2549:
  2143                           
  2144                           ;main.c: 350:     Datos[3] = Car;
  2145  05D8  0831               	movf	RecibeALARMAS@Car,w
  2146  05D9  00A0               	movwf	??_RecibeALARMAS
  2147  05DA  0820               	movf	??_RecibeALARMAS,w
  2148  05DB  00A9               	movwf	RecibeALARMAS@Datos+3
  2149  05DC                     l2551:
  2150                           
  2151                           ;main.c: 351:     Car = TECLADO();
  2152  05DC  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2153  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  2154  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  2155  05E3  00A0               	movwf	??_RecibeALARMAS
  2156  05E4  0820               	movf	??_RecibeALARMAS,w
  2157  05E5  00B1               	movwf	RecibeALARMAS@Car
  2158                           
  2159                           ;main.c: 352:     while (Car == 0){
  2160  05E6  2DFB               	goto	l2557
  2161  05E7                     l2553:
  2162                           
  2163                           ;main.c: 353:         Car = TECLADO();
  2164  05E7  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2165  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  2166  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  2167  05EE  00A0               	movwf	??_RecibeALARMAS
  2168  05EF  0820               	movf	??_RecibeALARMAS,w
  2169  05F0  00B1               	movwf	RecibeALARMAS@Car
  2170  05F1                     l2555:
  2171                           
  2172                           ;main.c: 354:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2173  05F1  300D               	movlw	13
  2174  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2175  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2176  05F4  00A1               	movwf	??_RecibeALARMAS+1
  2177  05F5  30FB               	movlw	251
  2178  05F6  00A0               	movwf	??_RecibeALARMAS
  2179  05F7                     u2037:
  2180  05F7  0BA0               	decfsz	??_RecibeALARMAS,f
  2181  05F8  2DF7               	goto	u2037
  2182  05F9  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2183  05FA  2DF7               	goto	u2037
  2184  05FB                     l2557:
  2185                           
  2186                           ;main.c: 352:     while (Car == 0){
  2187  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  2188  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  2189  05FD  0831               	movf	RecibeALARMAS@Car,w
  2190  05FE  1903               	btfsc	3,2
  2191  05FF  2E01               	goto	u1391
  2192  0600  2E02               	goto	u1390
  2193  0601                     u1391:
  2194  0601  2DE7               	goto	l2553
  2195  0602                     u1390:
  2196  0602                     l2559:
  2197                           
  2198                           ;main.c: 356:     Datos[2] = Car;
  2199  0602  0831               	movf	RecibeALARMAS@Car,w
  2200  0603  00A0               	movwf	??_RecibeALARMAS
  2201  0604  0820               	movf	??_RecibeALARMAS,w
  2202  0605  00A8               	movwf	RecibeALARMAS@Datos+2
  2203  0606                     l2561:
  2204                           
  2205                           ;main.c: 358:     Car = TECLADO();
  2206  0606  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2207  060B  1283               	bcf	3,5	;RP0=0, select bank0
  2208  060C  1303               	bcf	3,6	;RP1=0, select bank0
  2209  060D  00A0               	movwf	??_RecibeALARMAS
  2210  060E  0820               	movf	??_RecibeALARMAS,w
  2211  060F  00B1               	movwf	RecibeALARMAS@Car
  2212                           
  2213                           ;main.c: 359:     while (Car == 0){
  2214  0610  2E25               	goto	l2567
  2215  0611                     l2563:
  2216                           
  2217                           ;main.c: 360:         Car = TECLADO();
  2218  0611  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2219  0616  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0617  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0618  00A0               	movwf	??_RecibeALARMAS
  2222  0619  0820               	movf	??_RecibeALARMAS,w
  2223  061A  00B1               	movwf	RecibeALARMAS@Car
  2224  061B                     l2565:
  2225                           
  2226                           ;main.c: 361:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2227  061B  300D               	movlw	13
  2228  061C  1283               	bcf	3,5	;RP0=0, select bank0
  2229  061D  1303               	bcf	3,6	;RP1=0, select bank0
  2230  061E  00A1               	movwf	??_RecibeALARMAS+1
  2231  061F  30FB               	movlw	251
  2232  0620  00A0               	movwf	??_RecibeALARMAS
  2233  0621                     u2047:
  2234  0621  0BA0               	decfsz	??_RecibeALARMAS,f
  2235  0622  2E21               	goto	u2047
  2236  0623  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2237  0624  2E21               	goto	u2047
  2238  0625                     l2567:
  2239                           
  2240                           ;main.c: 359:     while (Car == 0){
  2241  0625  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0626  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0627  0831               	movf	RecibeALARMAS@Car,w
  2244  0628  1903               	btfsc	3,2
  2245  0629  2E2B               	goto	u1401
  2246  062A  2E2C               	goto	u1400
  2247  062B                     u1401:
  2248  062B  2E11               	goto	l2563
  2249  062C                     u1400:
  2250  062C                     l2569:
  2251                           
  2252                           ;main.c: 363:     Datos[1] = Car;
  2253  062C  0831               	movf	RecibeALARMAS@Car,w
  2254  062D  00A0               	movwf	??_RecibeALARMAS
  2255  062E  0820               	movf	??_RecibeALARMAS,w
  2256  062F  00A7               	movwf	RecibeALARMAS@Datos+1
  2257  0630                     l2571:
  2258                           
  2259                           ;main.c: 364:     Car = TECLADO();
  2260  0630  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2261  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0637  00A0               	movwf	??_RecibeALARMAS
  2264  0638  0820               	movf	??_RecibeALARMAS,w
  2265  0639  00B1               	movwf	RecibeALARMAS@Car
  2266                           
  2267                           ;main.c: 365:     while (Car == 0){
  2268  063A  2E4F               	goto	l2577
  2269  063B                     l2573:
  2270                           
  2271                           ;main.c: 366:         Car = TECLADO();
  2272  063B  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2273  0640  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0641  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0642  00A0               	movwf	??_RecibeALARMAS
  2276  0643  0820               	movf	??_RecibeALARMAS,w
  2277  0644  00B1               	movwf	RecibeALARMAS@Car
  2278  0645                     l2575:
  2279                           
  2280                           ;main.c: 367:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2281  0645  300D               	movlw	13
  2282  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0648  00A1               	movwf	??_RecibeALARMAS+1
  2285  0649  30FB               	movlw	251
  2286  064A  00A0               	movwf	??_RecibeALARMAS
  2287  064B                     u2057:
  2288  064B  0BA0               	decfsz	??_RecibeALARMAS,f
  2289  064C  2E4B               	goto	u2057
  2290  064D  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2291  064E  2E4B               	goto	u2057
  2292  064F                     l2577:
  2293                           
  2294                           ;main.c: 365:     while (Car == 0){
  2295  064F  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0650  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0651  0831               	movf	RecibeALARMAS@Car,w
  2298  0652  1903               	btfsc	3,2
  2299  0653  2E55               	goto	u1411
  2300  0654  2E56               	goto	u1410
  2301  0655                     u1411:
  2302  0655  2E3B               	goto	l2573
  2303  0656                     u1410:
  2304  0656                     l2579:
  2305                           
  2306                           ;main.c: 369:     Datos[0] = Car;
  2307  0656  0831               	movf	RecibeALARMAS@Car,w
  2308  0657  00A0               	movwf	??_RecibeALARMAS
  2309  0658  0820               	movf	??_RecibeALARMAS,w
  2310  0659  00A6               	movwf	RecibeALARMAS@Datos
  2311  065A                     l2581:
  2312                           
  2313                           ;main.c: 371:     Car=TECLADO();
  2314  065A  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2315  065F  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0660  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0661  00A0               	movwf	??_RecibeALARMAS
  2318  0662  0820               	movf	??_RecibeALARMAS,w
  2319  0663  00B1               	movwf	RecibeALARMAS@Car
  2320                           
  2321                           ;main.c: 372:     while (Car == 0){
  2322  0664  2E79               	goto	l2587
  2323  0665                     l2583:
  2324                           
  2325                           ;main.c: 373:         Car = TECLADO();
  2326  0665  120A  118A  209C  120A  118A  	fcall	_TECLADO
  2327  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2328  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2329  066C  00A0               	movwf	??_RecibeALARMAS
  2330  066D  0820               	movf	??_RecibeALARMAS,w
  2331  066E  00B1               	movwf	RecibeALARMAS@Car
  2332  066F                     l2585:
  2333                           
  2334                           ;main.c: 374:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2335  066F  300D               	movlw	13
  2336  0670  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0671  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0672  00A1               	movwf	??_RecibeALARMAS+1
  2339  0673  30FB               	movlw	251
  2340  0674  00A0               	movwf	??_RecibeALARMAS
  2341  0675                     u2067:
  2342  0675  0BA0               	decfsz	??_RecibeALARMAS,f
  2343  0676  2E75               	goto	u2067
  2344  0677  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2345  0678  2E75               	goto	u2067
  2346  0679                     l2587:
  2347                           
  2348                           ;main.c: 372:     while (Car == 0){
  2349  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2350  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2351  067B  0831               	movf	RecibeALARMAS@Car,w
  2352  067C  1903               	btfsc	3,2
  2353  067D  2E7F               	goto	u1421
  2354  067E  2E80               	goto	u1420
  2355  067F                     u1421:
  2356  067F  2E65               	goto	l2583
  2357  0680                     u1420:
  2358  0680                     l2589:
  2359                           
  2360                           ;main.c: 377:     if (Car == 'n'){
  2361  0680  306E               	movlw	110
  2362  0681  0631               	xorwf	RecibeALARMAS@Car,w
  2363  0682  1D03               	btfss	3,2
  2364  0683  2E85               	goto	u1431
  2365  0684  2E86               	goto	u1430
  2366  0685                     u1431:
  2367  0685  2E89               	goto	l2593
  2368  0686                     u1430:
  2369  0686                     l2591:
  2370                           
  2371                           ;main.c: 378:         ctr = 1;
  2372  0686  01A5               	clrf	RecibeALARMAS@ctr
  2373  0687  0AA5               	incf	RecibeALARMAS@ctr,f
  2374                           
  2375                           ;main.c: 379:     }
  2376  0688  2E8A               	goto	l2595
  2377  0689                     l2593:
  2378                           
  2379                           ;main.c: 381:         ctr = 0;
  2380  0689  01A5               	clrf	RecibeALARMAS@ctr
  2381  068A                     l2595:
  2382                           
  2383                           ;main.c: 395:     SEND_CMD(0x80);
  2384  068A  3080               	movlw	128
  2385  068B  120A  158A  26D2  120A  118A  	fcall	_SEND_CMD
  2386  0690                     l2597:
  2387                           
  2388                           ;main.c: 397:     SEND_CHAR(Datos[3]);
  2389  0690  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0691  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0692  0829               	movf	RecibeALARMAS@Datos+3,w
  2392  0693  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2393  0698                     l2599:
  2394                           
  2395                           ;main.c: 398:     SEND_CHAR(Datos[2]);
  2396  0698  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0699  1303               	bcf	3,6	;RP1=0, select bank0
  2398  069A  0828               	movf	RecibeALARMAS@Datos+2,w
  2399  069B  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2400  06A0                     l2601:
  2401                           
  2402                           ;main.c: 399:     SEND_CHAR(':');
  2403  06A0  303A               	movlw	58
  2404  06A1  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2405  06A6                     l2603:
  2406                           
  2407                           ;main.c: 401:     SEND_CHAR(Datos[1]);
  2408  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  2409  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  2410  06A8  0827               	movf	RecibeALARMAS@Datos+1,w
  2411  06A9  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2412  06AE                     l2605:
  2413                           
  2414                           ;main.c: 402:     SEND_CHAR(Datos[0]);
  2415  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2416  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2417  06B0  0826               	movf	RecibeALARMAS@Datos,w
  2418  06B1  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2419  06B6                     l2607:
  2420                           
  2421                           ;main.c: 404:     if (ctr==1){
  2422  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2423  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2424  06B8  0325               	decf	RecibeALARMAS@ctr,w
  2425  06B9  1D03               	btfss	3,2
  2426  06BA  2EBC               	goto	u1441
  2427  06BB  2EBD               	goto	u1440
  2428  06BC                     u1441:
  2429  06BC  2EC8               	goto	l2611
  2430  06BD                     u1440:
  2431  06BD                     l2609:
  2432                           
  2433                           ;main.c: 405:         SEND_MSJ(0x80+15,"On");
  2434  06BD  302F               	movlw	low (STR_18| (0+32768))
  2435  06BE  00F3               	movwf	SEND_MSJ@Msj
  2436  06BF  3089               	movlw	high (STR_18| (0+32768))
  2437  06C0  00F4               	movwf	SEND_MSJ@Msj+1
  2438  06C1  308F               	movlw	143
  2439  06C2  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2440                           
  2441                           ;main.c: 406:     }else {
  2442  06C7  2ED2               	goto	l2613
  2443  06C8                     l2611:
  2444                           
  2445                           ;main.c: 407:         SEND_MSJ(0x80+15,"Off");
  2446  06C8  302B               	movlw	low (STR_19| (0+32768))
  2447  06C9  00F3               	movwf	SEND_MSJ@Msj
  2448  06CA  3089               	movlw	high (STR_19| (0+32768))
  2449  06CB  00F4               	movwf	SEND_MSJ@Msj+1
  2450  06CC  308F               	movlw	143
  2451  06CD  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2452  06D2                     l2613:
  2453                           
  2454                           ;main.c: 410:     SEND_CMD(0xC0);
  2455  06D2  30C0               	movlw	192
  2456  06D3  120A  158A  26D2  120A  118A  	fcall	_SEND_CMD
  2457  06D8                     l2615:
  2458                           
  2459                           ;main.c: 411:     SEND_CHAR(Datos[5]);
  2460  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2461  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  2462  06DA  082B               	movf	RecibeALARMAS@Datos+5,w
  2463  06DB  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2464  06E0                     l2617:
  2465                           
  2466                           ;main.c: 412:     SEND_CHAR(Datos[4]);
  2467  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  2468  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  2469  06E2  082A               	movf	RecibeALARMAS@Datos+4,w
  2470  06E3  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2471  06E8                     l2619:
  2472                           
  2473                           ;main.c: 413:     SEND_CHAR('/');
  2474  06E8  302F               	movlw	47
  2475  06E9  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2476                           
  2477                           ;main.c: 415:     deco_mes(0xC0 + 2, ((Datos[7] << 4)+ (Datos[6]& 0x0F)));
  2478  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2479  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2480  06F0  082D               	movf	RecibeALARMAS@Datos+7,w
  2481  06F1  00A0               	movwf	??_RecibeALARMAS
  2482  06F2  3004               	movlw	4
  2483  06F3                     u1455:
  2484  06F3  1003               	clrc
  2485  06F4  0DA0               	rlf	??_RecibeALARMAS,f
  2486  06F5  3EFF               	addlw	-1
  2487  06F6  1D03               	skipz
  2488  06F7  2EF3               	goto	u1455
  2489  06F8  082C               	movf	RecibeALARMAS@Datos+6,w
  2490  06F9  390F               	andlw	15
  2491  06FA  0720               	addwf	??_RecibeALARMAS,w
  2492  06FB  00A1               	movwf	??_RecibeALARMAS+1
  2493  06FC  0821               	movf	??_RecibeALARMAS+1,w
  2494  06FD  00F8               	movwf	deco_mes@Car
  2495  06FE  30C2               	movlw	194
  2496  06FF  120A  118A  215B  120A  118A  	fcall	_deco_mes
  2497  0704                     l2621:
  2498                           
  2499                           ;main.c: 416:     SEND_CHAR('/');
  2500  0704  302F               	movlw	47
  2501  0705  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2502  070A                     l2623:
  2503                           
  2504                           ;main.c: 418:     SEND_CHAR(Datos[9]);
  2505  070A  1283               	bcf	3,5	;RP0=0, select bank0
  2506  070B  1303               	bcf	3,6	;RP1=0, select bank0
  2507  070C  082F               	movf	RecibeALARMAS@Datos+9,w
  2508  070D  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2509  0712                     l2625:
  2510                           
  2511                           ;main.c: 419:     SEND_CHAR(Datos[8]);
  2512  0712  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0713  1303               	bcf	3,6	;RP1=0, select bank0
  2514  0714  082E               	movf	RecibeALARMAS@Datos+8,w
  2515  0715  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2516  071A                     l2627:
  2517                           
  2518                           ;main.c: 421:     ESCRIBA_SEE(addr++, (Datos[3] << 4)+ (Datos[2]& 0x0F));
  2519  071A  1283               	bcf	3,5	;RP0=0, select bank0
  2520  071B  1303               	bcf	3,6	;RP1=0, select bank0
  2521  071C  0829               	movf	RecibeALARMAS@Datos+3,w
  2522  071D  00A0               	movwf	??_RecibeALARMAS
  2523  071E  3004               	movlw	4
  2524  071F                     u1465:
  2525  071F  1003               	clrc
  2526  0720  0DA0               	rlf	??_RecibeALARMAS,f
  2527  0721  3EFF               	addlw	-1
  2528  0722  1D03               	skipz
  2529  0723  2F1F               	goto	u1465
  2530  0724  0828               	movf	RecibeALARMAS@Datos+2,w
  2531  0725  390F               	andlw	15
  2532  0726  0720               	addwf	??_RecibeALARMAS,w
  2533  0727  00A1               	movwf	??_RecibeALARMAS+1
  2534  0728  0821               	movf	??_RecibeALARMAS+1,w
  2535  0729  00F1               	movwf	ESCRIBA_SEE@dato
  2536  072A  0830               	movf	RecibeALARMAS@addr,w
  2537  072B  120A  158A  272F  120A  118A  	fcall	_ESCRIBA_SEE
  2538  0730                     l2629:
  2539  0730  3001               	movlw	1
  2540  0731  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0732  1303               	bcf	3,6	;RP1=0, select bank0
  2542  0733  00A0               	movwf	??_RecibeALARMAS
  2543  0734  0820               	movf	??_RecibeALARMAS,w
  2544  0735  07B0               	addwf	RecibeALARMAS@addr,f
  2545  0736                     l2631:
  2546                           
  2547                           ;main.c: 422:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2548  0736  300D               	movlw	13
  2549  0737  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0738  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0739  00A1               	movwf	??_RecibeALARMAS+1
  2552  073A  30FB               	movlw	251
  2553  073B  00A0               	movwf	??_RecibeALARMAS
  2554  073C                     u2077:
  2555  073C  0BA0               	decfsz	??_RecibeALARMAS,f
  2556  073D  2F3C               	goto	u2077
  2557  073E  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2558  073F  2F3C               	goto	u2077
  2559  0740                     l2633:
  2560                           
  2561                           ;main.c: 423:     ESCRIBA_SEE(addr++, (Datos[1] << 4)+ (Datos[0]& 0x0F));
  2562  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0741  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0742  0827               	movf	RecibeALARMAS@Datos+1,w
  2565  0743  00A0               	movwf	??_RecibeALARMAS
  2566  0744  3004               	movlw	4
  2567  0745                     u1475:
  2568  0745  1003               	clrc
  2569  0746  0DA0               	rlf	??_RecibeALARMAS,f
  2570  0747  3EFF               	addlw	-1
  2571  0748  1D03               	skipz
  2572  0749  2F45               	goto	u1475
  2573  074A  0826               	movf	RecibeALARMAS@Datos,w
  2574  074B  390F               	andlw	15
  2575  074C  0720               	addwf	??_RecibeALARMAS,w
  2576  074D  00A1               	movwf	??_RecibeALARMAS+1
  2577  074E  0821               	movf	??_RecibeALARMAS+1,w
  2578  074F  00F1               	movwf	ESCRIBA_SEE@dato
  2579  0750  0830               	movf	RecibeALARMAS@addr,w
  2580  0751  120A  158A  272F  120A  118A  	fcall	_ESCRIBA_SEE
  2581  0756                     l2635:
  2582  0756  3001               	movlw	1
  2583  0757  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0758  1303               	bcf	3,6	;RP1=0, select bank0
  2585  0759  00A0               	movwf	??_RecibeALARMAS
  2586  075A  0820               	movf	??_RecibeALARMAS,w
  2587  075B  07B0               	addwf	RecibeALARMAS@addr,f
  2588  075C                     l2637:
  2589                           
  2590                           ;main.c: 424:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2591  075C  300D               	movlw	13
  2592  075D  1283               	bcf	3,5	;RP0=0, select bank0
  2593  075E  1303               	bcf	3,6	;RP1=0, select bank0
  2594  075F  00A1               	movwf	??_RecibeALARMAS+1
  2595  0760  30FB               	movlw	251
  2596  0761  00A0               	movwf	??_RecibeALARMAS
  2597  0762                     u2087:
  2598  0762  0BA0               	decfsz	??_RecibeALARMAS,f
  2599  0763  2F62               	goto	u2087
  2600  0764  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2601  0765  2F62               	goto	u2087
  2602  0766                     l2639:
  2603                           
  2604                           ;main.c: 425:     ESCRIBA_SEE(addr++, (Datos[5] << 4)+ (Datos[4]& 0x0F));
  2605  0766  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0767  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0768  082B               	movf	RecibeALARMAS@Datos+5,w
  2608  0769  00A0               	movwf	??_RecibeALARMAS
  2609  076A  3004               	movlw	4
  2610  076B                     u1485:
  2611  076B  1003               	clrc
  2612  076C  0DA0               	rlf	??_RecibeALARMAS,f
  2613  076D  3EFF               	addlw	-1
  2614  076E  1D03               	skipz
  2615  076F  2F6B               	goto	u1485
  2616  0770  082A               	movf	RecibeALARMAS@Datos+4,w
  2617  0771  390F               	andlw	15
  2618  0772  0720               	addwf	??_RecibeALARMAS,w
  2619  0773  00A1               	movwf	??_RecibeALARMAS+1
  2620  0774  0821               	movf	??_RecibeALARMAS+1,w
  2621  0775  00F1               	movwf	ESCRIBA_SEE@dato
  2622  0776  0830               	movf	RecibeALARMAS@addr,w
  2623  0777  120A  158A  272F  120A  118A  	fcall	_ESCRIBA_SEE
  2624  077C                     l2641:
  2625  077C  3001               	movlw	1
  2626  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2627  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2628  077F  00A0               	movwf	??_RecibeALARMAS
  2629  0780  0820               	movf	??_RecibeALARMAS,w
  2630  0781  07B0               	addwf	RecibeALARMAS@addr,f
  2631  0782                     l2643:
  2632                           
  2633                           ;main.c: 426:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2634  0782  300D               	movlw	13
  2635  0783  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0784  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0785  00A1               	movwf	??_RecibeALARMAS+1
  2638  0786  30FB               	movlw	251
  2639  0787  00A0               	movwf	??_RecibeALARMAS
  2640  0788                     u2097:
  2641  0788  0BA0               	decfsz	??_RecibeALARMAS,f
  2642  0789  2F88               	goto	u2097
  2643  078A  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2644  078B  2F88               	goto	u2097
  2645  078C                     l2645:
  2646                           
  2647                           ;main.c: 427:     ESCRIBA_SEE(addr++, (Datos[7] << 4)+ (Datos[6]& 0x0F));
  2648  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2649  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2650  078E  082D               	movf	RecibeALARMAS@Datos+7,w
  2651  078F  00A0               	movwf	??_RecibeALARMAS
  2652  0790  3004               	movlw	4
  2653  0791                     u1495:
  2654  0791  1003               	clrc
  2655  0792  0DA0               	rlf	??_RecibeALARMAS,f
  2656  0793  3EFF               	addlw	-1
  2657  0794  1D03               	skipz
  2658  0795  2F91               	goto	u1495
  2659  0796  082C               	movf	RecibeALARMAS@Datos+6,w
  2660  0797  390F               	andlw	15
  2661  0798  0720               	addwf	??_RecibeALARMAS,w
  2662  0799  00A1               	movwf	??_RecibeALARMAS+1
  2663  079A  0821               	movf	??_RecibeALARMAS+1,w
  2664  079B  00F1               	movwf	ESCRIBA_SEE@dato
  2665  079C  0830               	movf	RecibeALARMAS@addr,w
  2666  079D  120A  158A  272F  120A  118A  	fcall	_ESCRIBA_SEE
  2667  07A2                     l2647:
  2668  07A2  3001               	movlw	1
  2669  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  2670  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  2671  07A5  00A0               	movwf	??_RecibeALARMAS
  2672  07A6  0820               	movf	??_RecibeALARMAS,w
  2673  07A7  07B0               	addwf	RecibeALARMAS@addr,f
  2674  07A8                     l2649:
  2675                           
  2676                           ;main.c: 428:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2677  07A8  300D               	movlw	13
  2678  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  2679  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  2680  07AB  00A1               	movwf	??_RecibeALARMAS+1
  2681  07AC  30FB               	movlw	251
  2682  07AD  00A0               	movwf	??_RecibeALARMAS
  2683  07AE                     u2107:
  2684  07AE  0BA0               	decfsz	??_RecibeALARMAS,f
  2685  07AF  2FAE               	goto	u2107
  2686  07B0  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2687  07B1  2FAE               	goto	u2107
  2688  07B2                     l2651:
  2689                           
  2690                           ;main.c: 429:     ESCRIBA_SEE(addr++, (Datos[9] << 4)+ (Datos[8]& 0x0F));
  2691  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2692  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2693  07B4  082F               	movf	RecibeALARMAS@Datos+9,w
  2694  07B5  00A0               	movwf	??_RecibeALARMAS
  2695  07B6  3004               	movlw	4
  2696  07B7                     u1505:
  2697  07B7  1003               	clrc
  2698  07B8  0DA0               	rlf	??_RecibeALARMAS,f
  2699  07B9  3EFF               	addlw	-1
  2700  07BA  1D03               	skipz
  2701  07BB  2FB7               	goto	u1505
  2702  07BC  082E               	movf	RecibeALARMAS@Datos+8,w
  2703  07BD  390F               	andlw	15
  2704  07BE  0720               	addwf	??_RecibeALARMAS,w
  2705  07BF  00A1               	movwf	??_RecibeALARMAS+1
  2706  07C0  0821               	movf	??_RecibeALARMAS+1,w
  2707  07C1  00F1               	movwf	ESCRIBA_SEE@dato
  2708  07C2  0830               	movf	RecibeALARMAS@addr,w
  2709  07C3  120A  158A  272F  120A  118A  	fcall	_ESCRIBA_SEE
  2710  07C8                     l2653:
  2711  07C8  3001               	movlw	1
  2712  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  2713  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  2714  07CB  00A0               	movwf	??_RecibeALARMAS
  2715  07CC  0820               	movf	??_RecibeALARMAS,w
  2716  07CD  07B0               	addwf	RecibeALARMAS@addr,f
  2717  07CE                     l2655:
  2718                           
  2719                           ;main.c: 430:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2720  07CE  300D               	movlw	13
  2721  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2722  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2723  07D1  00A1               	movwf	??_RecibeALARMAS+1
  2724  07D2  30FB               	movlw	251
  2725  07D3  00A0               	movwf	??_RecibeALARMAS
  2726  07D4                     u2117:
  2727  07D4  0BA0               	decfsz	??_RecibeALARMAS,f
  2728  07D5  2FD4               	goto	u2117
  2729  07D6  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2730  07D7  2FD4               	goto	u2117
  2731  07D8                     l2657:
  2732                           
  2733                           ;main.c: 431:     ESCRIBA_SEE(addr++, ctr);
  2734  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  2735  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  2736  07DA  0825               	movf	RecibeALARMAS@ctr,w
  2737  07DB  00A0               	movwf	??_RecibeALARMAS
  2738  07DC  0820               	movf	??_RecibeALARMAS,w
  2739  07DD  00F1               	movwf	ESCRIBA_SEE@dato
  2740  07DE  0830               	movf	RecibeALARMAS@addr,w
  2741  07DF  120A  158A  272F  120A  118A  	fcall	_ESCRIBA_SEE
  2742  07E4                     l2659:
  2743  07E4  3001               	movlw	1
  2744  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  2745  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  2746  07E7  00A0               	movwf	??_RecibeALARMAS
  2747  07E8  0820               	movf	??_RecibeALARMAS,w
  2748  07E9  07B0               	addwf	RecibeALARMAS@addr,f
  2749  07EA                     l2661:
  2750                           
  2751                           ;main.c: 432:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2752  07EA  300D               	movlw	13
  2753  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  2754  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  2755  07ED  00A1               	movwf	??_RecibeALARMAS+1
  2756  07EE  30FB               	movlw	251
  2757  07EF  00A0               	movwf	??_RecibeALARMAS
  2758  07F0                     u2127:
  2759  07F0  0BA0               	decfsz	??_RecibeALARMAS,f
  2760  07F1  2FF0               	goto	u2127
  2761  07F2  0BA1               	decfsz	??_RecibeALARMAS+1,f
  2762  07F3  2FF0               	goto	u2127
  2763  07F4                     l313:
  2764  07F4  0008               	return
  2765  07F5                     __end_of_RecibeALARMAS:
  2766                           
  2767                           	psect	text4
  2768  015B                     __ptext4:	
  2769 ;; *************** function _deco_mes *****************
  2770 ;; Defined at:
  2771 ;;		line 227 in file "main.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  addr            1    wreg     unsigned char 
  2774 ;;  Car             1    8[COMMON] unsigned char 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  addr            1   11[COMMON] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2786 ;;      Params:         1       0       0       0       0
  2787 ;;      Locals:         1       0       0       0       0
  2788 ;;      Temps:          2       0       0       0       0
  2789 ;;      Totals:         4       0       0       0       0
  2790 ;;Total ram usage:        4 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 2
  2793 ;; This function calls:
  2794 ;;		_SEND_CHAR
  2795 ;;		_SEND_MSJ
  2796 ;; This function is called by:
  2797 ;;		_RecibeALARMAS
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function _deco_mes
  2804  015B                     _deco_mes:
  2805                           
  2806                           ;incstack = 0
  2807                           ; Regs used in _deco_mes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2808                           ;deco_mes@addr stored from wreg
  2809  015B  00FB               	movwf	deco_mes@addr
  2810  015C                     l2257:
  2811                           
  2812                           ;main.c: 228:     switch (Car) {
  2813  015C  29FA               	goto	l2287
  2814  015D                     l2259:
  2815                           
  2816                           ;main.c: 230:             SEND_MSJ(addr, "ENE");
  2817  015D  3003               	movlw	low (STR_3| (0+32768))
  2818  015E  00F3               	movwf	SEND_MSJ@Msj
  2819  015F  3089               	movlw	high (STR_3| (0+32768))
  2820  0160  00F4               	movwf	SEND_MSJ@Msj+1
  2821  0161  087B               	movf	deco_mes@addr,w
  2822  0162  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2823                           
  2824                           ;main.c: 231:             break;
  2825  0167  2A28               	goto	l267
  2826  0168                     l2261:
  2827                           
  2828                           ;main.c: 233:             SEND_MSJ(addr, "FEB");
  2829  0168  30FB               	movlw	low (STR_4| (0+32768))
  2830  0169  00F3               	movwf	SEND_MSJ@Msj
  2831  016A  3088               	movlw	high (STR_4| (0+32768))
  2832  016B  00F4               	movwf	SEND_MSJ@Msj+1
  2833  016C  087B               	movf	deco_mes@addr,w
  2834  016D  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2835                           
  2836                           ;main.c: 234:             break;
  2837  0172  2A28               	goto	l267
  2838  0173                     l2263:
  2839                           
  2840                           ;main.c: 236:             SEND_MSJ(addr, "MAR");
  2841  0173  3017               	movlw	low (STR_5| (0+32768))
  2842  0174  00F3               	movwf	SEND_MSJ@Msj
  2843  0175  3089               	movlw	high (STR_5| (0+32768))
  2844  0176  00F4               	movwf	SEND_MSJ@Msj+1
  2845  0177  087B               	movf	deco_mes@addr,w
  2846  0178  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2847                           
  2848                           ;main.c: 237:             break;
  2849  017D  2A28               	goto	l267
  2850  017E                     l2265:
  2851                           
  2852                           ;main.c: 239:             SEND_MSJ(addr, "ABR");
  2853  017E  301B               	movlw	low (STR_6| (0+32768))
  2854  017F  00F3               	movwf	SEND_MSJ@Msj
  2855  0180  3089               	movlw	high (STR_6| (0+32768))
  2856  0181  00F4               	movwf	SEND_MSJ@Msj+1
  2857  0182  087B               	movf	deco_mes@addr,w
  2858  0183  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2859                           
  2860                           ;main.c: 240:             break;
  2861  0188  2A28               	goto	l267
  2862  0189                     l2267:
  2863                           
  2864                           ;main.c: 242:             SEND_MSJ(addr, "MAY");
  2865  0189  3027               	movlw	low (STR_7| (0+32768))
  2866  018A  00F3               	movwf	SEND_MSJ@Msj
  2867  018B  3089               	movlw	high (STR_7| (0+32768))
  2868  018C  00F4               	movwf	SEND_MSJ@Msj+1
  2869  018D  087B               	movf	deco_mes@addr,w
  2870  018E  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2871                           
  2872                           ;main.c: 243:             break;
  2873  0193  2A28               	goto	l267
  2874  0194                     l2269:
  2875                           
  2876                           ;main.c: 245:             SEND_MSJ(addr, "JUN");
  2877  0194  300B               	movlw	low (STR_8| (0+32768))
  2878  0195  00F3               	movwf	SEND_MSJ@Msj
  2879  0196  3089               	movlw	high (STR_8| (0+32768))
  2880  0197  00F4               	movwf	SEND_MSJ@Msj+1
  2881  0198  087B               	movf	deco_mes@addr,w
  2882  0199  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2883                           
  2884                           ;main.c: 246:             break;
  2885  019E  2A28               	goto	l267
  2886  019F                     l2271:
  2887                           
  2888                           ;main.c: 248:             SEND_MSJ(addr, "JUL");
  2889  019F  3007               	movlw	low (STR_9| (0+32768))
  2890  01A0  00F3               	movwf	SEND_MSJ@Msj
  2891  01A1  3089               	movlw	high (STR_9| (0+32768))
  2892  01A2  00F4               	movwf	SEND_MSJ@Msj+1
  2893  01A3  087B               	movf	deco_mes@addr,w
  2894  01A4  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2895                           
  2896                           ;main.c: 249:             break;
  2897  01A9  2A28               	goto	l267
  2898  01AA                     l2273:
  2899                           
  2900                           ;main.c: 251:             SEND_MSJ(addr, "AGO");
  2901  01AA  300F               	movlw	low (STR_10| (0+32768))
  2902  01AB  00F3               	movwf	SEND_MSJ@Msj
  2903  01AC  3089               	movlw	high (STR_10| (0+32768))
  2904  01AD  00F4               	movwf	SEND_MSJ@Msj+1
  2905  01AE  087B               	movf	deco_mes@addr,w
  2906  01AF  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2907                           
  2908                           ;main.c: 252:             break;
  2909  01B4  2A28               	goto	l267
  2910  01B5                     l2275:
  2911                           
  2912                           ;main.c: 254:             SEND_MSJ(addr, "SEP");
  2913  01B5  3013               	movlw	low (STR_11| (0+32768))
  2914  01B6  00F3               	movwf	SEND_MSJ@Msj
  2915  01B7  3089               	movlw	high (STR_11| (0+32768))
  2916  01B8  00F4               	movwf	SEND_MSJ@Msj+1
  2917  01B9  087B               	movf	deco_mes@addr,w
  2918  01BA  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2919                           
  2920                           ;main.c: 255:             break;
  2921  01BF  2A28               	goto	l267
  2922  01C0                     l2277:
  2923                           
  2924                           ;main.c: 257:             SEND_MSJ(addr, "OCT");
  2925  01C0  301F               	movlw	low (STR_12| (0+32768))
  2926  01C1  00F3               	movwf	SEND_MSJ@Msj
  2927  01C2  3089               	movlw	high (STR_12| (0+32768))
  2928  01C3  00F4               	movwf	SEND_MSJ@Msj+1
  2929  01C4  087B               	movf	deco_mes@addr,w
  2930  01C5  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2931                           
  2932                           ;main.c: 258:             break;
  2933  01CA  2A28               	goto	l267
  2934  01CB                     l2279:
  2935                           
  2936                           ;main.c: 260:             SEND_MSJ(addr, "NOV");
  2937  01CB  3023               	movlw	low (STR_13| (0+32768))
  2938  01CC  00F3               	movwf	SEND_MSJ@Msj
  2939  01CD  3089               	movlw	high (STR_13| (0+32768))
  2940  01CE  00F4               	movwf	SEND_MSJ@Msj+1
  2941  01CF  087B               	movf	deco_mes@addr,w
  2942  01D0  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2943                           
  2944                           ;main.c: 261:             break;
  2945  01D5  2A28               	goto	l267
  2946  01D6                     l2281:
  2947                           
  2948                           ;main.c: 263:             SEND_MSJ(addr, "DIC");
  2949  01D6  30FF               	movlw	low (STR_14| (0+32768))
  2950  01D7  00F3               	movwf	SEND_MSJ@Msj
  2951  01D8  3088               	movlw	high (STR_14| (0+32768))
  2952  01D9  00F4               	movwf	SEND_MSJ@Msj+1
  2953  01DA  087B               	movf	deco_mes@addr,w
  2954  01DB  120A  158A  2758  120A  118A  	fcall	_SEND_MSJ
  2955                           
  2956                           ;main.c: 264:             break;
  2957  01E0  2A28               	goto	l267
  2958  01E1                     l2283:
  2959                           
  2960                           ;main.c: 266:             SEND_CHAR(((Car >> 4) & 0x0F) + 0x30);
  2961  01E1  0878               	movf	deco_mes@Car,w
  2962  01E2  00F9               	movwf	??_deco_mes
  2963  01E3  3004               	movlw	4
  2964  01E4                     u1115:
  2965  01E4  1003               	clrc
  2966  01E5  0CF9               	rrf	??_deco_mes,f
  2967  01E6  3EFF               	addlw	-1
  2968  01E7  1D03               	skipz
  2969  01E8  29E4               	goto	u1115
  2970  01E9  0879               	movf	??_deco_mes,w
  2971  01EA  390F               	andlw	15
  2972  01EB  3E30               	addlw	48
  2973  01EC  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2974                           
  2975                           ;main.c: 267:             SEND_CHAR((Car & 0x0F) + 0x30);
  2976  01F1  0878               	movf	deco_mes@Car,w
  2977  01F2  390F               	andlw	15
  2978  01F3  3E30               	addlw	48
  2979  01F4  120A  158A  26B0  120A  118A  	fcall	_SEND_CHAR
  2980                           
  2981                           ;main.c: 268:             break;
  2982  01F9  2A28               	goto	l267
  2983  01FA                     l2287:
  2984  01FA  0878               	movf	deco_mes@Car,w
  2985  01FB  00F9               	movwf	??_deco_mes
  2986  01FC  01FA               	clrf	??_deco_mes+1
  2987                           
  2988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2989                           ; Switch size 1, requested type "simple"
  2990                           ; Number of cases is 1, Range of values is 0 to 0
  2991                           ; switch strategies available:
  2992                           ; Name         Instructions Cycles
  2993                           ; simple_byte            4     3 (average)
  2994                           ; direct_byte           11     8 (fixed)
  2995                           ; jumptable            260     6 (fixed)
  2996                           ;	Chosen strategy is simple_byte
  2997  01FD  087A               	movf	??_deco_mes+1,w
  2998  01FE  3A00               	xorlw	0	; case 0
  2999  01FF  1903               	skipnz
  3000  0200  2A02               	goto	l3113
  3001  0201  29E1               	goto	l2283
  3002  0202                     l3113:
  3003                           
  3004                           ; Switch size 1, requested type "simple"
  3005                           ; Number of cases is 12, Range of values is 1 to 18
  3006                           ; switch strategies available:
  3007                           ; Name         Instructions Cycles
  3008                           ; simple_byte           37    19 (average)
  3009                           ; direct_byte           65    11 (fixed)
  3010                           ; jumptable            263     9 (fixed)
  3011                           ;	Chosen strategy is simple_byte
  3012  0202  0879               	movf	??_deco_mes,w
  3013  0203  3A01               	xorlw	1	; case 1
  3014  0204  1903               	skipnz
  3015  0205  295D               	goto	l2259
  3016  0206  3A03               	xorlw	3	; case 2
  3017  0207  1903               	skipnz
  3018  0208  2968               	goto	l2261
  3019  0209  3A01               	xorlw	1	; case 3
  3020  020A  1903               	skipnz
  3021  020B  2973               	goto	l2263
  3022  020C  3A07               	xorlw	7	; case 4
  3023  020D  1903               	skipnz
  3024  020E  297E               	goto	l2265
  3025  020F  3A01               	xorlw	1	; case 5
  3026  0210  1903               	skipnz
  3027  0211  2989               	goto	l2267
  3028  0212  3A03               	xorlw	3	; case 6
  3029  0213  1903               	skipnz
  3030  0214  2994               	goto	l2269
  3031  0215  3A01               	xorlw	1	; case 7
  3032  0216  1903               	skipnz
  3033  0217  299F               	goto	l2271
  3034  0218  3A0F               	xorlw	15	; case 8
  3035  0219  1903               	skipnz
  3036  021A  29AA               	goto	l2273
  3037  021B  3A01               	xorlw	1	; case 9
  3038  021C  1903               	skipnz
  3039  021D  29B5               	goto	l2275
  3040  021E  3A19               	xorlw	25	; case 16
  3041  021F  1903               	skipnz
  3042  0220  29C0               	goto	l2277
  3043  0221  3A01               	xorlw	1	; case 17
  3044  0222  1903               	skipnz
  3045  0223  29CB               	goto	l2279
  3046  0224  3A03               	xorlw	3	; case 18
  3047  0225  1903               	skipnz
  3048  0226  29D6               	goto	l2281
  3049  0227  29E1               	goto	l2283
  3050  0228                     l267:
  3051  0228  0008               	return
  3052  0229                     __end_of_deco_mes:
  3053                           
  3054                           	psect	text5
  3055  0F58                     __ptext5:	
  3056 ;; *************** function _SEND_MSJ *****************
  3057 ;; Defined at:
  3058 ;;		line 61 in file "main.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  POS             1    wreg     unsigned char 
  3061 ;;  Msj             2    3[COMMON] PTR unsigned char 
  3062 ;;		 -> STR_33(15), STR_32(20), STR_31(18), STR_30(11), 
  3063 ;;		 -> STR_29(8), STR_28(7), STR_27(8), STR_26(7), 
  3064 ;;		 -> STR_25(10), STR_24(7), STR_23(6), STR_22(17), 
  3065 ;;		 -> STR_21(17), STR_20(17), STR_19(4), STR_18(3), 
  3066 ;;		 -> STR_17(12), STR_16(15), STR_15(16), STR_14(4), 
  3067 ;;		 -> STR_13(4), STR_12(4), STR_11(4), STR_10(4), 
  3068 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(4), 
  3069 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(6), 
  3070 ;;		 -> STR_1(17), 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  POS             1    6[COMMON] unsigned char 
  3073 ;;  carac           1    7[COMMON] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         2       0       0       0       0
  3084 ;;      Locals:         2       0       0       0       0
  3085 ;;      Temps:          1       0       0       0       0
  3086 ;;      Totals:         5       0       0       0       0
  3087 ;;Total ram usage:        5 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; Hardware stack levels required when called: 1
  3090 ;; This function calls:
  3091 ;;		_SEND_CHAR
  3092 ;;		_SEND_CMD
  3093 ;; This function is called by:
  3094 ;;		_deco_mes
  3095 ;;		_RecibeALARMAS
  3096 ;;		_main
  3097 ;;		_RecibeHHMM
  3098 ;;		_LEA_FECHA
  3099 ;;		_deco_dia
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           
  3104                           ;psect for function _SEND_MSJ
  3105  0F58                     _SEND_MSJ:
  3106                           
  3107                           ;incstack = 0
  3108                           ; Regs used in _SEND_MSJ: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3109                           ;SEND_MSJ@POS stored from wreg
  3110  0F58  00F6               	movwf	SEND_MSJ@POS
  3111  0F59                     l2067:
  3112                           
  3113                           ;main.c: 62:     char carac;;main.c: 63:     SEND_CMD(POS);
  3114  0F59  0876               	movf	SEND_MSJ@POS,w
  3115  0F5A  120A  158A  26D2  120A  158A  	fcall	_SEND_CMD
  3116                           
  3117                           ;main.c: 64:     while (*Msj != 0x00) {
  3118  0F5F  2F78               	goto	l2075
  3119  0F60                     l2069:
  3120                           
  3121                           ;main.c: 65:         carac = (char) *Msj;
  3122  0F60  0874               	movf	SEND_MSJ@Msj+1,w
  3123  0F61  00FF               	movwf	btemp+1
  3124  0F62  0873               	movf	SEND_MSJ@Msj,w
  3125  0F63  0084               	movwf	4
  3126  0F64  120A  158A  2134  120A  158A  	fcall	stringtab
  3127  0F69  00F5               	movwf	??_SEND_MSJ
  3128  0F6A  0875               	movf	??_SEND_MSJ,w
  3129  0F6B  00F7               	movwf	SEND_MSJ@carac
  3130  0F6C                     l2071:
  3131                           
  3132                           ;main.c: 66:         SEND_CHAR(carac);
  3133  0F6C  0877               	movf	SEND_MSJ@carac,w
  3134  0F6D  120A  158A  26B0  120A  158A  	fcall	_SEND_CHAR
  3135  0F72                     l2073:
  3136                           
  3137                           ;main.c: 67:         Msj++;
  3138  0F72  3001               	movlw	1
  3139  0F73  07F3               	addwf	SEND_MSJ@Msj,f
  3140  0F74  1803               	skipnc
  3141  0F75  0AF4               	incf	SEND_MSJ@Msj+1,f
  3142  0F76  3000               	movlw	0
  3143  0F77  07F4               	addwf	SEND_MSJ@Msj+1,f
  3144  0F78                     l2075:
  3145                           
  3146                           ;main.c: 64:     while (*Msj != 0x00) {
  3147  0F78  0874               	movf	SEND_MSJ@Msj+1,w
  3148  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  3149  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  3150  0F7B  00FF               	movwf	btemp+1
  3151  0F7C  0873               	movf	SEND_MSJ@Msj,w
  3152  0F7D  0084               	movwf	4
  3153  0F7E  120A  158A  2134  120A  158A  	fcall	stringtab
  3154  0F83  3A00               	xorlw	0
  3155  0F84  1D03               	skipz
  3156  0F85  2F87               	goto	u971
  3157  0F86  2F88               	goto	u970
  3158  0F87                     u971:
  3159  0F87  2F60               	goto	l2069
  3160  0F88                     u970:
  3161  0F88                     l171:
  3162  0F88  0008               	return
  3163  0F89                     __end_of_SEND_MSJ:
  3164                           
  3165                           	psect	text6
  3166  0EB0                     __ptext6:	
  3167 ;; *************** function _SEND_CHAR *****************
  3168 ;; Defined at:
  3169 ;;		line 44 in file "main.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  dato            1    wreg     unsigned char 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  dato            1    1[COMMON] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       0       0       0       0
  3184 ;;      Locals:         1       0       0       0       0
  3185 ;;      Temps:          1       0       0       0       0
  3186 ;;      Totals:         2       0       0       0       0
  3187 ;;Total ram usage:        2 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_SEND_MSJ
  3193 ;;		_deco_mes
  3194 ;;		_RecibeALARMAS
  3195 ;;		_main
  3196 ;;		_RecibeHHMM
  3197 ;;		_LEA_FECHA
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _SEND_CHAR
  3203  0EB0                     _SEND_CHAR:
  3204                           
  3205                           ;incstack = 0
  3206                           ; Regs used in _SEND_CHAR: [wreg]
  3207                           ;SEND_CHAR@dato stored from wreg
  3208  0EB0  00F1               	movwf	SEND_CHAR@dato
  3209  0EB1                     l2051:
  3210                           
  3211                           ;main.c: 45:     PORTCbits.RC1 = 0;
  3212  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  3214  0EB3  1087               	bcf	7,1	;volatile
  3215                           
  3216                           ;main.c: 46:     PORTCbits.RC0 = 1;
  3217  0EB4  1407               	bsf	7,0	;volatile
  3218                           
  3219                           ;main.c: 47:     PORTCbits.RC2 = 1;
  3220  0EB5  1507               	bsf	7,2	;volatile
  3221  0EB6                     l2053:
  3222                           
  3223                           ;main.c: 48:     PORTB = dato;
  3224  0EB6  0871               	movf	SEND_CHAR@dato,w
  3225  0EB7  0086               	movwf	6	;volatile
  3226  0EB8                     l2055:
  3227                           
  3228                           ;main.c: 49:     PORTCbits.RC2 = 0;
  3229  0EB8  1107               	bcf	7,2	;volatile
  3230                           
  3231                           ;main.c: 50:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3232  0EB9  30C7               	movlw	199
  3233  0EBA  00F0               	movwf	??_SEND_CHAR
  3234  0EBB                     u2137:
  3235  0EBB  2EBC               	nop2
  3236  0EBC  0BF0               	decfsz	??_SEND_CHAR,f
  3237  0EBD  2EBB               	goto	u2137
  3238  0EBE  2EBF               	nop2
  3239  0EBF  2EC0               	nop2
  3240  0EC0                     l162:
  3241  0EC0  0008               	return
  3242  0EC1                     __end_of_SEND_CHAR:
  3243                           
  3244                           	psect	text7
  3245  0EF8                     __ptext7:	
  3246 ;; *************** function ___bmul *****************
  3247 ;; Defined at:
  3248 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  multiplier      1    wreg     unsigned char 
  3251 ;;  multiplicand    1    0[COMMON] unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  multiplier      1    3[COMMON] unsigned char 
  3254 ;;  product         1    2[COMMON] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      unsigned char 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3264 ;;      Params:         1       0       0       0       0
  3265 ;;      Locals:         2       0       0       0       0
  3266 ;;      Temps:          1       0       0       0       0
  3267 ;;      Totals:         4       0       0       0       0
  3268 ;;Total ram usage:        4 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_RecibeALARMAS
  3274 ;;		_Get_DS1307_RTC_Time
  3275 ;;		_Get_DS1307_RTC_Date
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           
  3280                           ;psect for function ___bmul
  3281  0EF8                     ___bmul:
  3282                           
  3283                           ;incstack = 0
  3284                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3285                           ;___bmul@multiplier stored from wreg
  3286  0EF8  00F3               	movwf	___bmul@multiplier
  3287  0EF9                     l2303:
  3288  0EF9  01F2               	clrf	___bmul@product
  3289  0EFA                     l2305:
  3290  0EFA  1C73               	btfss	___bmul@multiplier,0
  3291  0EFB  2EFD               	goto	u1131
  3292  0EFC  2EFE               	goto	u1130
  3293  0EFD                     u1131:
  3294  0EFD  2F02               	goto	l2309
  3295  0EFE                     u1130:
  3296  0EFE                     l2307:
  3297  0EFE  0870               	movf	___bmul@multiplicand,w
  3298  0EFF  00F1               	movwf	??___bmul
  3299  0F00  0871               	movf	??___bmul,w
  3300  0F01  07F2               	addwf	___bmul@product,f
  3301  0F02                     l2309:
  3302  0F02  1003               	clrc
  3303  0F03  0DF0               	rlf	___bmul@multiplicand,f
  3304  0F04                     l2311:
  3305  0F04  1003               	clrc
  3306  0F05  0CF3               	rrf	___bmul@multiplier,f
  3307  0F06  0873               	movf	___bmul@multiplier,w
  3308  0F07  1D03               	btfss	3,2
  3309  0F08  2F0A               	goto	u1141
  3310  0F09  2F0B               	goto	u1140
  3311  0F0A                     u1141:
  3312  0F0A  2EFA               	goto	l2305
  3313  0F0B                     u1140:
  3314  0F0B                     l2313:
  3315  0F0B  0872               	movf	___bmul@product,w
  3316  0F0C                     l499:
  3317  0F0C  0008               	return
  3318  0F0D                     __end_of___bmul:
  3319                           
  3320                           	psect	text8
  3321  0035                     __ptext8:	
  3322 ;; *************** function ___awdiv *****************
  3323 ;; Defined at:
  3324 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  divisor         2    0[COMMON] int 
  3327 ;;  dividend        2    2[COMMON] int 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  quotient        2    7[COMMON] int 
  3330 ;;  sign            1    6[COMMON] unsigned char 
  3331 ;;  counter         1    5[COMMON] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2    0[COMMON] int 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         4       0       0       0       0
  3342 ;;      Locals:         4       0       0       0       0
  3343 ;;      Temps:          1       0       0       0       0
  3344 ;;      Totals:         9       0       0       0       0
  3345 ;;Total ram usage:        9 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_RecibeALARMAS
  3351 ;;		_Set_DS1307_RTC_Time
  3352 ;;		_Set_DS1307_RTC_Date
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function ___awdiv
  3358  0035                     ___awdiv:
  3359  0035                     l2317:	
  3360                           ;incstack = 0
  3361                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3362                           
  3363  0035  01F6               	clrf	___awdiv@sign
  3364  0036                     l2319:
  3365  0036  1FF1               	btfss	___awdiv@divisor+1,7
  3366  0037  2839               	goto	u1151
  3367  0038  283A               	goto	u1150
  3368  0039                     u1151:
  3369  0039  2841               	goto	l2325
  3370  003A                     u1150:
  3371  003A                     l2321:
  3372  003A  09F0               	comf	___awdiv@divisor,f
  3373  003B  09F1               	comf	___awdiv@divisor+1,f
  3374  003C  0AF0               	incf	___awdiv@divisor,f
  3375  003D  1903               	skipnz
  3376  003E  0AF1               	incf	___awdiv@divisor+1,f
  3377  003F                     l2323:
  3378  003F  01F6               	clrf	___awdiv@sign
  3379  0040  0AF6               	incf	___awdiv@sign,f
  3380  0041                     l2325:
  3381  0041  1FF3               	btfss	___awdiv@dividend+1,7
  3382  0042  2844               	goto	u1161
  3383  0043  2845               	goto	u1160
  3384  0044                     u1161:
  3385  0044  284E               	goto	l2331
  3386  0045                     u1160:
  3387  0045                     l2327:
  3388  0045  09F2               	comf	___awdiv@dividend,f
  3389  0046  09F3               	comf	___awdiv@dividend+1,f
  3390  0047  0AF2               	incf	___awdiv@dividend,f
  3391  0048  1903               	skipnz
  3392  0049  0AF3               	incf	___awdiv@dividend+1,f
  3393  004A                     l2329:
  3394  004A  3001               	movlw	1
  3395  004B  00F4               	movwf	??___awdiv
  3396  004C  0874               	movf	??___awdiv,w
  3397  004D  06F6               	xorwf	___awdiv@sign,f
  3398  004E                     l2331:
  3399  004E  01F7               	clrf	___awdiv@quotient
  3400  004F  01F8               	clrf	___awdiv@quotient+1
  3401  0050                     l2333:
  3402  0050  0870               	movf	___awdiv@divisor,w
  3403  0051  0471               	iorwf	___awdiv@divisor+1,w
  3404  0052  1903               	btfsc	3,2
  3405  0053  2855               	goto	u1171
  3406  0054  2856               	goto	u1170
  3407  0055                     u1171:
  3408  0055  288D               	goto	l2353
  3409  0056                     u1170:
  3410  0056                     l2335:
  3411  0056  01F5               	clrf	___awdiv@counter
  3412  0057  0AF5               	incf	___awdiv@counter,f
  3413  0058  2864               	goto	l2341
  3414  0059                     l2337:
  3415  0059  3001               	movlw	1
  3416  005A                     u1185:
  3417  005A  1003               	clrc
  3418  005B  0DF0               	rlf	___awdiv@divisor,f
  3419  005C  0DF1               	rlf	___awdiv@divisor+1,f
  3420  005D  3EFF               	addlw	-1
  3421  005E  1D03               	skipz
  3422  005F  285A               	goto	u1185
  3423  0060                     l2339:
  3424  0060  3001               	movlw	1
  3425  0061  00F4               	movwf	??___awdiv
  3426  0062  0874               	movf	??___awdiv,w
  3427  0063  07F5               	addwf	___awdiv@counter,f
  3428  0064                     l2341:
  3429  0064  1FF1               	btfss	___awdiv@divisor+1,7
  3430  0065  2867               	goto	u1191
  3431  0066  2868               	goto	u1190
  3432  0067                     u1191:
  3433  0067  2859               	goto	l2337
  3434  0068                     u1190:
  3435  0068                     l2343:
  3436  0068  3001               	movlw	1
  3437  0069                     u1205:
  3438  0069  1003               	clrc
  3439  006A  0DF7               	rlf	___awdiv@quotient,f
  3440  006B  0DF8               	rlf	___awdiv@quotient+1,f
  3441  006C  3EFF               	addlw	-1
  3442  006D  1D03               	skipz
  3443  006E  2869               	goto	u1205
  3444  006F  0871               	movf	___awdiv@divisor+1,w
  3445  0070  0273               	subwf	___awdiv@dividend+1,w
  3446  0071  1D03               	skipz
  3447  0072  2875               	goto	u1215
  3448  0073  0870               	movf	___awdiv@divisor,w
  3449  0074  0272               	subwf	___awdiv@dividend,w
  3450  0075                     u1215:
  3451  0075  1C03               	skipc
  3452  0076  2878               	goto	u1211
  3453  0077  2879               	goto	u1210
  3454  0078                     u1211:
  3455  0078  2880               	goto	l2349
  3456  0079                     u1210:
  3457  0079                     l2345:
  3458  0079  0870               	movf	___awdiv@divisor,w
  3459  007A  02F2               	subwf	___awdiv@dividend,f
  3460  007B  0871               	movf	___awdiv@divisor+1,w
  3461  007C  1C03               	skipc
  3462  007D  03F3               	decf	___awdiv@dividend+1,f
  3463  007E  02F3               	subwf	___awdiv@dividend+1,f
  3464  007F                     l2347:
  3465  007F  1477               	bsf	___awdiv@quotient,0
  3466  0080                     l2349:
  3467  0080  3001               	movlw	1
  3468  0081                     u1225:
  3469  0081  1003               	clrc
  3470  0082  0CF1               	rrf	___awdiv@divisor+1,f
  3471  0083  0CF0               	rrf	___awdiv@divisor,f
  3472  0084  3EFF               	addlw	-1
  3473  0085  1D03               	skipz
  3474  0086  2881               	goto	u1225
  3475  0087                     l2351:
  3476  0087  3001               	movlw	1
  3477  0088  02F5               	subwf	___awdiv@counter,f
  3478  0089  1D03               	btfss	3,2
  3479  008A  288C               	goto	u1231
  3480  008B  288D               	goto	u1230
  3481  008C                     u1231:
  3482  008C  2868               	goto	l2343
  3483  008D                     u1230:
  3484  008D                     l2353:
  3485  008D  0876               	movf	___awdiv@sign,w
  3486  008E  1903               	btfsc	3,2
  3487  008F  2891               	goto	u1241
  3488  0090  2892               	goto	u1240
  3489  0091                     u1241:
  3490  0091  2897               	goto	l2357
  3491  0092                     u1240:
  3492  0092                     l2355:
  3493  0092  09F7               	comf	___awdiv@quotient,f
  3494  0093  09F8               	comf	___awdiv@quotient+1,f
  3495  0094  0AF7               	incf	___awdiv@quotient,f
  3496  0095  1903               	skipnz
  3497  0096  0AF8               	incf	___awdiv@quotient+1,f
  3498  0097                     l2357:
  3499  0097  0878               	movf	___awdiv@quotient+1,w
  3500  0098  00F1               	movwf	?___awdiv+1
  3501  0099  0877               	movf	___awdiv@quotient,w
  3502  009A  00F0               	movwf	?___awdiv
  3503  009B                     l626:
  3504  009B  0008               	return
  3505  009C                     __end_of___awdiv:
  3506                           
  3507                           	psect	text9
  3508  009C                     __ptext9:	
  3509 ;; *************** function _TECLADO *****************
  3510 ;; Defined at:
  3511 ;;		line 99 in file "main.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  Tecla           1    3[COMMON] unsigned char 
  3516 ;;  VPTOD           1    2[COMMON] unsigned char 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      unsigned char 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3526 ;;      Params:         0       0       0       0       0
  3527 ;;      Locals:         2       0       0       0       0
  3528 ;;      Temps:          2       0       0       0       0
  3529 ;;      Totals:         4       0       0       0       0
  3530 ;;Total ram usage:        4 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_RecibeALARMAS
  3536 ;;		_RecibeHHMM
  3537 ;;		_LEA_FECHA
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           
  3542                           ;psect for function _TECLADO
  3543  009C                     _TECLADO:
  3544  009C                     l2089:	
  3545                           ;incstack = 0
  3546                           ; Regs used in _TECLADO: [wreg-fsr0h+status,2+status,0]
  3547                           
  3548                           
  3549                           ;main.c: 100:     char Tecla = 1;
  3550  009C  01F3               	clrf	TECLADO@Tecla
  3551  009D  0AF3               	incf	TECLADO@Tecla,f
  3552  009E                     l2091:
  3553                           
  3554                           ;main.c: 101:     char VPTOD = 0x0E;
  3555  009E  300E               	movlw	14
  3556  009F  00F0               	movwf	??_TECLADO
  3557  00A0  0870               	movf	??_TECLADO,w
  3558  00A1  00F2               	movwf	TECLADO@VPTOD
  3559  00A2                     l192:	
  3560                           ;main.c: 103:     do {
  3561                           
  3562                           
  3563                           ;main.c: 104:         PORTD = VPTOD;
  3564  00A2  0872               	movf	TECLADO@VPTOD,w
  3565  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  3566  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  3567  00A5  0088               	movwf	8	;volatile
  3568  00A6                     l2093:
  3569                           
  3570                           ;main.c: 105:         if (PORTDbits.RD4 == 0) goto Antirrebote;
  3571  00A6  1A08               	btfsc	8,4	;volatile
  3572  00A7  28A9               	goto	u1021
  3573  00A8  28AA               	goto	u1020
  3574  00A9                     u1021:
  3575  00A9  28AB               	goto	l2097
  3576  00AA                     u1020:
  3577  00AA  28E1               	goto	l200
  3578  00AB                     l2097:
  3579                           
  3580                           ;main.c: 106:         Tecla++;
  3581  00AB  3001               	movlw	1
  3582  00AC  00F0               	movwf	??_TECLADO
  3583  00AD  0870               	movf	??_TECLADO,w
  3584  00AE  07F3               	addwf	TECLADO@Tecla,f
  3585  00AF                     l2099:
  3586                           
  3587                           ;main.c: 107:         if (PORTDbits.RD5 == 0) goto Antirrebote;
  3588  00AF  1A88               	btfsc	8,5	;volatile
  3589  00B0  28B2               	goto	u1031
  3590  00B1  28B3               	goto	u1030
  3591  00B2                     u1031:
  3592  00B2  28B4               	goto	l2103
  3593  00B3                     u1030:
  3594  00B3  28E1               	goto	l200
  3595  00B4                     l2103:
  3596                           
  3597                           ;main.c: 108:         Tecla++;
  3598  00B4  3001               	movlw	1
  3599  00B5  00F0               	movwf	??_TECLADO
  3600  00B6  0870               	movf	??_TECLADO,w
  3601  00B7  07F3               	addwf	TECLADO@Tecla,f
  3602  00B8                     l2105:
  3603                           
  3604                           ;main.c: 109:         if (PORTDbits.RD6 == 0) goto Antirrebote;
  3605  00B8  1B08               	btfsc	8,6	;volatile
  3606  00B9  28BB               	goto	u1041
  3607  00BA  28BC               	goto	u1040
  3608  00BB                     u1041:
  3609  00BB  28BD               	goto	l2109
  3610  00BC                     u1040:
  3611  00BC  28E1               	goto	l200
  3612  00BD                     l2109:
  3613                           
  3614                           ;main.c: 110:         Tecla++;
  3615  00BD  3001               	movlw	1
  3616  00BE  00F0               	movwf	??_TECLADO
  3617  00BF  0870               	movf	??_TECLADO,w
  3618  00C0  07F3               	addwf	TECLADO@Tecla,f
  3619  00C1                     l2111:
  3620                           
  3621                           ;main.c: 111:         if (PORTDbits.RD7 == 0) goto Antirrebote;
  3622  00C1  1B88               	btfsc	8,7	;volatile
  3623  00C2  28C4               	goto	u1051
  3624  00C3  28C5               	goto	u1050
  3625  00C4                     u1051:
  3626  00C4  28C6               	goto	l2115
  3627  00C5                     u1050:
  3628  00C5  28E1               	goto	l200
  3629  00C6                     l2115:
  3630                           
  3631                           ;main.c: 112:         Tecla++;
  3632  00C6  3001               	movlw	1
  3633  00C7  00F0               	movwf	??_TECLADO
  3634  00C8  0870               	movf	??_TECLADO,w
  3635  00C9  07F3               	addwf	TECLADO@Tecla,f
  3636  00CA                     l2117:
  3637                           
  3638                           ;main.c: 113:         VPTOD = (char) (VPTOD << 1) | 1;
  3639  00CA  1403               	setc
  3640  00CB  0DF2               	rlf	TECLADO@VPTOD,f
  3641                           
  3642                           ;main.c: 114:         _delay((unsigned long)((10)*(4000000/4000.0)));
  3643  00CC  300D               	movlw	13
  3644  00CD  00F1               	movwf	??_TECLADO+1
  3645  00CE  30FB               	movlw	251
  3646  00CF  00F0               	movwf	??_TECLADO
  3647  00D0                     u2147:
  3648  00D0  0BF0               	decfsz	??_TECLADO,f
  3649  00D1  28D0               	goto	u2147
  3650  00D2  0BF1               	decfsz	??_TECLADO+1,f
  3651  00D3  28D0               	goto	u2147
  3652  00D4  28D5               	nop2
  3653                           
  3654                           ;main.c: 116:     } while (Tecla < 17);
  3655  00D5  3011               	movlw	17
  3656  00D6  0273               	subwf	TECLADO@Tecla,w
  3657  00D7  1C03               	skipc
  3658  00D8  28DA               	goto	u1061
  3659  00D9  28DB               	goto	u1060
  3660  00DA                     u1061:
  3661  00DA  28A2               	goto	l192
  3662  00DB                     u1060:
  3663  00DB                     l2119:
  3664                           
  3665                           ;main.c: 117:     PORTD = 0xFF;
  3666  00DB  30FF               	movlw	255
  3667  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  3668  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  3669  00DE  0088               	movwf	8	;volatile
  3670                           
  3671                           ;main.c: 118:     return 0;
  3672  00DF  3000               	movlw	0
  3673  00E0  295A               	goto	l199
  3674  00E1                     l200:	
  3675                           ;main.c: 122:     };
  3676                           
  3677                           
  3678                           ;main.c: 121:     while (PORTDbits.RD4 == 0) {
  3679  00E1  1E08               	btfss	8,4	;volatile
  3680  00E2  28E4               	goto	u1071
  3681  00E3  28E5               	goto	u1070
  3682  00E4                     u1071:
  3683  00E4  28E1               	goto	l200
  3684  00E5                     u1070:
  3685  00E5                     l203:	
  3686                           ;main.c: 124:     };
  3687                           
  3688                           
  3689                           ;main.c: 123:     while (PORTDbits.RD5 == 0) {
  3690  00E5  1E88               	btfss	8,5	;volatile
  3691  00E6  28E8               	goto	u1081
  3692  00E7  28E9               	goto	u1080
  3693  00E8                     u1081:
  3694  00E8  28E5               	goto	l203
  3695  00E9                     u1080:
  3696  00E9                     l206:	
  3697                           ;main.c: 126:     };
  3698                           
  3699                           
  3700                           ;main.c: 125:     while (PORTDbits.RD6 == 0) {
  3701  00E9  1F08               	btfss	8,6	;volatile
  3702  00EA  28EC               	goto	u1091
  3703  00EB  28ED               	goto	u1090
  3704  00EC                     u1091:
  3705  00EC  28E9               	goto	l206
  3706  00ED                     u1090:
  3707  00ED                     l209:	
  3708                           ;main.c: 128:     };
  3709                           
  3710                           
  3711                           ;main.c: 127:     while (PORTDbits.RD7 == 0) {
  3712  00ED  1F88               	btfss	8,7	;volatile
  3713  00EE  28F0               	goto	u1101
  3714  00EF  28F1               	goto	u1100
  3715  00F0                     u1101:
  3716  00F0  28ED               	goto	l209
  3717  00F1                     u1100:
  3718  00F1                     l2123:
  3719                           
  3720                           ;main.c: 129:     _delay((unsigned long)((100)*(4000000/4000.0)));
  3721  00F1  3082               	movlw	130
  3722  00F2  00F1               	movwf	??_TECLADO+1
  3723  00F3  30DD               	movlw	221
  3724  00F4  00F0               	movwf	??_TECLADO
  3725  00F5                     u2157:
  3726  00F5  0BF0               	decfsz	??_TECLADO,f
  3727  00F6  28F5               	goto	u2157
  3728  00F7  0BF1               	decfsz	??_TECLADO+1,f
  3729  00F8  28F5               	goto	u2157
  3730  00F9  28FA               	nop2
  3731                           
  3732                           ;main.c: 130:     PORTD = 0xFF;
  3733  00FA  30FF               	movlw	255
  3734  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  3735  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  3736  00FD  0088               	movwf	8	;volatile
  3737                           
  3738                           ;main.c: 131:     switch (Tecla) {
  3739  00FE  291F               	goto	l2191
  3740  00FF                     l2125:
  3741                           
  3742                           ;main.c: 133:             return '1';
  3743  00FF  3031               	movlw	49
  3744  0100  295A               	goto	l199
  3745  0101                     l2129:
  3746                           
  3747                           ;main.c: 135:             return '2';
  3748  0101  3032               	movlw	50
  3749  0102  295A               	goto	l199
  3750  0103                     l2133:
  3751                           
  3752                           ;main.c: 137:             return '3';
  3753  0103  3033               	movlw	51
  3754  0104  295A               	goto	l199
  3755  0105                     l2137:
  3756                           
  3757                           ;main.c: 139:             return 0x0A;
  3758  0105  300A               	movlw	10
  3759  0106  295A               	goto	l199
  3760  0107                     l2141:
  3761                           
  3762                           ;main.c: 141:             return '4';
  3763  0107  3034               	movlw	52
  3764  0108  295A               	goto	l199
  3765  0109                     l2145:
  3766                           
  3767                           ;main.c: 143:             return '5';
  3768  0109  3035               	movlw	53
  3769  010A  295A               	goto	l199
  3770  010B                     l2149:
  3771                           
  3772                           ;main.c: 145:             return '6';
  3773  010B  3036               	movlw	54
  3774  010C  295A               	goto	l199
  3775  010D                     l2153:
  3776                           
  3777                           ;main.c: 147:             return 0x0B;
  3778  010D  300B               	movlw	11
  3779  010E  295A               	goto	l199
  3780  010F                     l2157:
  3781                           
  3782                           ;main.c: 149:             return '7';
  3783  010F  3037               	movlw	55
  3784  0110  295A               	goto	l199
  3785  0111                     l2161:
  3786                           
  3787                           ;main.c: 151:             return '8';
  3788  0111  3038               	movlw	56
  3789  0112  295A               	goto	l199
  3790  0113                     l2165:
  3791                           
  3792                           ;main.c: 153:             return '9';
  3793  0113  3039               	movlw	57
  3794  0114  295A               	goto	l199
  3795  0115                     l2169:
  3796                           
  3797                           ;main.c: 155:             return 0x0C;
  3798  0115  300C               	movlw	12
  3799  0116  295A               	goto	l199
  3800  0117                     l2173:
  3801                           
  3802                           ;main.c: 157:             return 'n';
  3803  0117  306E               	movlw	110
  3804  0118  295A               	goto	l199
  3805  0119                     l2177:
  3806                           
  3807                           ;main.c: 159:             return '0';
  3808  0119  3030               	movlw	48
  3809  011A  295A               	goto	l199
  3810  011B                     l2181:
  3811                           
  3812                           ;main.c: 161:             return 'f';
  3813  011B  3066               	movlw	102
  3814  011C  295A               	goto	l199
  3815  011D                     l2185:
  3816                           
  3817                           ;main.c: 163:             return 0x0D;
  3818  011D  300D               	movlw	13
  3819  011E  295A               	goto	l199
  3820  011F                     l2191:
  3821  011F  0873               	movf	TECLADO@Tecla,w
  3822  0120  00F0               	movwf	??_TECLADO
  3823  0121  01F1               	clrf	??_TECLADO+1
  3824                           
  3825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3826                           ; Switch size 1, requested type "simple"
  3827                           ; Number of cases is 1, Range of values is 0 to 0
  3828                           ; switch strategies available:
  3829                           ; Name         Instructions Cycles
  3830                           ; simple_byte            4     3 (average)
  3831                           ; direct_byte           11     8 (fixed)
  3832                           ; jumptable            260     6 (fixed)
  3833                           ;	Chosen strategy is simple_byte
  3834  0122  0871               	movf	??_TECLADO+1,w
  3835  0123  3A00               	xorlw	0	; case 0
  3836  0124  1903               	skipnz
  3837  0125  2927               	goto	l3115
  3838  0126  2959               	goto	l2193
  3839  0127                     l3115:
  3840                           
  3841                           ; Switch size 1, requested type "simple"
  3842                           ; Number of cases is 16, Range of values is 1 to 16
  3843                           ; switch strategies available:
  3844                           ; Name         Instructions Cycles
  3845                           ; simple_byte           49    25 (average)
  3846                           ; direct_byte           59    11 (fixed)
  3847                           ; jumptable            263     9 (fixed)
  3848                           ;	Chosen strategy is simple_byte
  3849  0127  0870               	movf	??_TECLADO,w
  3850  0128  3A01               	xorlw	1	; case 1
  3851  0129  1903               	skipnz
  3852  012A  28FF               	goto	l2125
  3853  012B  3A03               	xorlw	3	; case 2
  3854  012C  1903               	skipnz
  3855  012D  2901               	goto	l2129
  3856  012E  3A01               	xorlw	1	; case 3
  3857  012F  1903               	skipnz
  3858  0130  2903               	goto	l2133
  3859  0131  3A07               	xorlw	7	; case 4
  3860  0132  1903               	skipnz
  3861  0133  2905               	goto	l2137
  3862  0134  3A01               	xorlw	1	; case 5
  3863  0135  1903               	skipnz
  3864  0136  2907               	goto	l2141
  3865  0137  3A03               	xorlw	3	; case 6
  3866  0138  1903               	skipnz
  3867  0139  2909               	goto	l2145
  3868  013A  3A01               	xorlw	1	; case 7
  3869  013B  1903               	skipnz
  3870  013C  290B               	goto	l2149
  3871  013D  3A0F               	xorlw	15	; case 8
  3872  013E  1903               	skipnz
  3873  013F  290D               	goto	l2153
  3874  0140  3A01               	xorlw	1	; case 9
  3875  0141  1903               	skipnz
  3876  0142  290F               	goto	l2157
  3877  0143  3A03               	xorlw	3	; case 10
  3878  0144  1903               	skipnz
  3879  0145  2911               	goto	l2161
  3880  0146  3A01               	xorlw	1	; case 11
  3881  0147  1903               	skipnz
  3882  0148  2913               	goto	l2165
  3883  0149  3A07               	xorlw	7	; case 12
  3884  014A  1903               	skipnz
  3885  014B  2915               	goto	l2169
  3886  014C  3A01               	xorlw	1	; case 13
  3887  014D  1903               	skipnz
  3888  014E  2917               	goto	l2173
  3889  014F  3A03               	xorlw	3	; case 14
  3890  0150  1903               	skipnz
  3891  0151  2919               	goto	l2177
  3892  0152  3A01               	xorlw	1	; case 15
  3893  0153  1903               	skipnz
  3894  0154  291B               	goto	l2181
  3895  0155  3A1F               	xorlw	31	; case 16
  3896  0156  1903               	skipnz
  3897  0157  291D               	goto	l2185
  3898  0158  2959               	goto	l2193
  3899  0159                     l2193:
  3900                           
  3901                           ;main.c: 168:     return 0;
  3902  0159  3000               	movlw	0
  3903  015A                     l199:
  3904  015A  0008               	return
  3905  015B                     __end_of_TECLADO:
  3906                           
  3907                           	psect	text10
  3908  0F2F                     __ptext10:	
  3909 ;; *************** function _ESCRIBA_SEE *****************
  3910 ;; Defined at:
  3911 ;;		line 274 in file "main.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  addr            1    wreg     unsigned char 
  3914 ;;  dato            1    1[COMMON] unsigned char 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  addr            1    2[COMMON] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0, pclath, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3926 ;;      Params:         1       0       0       0       0
  3927 ;;      Locals:         1       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0
  3929 ;;      Totals:         2       0       0       0       0
  3930 ;;Total ram usage:        2 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; Hardware stack levels required when called: 1
  3933 ;; This function calls:
  3934 ;;		_I2C_Start
  3935 ;;		_I2C_Stop
  3936 ;;		_I2C_Write_Byte
  3937 ;; This function is called by:
  3938 ;;		_RecibeALARMAS
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function _ESCRIBA_SEE
  3944  0F2F                     _ESCRIBA_SEE:
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in _ESCRIBA_SEE: [wreg+status,2+status,0+pclath+cstack]
  3948                           ;ESCRIBA_SEE@addr stored from wreg
  3949  0F2F  00F2               	movwf	ESCRIBA_SEE@addr
  3950  0F30                     l2293:
  3951                           
  3952                           ;main.c: 276:     I2C_Start();
  3953  0F30  120A  158A  265D  120A  158A  	fcall	_I2C_Start
  3954  0F35                     l2297:	
  3955                           ;main.c: 279:     while (I2C_Write_Byte(0xA0 + 0) == 1) {
  3956                           
  3957                           
  3958                           ;main.c: 279:     while (I2C_Write_Byte(0xA0 + 0) == 1) {
  3959  0F35  30A0               	movlw	160
  3960  0F36  120A  158A  26A0  120A  158A  	fcall	_I2C_Write_Byte
  3961  0F3B  3A01               	xorlw	1
  3962  0F3C  1903               	skipnz
  3963  0F3D  2F3F               	goto	u1121
  3964  0F3E  2F40               	goto	u1120
  3965  0F3F                     u1121:
  3966  0F3F  2F30               	goto	l2293
  3967  0F40                     u1120:
  3968  0F40                     l2299:
  3969                           
  3970                           ;main.c: 283:     I2C_Write_Byte(0);
  3971  0F40  3000               	movlw	0
  3972  0F41  120A  158A  26A0  120A  158A  	fcall	_I2C_Write_Byte
  3973                           
  3974                           ;main.c: 284:     I2C_Write_Byte(addr);
  3975  0F46  0872               	movf	ESCRIBA_SEE@addr,w
  3976  0F47  120A  158A  26A0  120A  158A  	fcall	_I2C_Write_Byte
  3977                           
  3978                           ;main.c: 285:     I2C_Write_Byte(dato);
  3979  0F4C  0871               	movf	ESCRIBA_SEE@dato,w
  3980  0F4D  120A  158A  26A0  120A  158A  	fcall	_I2C_Write_Byte
  3981  0F52                     l2301:
  3982                           
  3983                           ;main.c: 286:     I2C_Stop();
  3984  0F52  120A  158A  2667  120A  158A  	fcall	_I2C_Stop
  3985  0F57                     l273:
  3986  0F57  0008               	return
  3987  0F58                     __end_of_ESCRIBA_SEE:
  3988                           
  3989                           	psect	text11
  3990  0FBF                     __ptext11:	
  3991 ;; *************** function _Deco_num *****************
  3992 ;; Defined at:
  3993 ;;		line 201 in file "main.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  dato            1    wreg     unsigned char 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  dato            1    2[COMMON] unsigned char 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      unsigned char 
  4000 ;; Registers used:
  4001 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4007 ;;      Params:         0       0       0       0       0
  4008 ;;      Locals:         1       0       0       0       0
  4009 ;;      Temps:          2       0       0       0       0
  4010 ;;      Totals:         3       0       0       0       0
  4011 ;;Total ram usage:        3 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_RecibeALARMAS
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _Deco_num
  4022  0FBF                     _Deco_num:
  4023                           
  4024                           ;incstack = 0
  4025                           ; Regs used in _Deco_num: [wreg-fsr0h+status,2+status,0]
  4026                           ;Deco_num@dato stored from wreg
  4027  0FBF  00F2               	movwf	Deco_num@dato
  4028  0FC0                     l2203:
  4029                           
  4030                           ;main.c: 202:     switch (dato) {
  4031  0FC0  2FD7               	goto	l2251
  4032  0FC1                     l2205:
  4033                           
  4034                           ;main.c: 204:             return '0';
  4035  0FC1  3030               	movlw	48
  4036  0FC2  2FFF               	goto	l238
  4037  0FC3                     l2209:
  4038                           
  4039                           ;main.c: 206:             return '1';
  4040  0FC3  3031               	movlw	49
  4041  0FC4  2FFF               	goto	l238
  4042  0FC5                     l2213:
  4043                           
  4044                           ;main.c: 208:             return '2';
  4045  0FC5  3032               	movlw	50
  4046  0FC6  2FFF               	goto	l238
  4047  0FC7                     l2217:
  4048                           
  4049                           ;main.c: 210:             return '3';
  4050  0FC7  3033               	movlw	51
  4051  0FC8  2FFF               	goto	l238
  4052  0FC9                     l2221:
  4053                           
  4054                           ;main.c: 212:             return '4';
  4055  0FC9  3034               	movlw	52
  4056  0FCA  2FFF               	goto	l238
  4057  0FCB                     l2225:
  4058                           
  4059                           ;main.c: 214:             return '5';
  4060  0FCB  3035               	movlw	53
  4061  0FCC  2FFF               	goto	l238
  4062  0FCD                     l2229:
  4063                           
  4064                           ;main.c: 216:             return '6';
  4065  0FCD  3036               	movlw	54
  4066  0FCE  2FFF               	goto	l238
  4067  0FCF                     l2233:
  4068                           
  4069                           ;main.c: 218:             return '7';
  4070  0FCF  3037               	movlw	55
  4071  0FD0  2FFF               	goto	l238
  4072  0FD1                     l2237:
  4073                           
  4074                           ;main.c: 220:             return '8';
  4075  0FD1  3038               	movlw	56
  4076  0FD2  2FFF               	goto	l238
  4077  0FD3                     l2241:
  4078                           
  4079                           ;main.c: 222:             return '9';
  4080  0FD3  3039               	movlw	57
  4081  0FD4  2FFF               	goto	l238
  4082  0FD5                     l2245:
  4083                           
  4084                           ;main.c: 224:             return ' ';
  4085  0FD5  3020               	movlw	32
  4086  0FD6  2FFF               	goto	l238
  4087  0FD7                     l2251:
  4088  0FD7  0872               	movf	Deco_num@dato,w
  4089  0FD8  00F0               	movwf	??_Deco_num
  4090  0FD9  01F1               	clrf	??_Deco_num+1
  4091                           
  4092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4093                           ; Switch size 1, requested type "simple"
  4094                           ; Number of cases is 1, Range of values is 0 to 0
  4095                           ; switch strategies available:
  4096                           ; Name         Instructions Cycles
  4097                           ; simple_byte            4     3 (average)
  4098                           ; direct_byte           11     8 (fixed)
  4099                           ; jumptable            260     6 (fixed)
  4100                           ;	Chosen strategy is simple_byte
  4101  0FDA  0871               	movf	??_Deco_num+1,w
  4102  0FDB  3A00               	xorlw	0	; case 0
  4103  0FDC  1903               	skipnz
  4104  0FDD  2FDF               	goto	l3117
  4105  0FDE  2FD5               	goto	l2245
  4106  0FDF                     l3117:
  4107                           
  4108                           ; Switch size 1, requested type "simple"
  4109                           ; Number of cases is 10, Range of values is 0 to 9
  4110                           ; switch strategies available:
  4111                           ; Name         Instructions Cycles
  4112                           ; simple_byte           31    16 (average)
  4113                           ; direct_byte           38     8 (fixed)
  4114                           ; jumptable            260     6 (fixed)
  4115                           ;	Chosen strategy is simple_byte
  4116  0FDF  0870               	movf	??_Deco_num,w
  4117  0FE0  3A00               	xorlw	0	; case 0
  4118  0FE1  1903               	skipnz
  4119  0FE2  2FC1               	goto	l2205
  4120  0FE3  3A01               	xorlw	1	; case 1
  4121  0FE4  1903               	skipnz
  4122  0FE5  2FC3               	goto	l2209
  4123  0FE6  3A03               	xorlw	3	; case 2
  4124  0FE7  1903               	skipnz
  4125  0FE8  2FC5               	goto	l2213
  4126  0FE9  3A01               	xorlw	1	; case 3
  4127  0FEA  1903               	skipnz
  4128  0FEB  2FC7               	goto	l2217
  4129  0FEC  3A07               	xorlw	7	; case 4
  4130  0FED  1903               	skipnz
  4131  0FEE  2FC9               	goto	l2221
  4132  0FEF  3A01               	xorlw	1	; case 5
  4133  0FF0  1903               	skipnz
  4134  0FF1  2FCB               	goto	l2225
  4135  0FF2  3A03               	xorlw	3	; case 6
  4136  0FF3  1903               	skipnz
  4137  0FF4  2FCD               	goto	l2229
  4138  0FF5  3A01               	xorlw	1	; case 7
  4139  0FF6  1903               	skipnz
  4140  0FF7  2FCF               	goto	l2233
  4141  0FF8  3A0F               	xorlw	15	; case 8
  4142  0FF9  1903               	skipnz
  4143  0FFA  2FD1               	goto	l2237
  4144  0FFB  3A01               	xorlw	1	; case 9
  4145  0FFC  1903               	skipnz
  4146  0FFD  2FD3               	goto	l2241
  4147  0FFE  2FD5               	goto	l2245
  4148  0FFF                     l238:
  4149  0FFF  0008               	return
  4150  1000                     __end_of_Deco_num:
  4151                           
  4152                           	psect	text12
  4153  0F89                     __ptext12:	
  4154 ;; *************** function _Read_Byte_From_DS1307_RTC *****************
  4155 ;; Defined at:
  4156 ;;		line 37 in file "./DS1307.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  Address         1    wreg     unsigned char 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  Address         1    2[COMMON] unsigned char 
  4161 ;;  Byte            1    3[COMMON] unsigned char 
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      unsigned char 
  4164 ;; Registers used:
  4165 ;;		wreg, status,2, status,0, pclath, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4171 ;;      Params:         0       0       0       0       0
  4172 ;;      Locals:         2       0       0       0       0
  4173 ;;      Temps:          1       0       0       0       0
  4174 ;;      Totals:         3       0       0       0       0
  4175 ;;Total ram usage:        3 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 1
  4178 ;; This function calls:
  4179 ;;		_I2C_ReStart
  4180 ;;		_I2C_Read_Byte
  4181 ;;		_I2C_Send_NACK
  4182 ;;		_I2C_Start
  4183 ;;		_I2C_Stop
  4184 ;;		_I2C_Write_Byte
  4185 ;; This function is called by:
  4186 ;;		_main
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           
  4191                           ;psect for function _Read_Byte_From_DS1307_RTC
  4192  0F89                     _Read_Byte_From_DS1307_RTC:
  4193                           
  4194                           ;incstack = 0
  4195                           ; Regs used in _Read_Byte_From_DS1307_RTC: [wreg+status,2+status,0+pclath+cstack]
  4196                           ;Read_Byte_From_DS1307_RTC@Address stored from wreg
  4197  0F89  00F2               	movwf	Read_Byte_From_DS1307_RTC@Address
  4198  0F8A                     l2371:
  4199  0F8A                     l2373:
  4200                           
  4201                           ;./DS1307.c: 41:  I2C_Start();
  4202  0F8A  120A  158A  265D  120A  158A  	fcall	_I2C_Start
  4203  0F8F                     l2377:	
  4204                           ;./DS1307.c: 44:  while(I2C_Write_Byte(0xD0 + 0) == 1)
  4205                           
  4206                           
  4207                           ;./DS1307.c: 44:  while(I2C_Write_Byte(0xD0 + 0) == 1)
  4208  0F8F  30D0               	movlw	208
  4209  0F90  120A  158A  26A0  120A  158A  	fcall	_I2C_Write_Byte
  4210  0F95  3A01               	xorlw	1
  4211  0F96  1903               	skipnz
  4212  0F97  2F99               	goto	u1261
  4213  0F98  2F9A               	goto	u1260
  4214  0F99                     u1261:
  4215  0F99  2F8A               	goto	l2373
  4216  0F9A                     u1260:
  4217  0F9A                     l2379:
  4218                           
  4219                           ;./DS1307.c: 47:  I2C_Write_Byte(Address);
  4220  0F9A  0872               	movf	Read_Byte_From_DS1307_RTC@Address,w
  4221  0F9B  120A  158A  26A0  120A  158A  	fcall	_I2C_Write_Byte
  4222  0FA0                     l2381:
  4223                           
  4224                           ;./DS1307.c: 48:  I2C_ReStart();
  4225  0FA0  120A  158A  2653  120A  158A  	fcall	_I2C_ReStart
  4226  0FA5                     l2383:
  4227                           
  4228                           ;./DS1307.c: 51:  I2C_Write_Byte(0xD0 + 1);
  4229  0FA5  30D1               	movlw	209
  4230  0FA6  120A  158A  26A0  120A  158A  	fcall	_I2C_Write_Byte
  4231  0FAB                     l2385:
  4232                           
  4233                           ;./DS1307.c: 53:  Byte = I2C_Read_Byte();
  4234  0FAB  120A  158A  2671  120A  158A  	fcall	_I2C_Read_Byte
  4235  0FB0  00F1               	movwf	??_Read_Byte_From_DS1307_RTC
  4236  0FB1  0871               	movf	??_Read_Byte_From_DS1307_RTC,w
  4237  0FB2  00F3               	movwf	Read_Byte_From_DS1307_RTC@Byte
  4238  0FB3                     l2387:
  4239                           
  4240                           ;./DS1307.c: 55:  I2C_Send_NACK();
  4241  0FB3  120A  158A  267C  120A  158A  	fcall	_I2C_Send_NACK
  4242  0FB8                     l2389:
  4243                           
  4244                           ;./DS1307.c: 56:  I2C_Stop();
  4245  0FB8  120A  158A  2667  120A  158A  	fcall	_I2C_Stop
  4246  0FBD                     l2391:
  4247                           
  4248                           ;./DS1307.c: 58:  return Byte;
  4249  0FBD  0873               	movf	Read_Byte_From_DS1307_RTC@Byte,w
  4250  0FBE                     l117:
  4251  0FBE  0008               	return
  4252  0FBF                     __end_of_Read_Byte_From_DS1307_RTC:
  4253                           
  4254                           	psect	text13
  4255  0EA0                     __ptext13:	
  4256 ;; *************** function _I2C_Write_Byte *****************
  4257 ;; Defined at:
  4258 ;;		line 64 in file "./I2C.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  Byte            1    wreg     unsigned char 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  Byte            1    0[COMMON] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      unsigned char 
  4265 ;; Registers used:
  4266 ;;		wreg
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4272 ;;      Params:         0       0       0       0       0
  4273 ;;      Locals:         1       0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0
  4275 ;;      Totals:         1       0       0       0       0
  4276 ;;Total ram usage:        1 bytes
  4277 ;; Hardware stack levels used: 1
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_Read_Byte_From_DS1307_RTC
  4282 ;;		_ESCRIBA_SEE
  4283 ;;		_Write_Byte_To_DS1307_RTC
  4284 ;;		_Write_Bytes_To_DS1307_RTC
  4285 ;;		_Read_Bytes_From_DS1307_RTC
  4286 ;;		_LEA_SEE
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           
  4291                           ;psect for function _I2C_Write_Byte
  4292  0EA0                     _I2C_Write_Byte:
  4293                           
  4294                           ;incstack = 0
  4295                           ; Regs used in _I2C_Write_Byte: [wreg]
  4296                           ;I2C_Write_Byte@Byte stored from wreg
  4297  0EA0  00F0               	movwf	I2C_Write_Byte@Byte
  4298  0EA1                     l2061:
  4299                           
  4300                           ;./I2C.c: 64: char I2C_Write_Byte(unsigned char Byte);./I2C.c: 65: {;./I2C.c: 66:  SSPBU
      +                          F = Byte;
  4301  0EA1  0870               	movf	I2C_Write_Byte@Byte,w
  4302  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  4304  0EA4  0093               	movwf	19	;volatile
  4305  0EA5                     l92:	
  4306                           ;./I2C.c: 67:  while(!SSPIF);
  4307                           
  4308  0EA5  1D8C               	btfss	12,3	;volatile
  4309  0EA6  2EA8               	goto	u961
  4310  0EA7  2EA9               	goto	u960
  4311  0EA8                     u961:
  4312  0EA8  2EA5               	goto	l92
  4313  0EA9                     u960:
  4314  0EA9                     l94:
  4315                           
  4316                           ;./I2C.c: 68:  SSPIF = 0;
  4317  0EA9  118C               	bcf	12,3	;volatile
  4318  0EAA                     l2063:
  4319                           
  4320                           ;./I2C.c: 70:  return ACKSTAT;
  4321  0EAA  3000               	movlw	0
  4322  0EAB  1683               	bsf	3,5	;RP0=1, select bank1
  4323  0EAC  1303               	bcf	3,6	;RP1=0, select bank1
  4324  0EAD  1B11               	btfsc	17,6	;volatile
  4325  0EAE  3001               	movlw	1
  4326  0EAF                     l95:
  4327  0EAF  0008               	return
  4328  0EB0                     __end_of_I2C_Write_Byte:
  4329                           
  4330                           	psect	text14
  4331  0E67                     __ptext14:	
  4332 ;; *************** function _I2C_Stop *****************
  4333 ;; Defined at:
  4334 ;;		line 35 in file "./I2C.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		None
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0
  4351 ;;      Totals:         0       0       0       0       0
  4352 ;;Total ram usage:        0 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_Read_Byte_From_DS1307_RTC
  4358 ;;		_ESCRIBA_SEE
  4359 ;;		_Write_Byte_To_DS1307_RTC
  4360 ;;		_Write_Bytes_To_DS1307_RTC
  4361 ;;		_Read_Bytes_From_DS1307_RTC
  4362 ;;		_LEA_SEE
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           
  4367                           ;psect for function _I2C_Stop
  4368  0E67                     _I2C_Stop:
  4369  0E67                     l2059:	
  4370                           ;incstack = 0
  4371                           ; Regs used in _I2C_Stop: []
  4372                           
  4373                           
  4374                           ;./I2C.c: 37:  PEN = 1;
  4375  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  4376  0E68  1303               	bcf	3,6	;RP1=0, select bank1
  4377  0E69  1511               	bsf	17,2	;volatile
  4378  0E6A                     l74:	
  4379                           ;./I2C.c: 38:  while(!SSPIF);
  4380                           
  4381  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  4382  0E6B  1D8C               	btfss	12,3	;volatile
  4383  0E6C  2E6E               	goto	u951
  4384  0E6D  2E6F               	goto	u950
  4385  0E6E                     u951:
  4386  0E6E  2E6A               	goto	l74
  4387  0E6F                     u950:
  4388  0E6F                     l76:
  4389                           
  4390                           ;./I2C.c: 39:  SSPIF = 0;
  4391  0E6F  118C               	bcf	12,3	;volatile
  4392  0E70                     l77:
  4393  0E70  0008               	return
  4394  0E71                     __end_of_I2C_Stop:
  4395                           
  4396                           	psect	text15
  4397  0E5D                     __ptext15:	
  4398 ;; *************** function _I2C_Start *****************
  4399 ;; Defined at:
  4400 ;;		line 17 in file "./I2C.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		None
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4414 ;;      Params:         0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0
  4417 ;;      Totals:         0       0       0       0       0
  4418 ;;Total ram usage:        0 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_Read_Byte_From_DS1307_RTC
  4424 ;;		_ESCRIBA_SEE
  4425 ;;		_Write_Byte_To_DS1307_RTC
  4426 ;;		_Write_Bytes_To_DS1307_RTC
  4427 ;;		_Read_Bytes_From_DS1307_RTC
  4428 ;;		_LEA_SEE
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           
  4433                           ;psect for function _I2C_Start
  4434  0E5D                     _I2C_Start:
  4435  0E5D                     l2057:	
  4436                           ;incstack = 0
  4437                           ; Regs used in _I2C_Start: []
  4438                           
  4439                           
  4440                           ;./I2C.c: 19:  SEN = 1;
  4441  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  4442  0E5E  1303               	bcf	3,6	;RP1=0, select bank1
  4443  0E5F  1411               	bsf	17,0	;volatile
  4444  0E60                     l62:	
  4445                           ;./I2C.c: 20:  while(!SSPIF);
  4446                           
  4447  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  4448  0E61  1D8C               	btfss	12,3	;volatile
  4449  0E62  2E64               	goto	u941
  4450  0E63  2E65               	goto	u940
  4451  0E64                     u941:
  4452  0E64  2E60               	goto	l62
  4453  0E65                     u940:
  4454  0E65                     l64:
  4455                           
  4456                           ;./I2C.c: 21:  SSPIF = 0;
  4457  0E65  118C               	bcf	12,3	;volatile
  4458  0E66                     l65:
  4459  0E66  0008               	return
  4460  0E67                     __end_of_I2C_Start:
  4461                           
  4462                           	psect	text16
  4463  0E7C                     __ptext16:	
  4464 ;; *************** function _I2C_Send_NACK *****************
  4465 ;; Defined at:
  4466 ;;		line 54 in file "./I2C.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		None
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4480 ;;      Params:         0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0
  4483 ;;      Totals:         0       0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_Read_Byte_From_DS1307_RTC
  4490 ;;		_Read_Bytes_From_DS1307_RTC
  4491 ;;		_LEA_SEE
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function _I2C_Send_NACK
  4497  0E7C                     _I2C_Send_NACK:
  4498  0E7C                     l2081:	
  4499                           ;incstack = 0
  4500                           ; Regs used in _I2C_Send_NACK: []
  4501                           
  4502                           
  4503                           ;./I2C.c: 56:  ACKDT = 1;
  4504  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  4505  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  4506  0E7E  1691               	bsf	17,5	;volatile
  4507                           
  4508                           ;./I2C.c: 57:  ACKEN = 1;
  4509  0E7F  1611               	bsf	17,4	;volatile
  4510  0E80                     l86:	
  4511                           ;./I2C.c: 58:  while(!SSPIF);
  4512                           
  4513  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  4514  0E81  1D8C               	btfss	12,3	;volatile
  4515  0E82  2E84               	goto	u1001
  4516  0E83  2E85               	goto	u1000
  4517  0E84                     u1001:
  4518  0E84  2E80               	goto	l86
  4519  0E85                     u1000:
  4520  0E85                     l88:
  4521                           
  4522                           ;./I2C.c: 59:  SSPIF = 0;
  4523  0E85  118C               	bcf	12,3	;volatile
  4524  0E86                     l89:
  4525  0E86  0008               	return
  4526  0E87                     __end_of_I2C_Send_NACK:
  4527                           
  4528                           	psect	text17
  4529  0E71                     __ptext17:	
  4530 ;; *************** function _I2C_Read_Byte *****************
  4531 ;; Defined at:
  4532 ;;		line 75 in file "./I2C.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      unsigned char 
  4539 ;; Registers used:
  4540 ;;		wreg
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4546 ;;      Params:         0       0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0
  4549 ;;      Totals:         0       0       0       0       0
  4550 ;;Total ram usage:        0 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_Read_Byte_From_DS1307_RTC
  4556 ;;		_Read_Bytes_From_DS1307_RTC
  4557 ;;		_LEA_SEE
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _I2C_Read_Byte
  4563  0E71                     _I2C_Read_Byte:
  4564  0E71                     l2083:	
  4565                           ;incstack = 0
  4566                           ; Regs used in _I2C_Read_Byte: [wreg]
  4567                           
  4568                           
  4569                           ;./I2C.c: 77:  RCEN = 1;
  4570  0E71  1683               	bsf	3,5	;RP0=1, select bank1
  4571  0E72  1303               	bcf	3,6	;RP1=0, select bank1
  4572  0E73  1591               	bsf	17,3	;volatile
  4573  0E74                     l98:	
  4574                           ;./I2C.c: 78:  while(!SSPIF);
  4575                           
  4576  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0E75  1D8C               	btfss	12,3	;volatile
  4578  0E76  2E78               	goto	u1011
  4579  0E77  2E79               	goto	u1010
  4580  0E78                     u1011:
  4581  0E78  2E74               	goto	l98
  4582  0E79                     u1010:
  4583  0E79                     l100:
  4584                           
  4585                           ;./I2C.c: 79:  SSPIF = 0;
  4586  0E79  118C               	bcf	12,3	;volatile
  4587  0E7A                     l2085:
  4588                           
  4589                           ;./I2C.c: 81:     return SSPBUF;
  4590  0E7A  0813               	movf	19,w	;volatile
  4591  0E7B                     l101:
  4592  0E7B  0008               	return
  4593  0E7C                     __end_of_I2C_Read_Byte:
  4594                           
  4595                           	psect	text18
  4596  0E53                     __ptext18:	
  4597 ;; *************** function _I2C_ReStart *****************
  4598 ;; Defined at:
  4599 ;;		line 26 in file "./I2C.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		None
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4613 ;;      Params:         0       0       0       0       0
  4614 ;;      Locals:         0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0
  4616 ;;      Totals:         0       0       0       0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_Read_Byte_From_DS1307_RTC
  4623 ;;		_Read_Bytes_From_DS1307_RTC
  4624 ;;		_LEA_SEE
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           
  4629                           ;psect for function _I2C_ReStart
  4630  0E53                     _I2C_ReStart:
  4631  0E53                     l2077:	
  4632                           ;incstack = 0
  4633                           ; Regs used in _I2C_ReStart: []
  4634                           
  4635                           
  4636                           ;./I2C.c: 28:  RSEN = 1;
  4637  0E53  1683               	bsf	3,5	;RP0=1, select bank1
  4638  0E54  1303               	bcf	3,6	;RP1=0, select bank1
  4639  0E55  1491               	bsf	17,1	;volatile
  4640  0E56                     l68:	
  4641                           ;./I2C.c: 29:  while(!SSPIF);
  4642                           
  4643  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0E57  1D8C               	btfss	12,3	;volatile
  4645  0E58  2E5A               	goto	u981
  4646  0E59  2E5B               	goto	u980
  4647  0E5A                     u981:
  4648  0E5A  2E56               	goto	l68
  4649  0E5B                     u980:
  4650  0E5B                     l70:
  4651                           
  4652                           ;./I2C.c: 30:  SSPIF = 0;
  4653  0E5B  118C               	bcf	12,3	;volatile
  4654  0E5C                     l71:
  4655  0E5C  0008               	return
  4656  0E5D                     __end_of_I2C_ReStart:
  4657                           
  4658                           	psect	text19
  4659  0003                     __ptext19:	
  4660 ;; *************** function _MSG_Term *****************
  4661 ;; Defined at:
  4662 ;;		line 94 in file "main.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  s               2    1[COMMON] PTR const unsigned char 
  4665 ;;		 -> STR_36(2), STR_35(17), STR_34(17), 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4677 ;;      Params:         2       0       0       0       0
  4678 ;;      Locals:         0       0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0
  4680 ;;      Totals:         2       0       0       0       0
  4681 ;;Total ram usage:        2 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 1
  4684 ;; This function calls:
  4685 ;;		_SEND_Tx
  4686 ;; This function is called by:
  4687 ;;		_main
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           
  4692                           ;psect for function _MSG_Term
  4693  0003                     _MSG_Term:
  4694  0003                     l2449:	
  4695                           ;incstack = 0
  4696                           ; Regs used in _MSG_Term: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4697                           
  4698                           
  4699                           ;main.c: 95:     while (*s) SEND_Tx(*s++);
  4700  0003  2818               	goto	l2455
  4701  0004                     l2451:
  4702  0004  0872               	movf	MSG_Term@s+1,w
  4703  0005  00FF               	movwf	btemp+1
  4704  0006  0871               	movf	MSG_Term@s,w
  4705  0007  0084               	movwf	4
  4706  0008  120A  158A  2134  120A  118A  	fcall	stringtab
  4707  000D  120A  158A  2687  120A  118A  	fcall	_SEND_Tx
  4708  0012                     l2453:
  4709  0012  3001               	movlw	1
  4710  0013  07F1               	addwf	MSG_Term@s,f
  4711  0014  1803               	skipnc
  4712  0015  0AF2               	incf	MSG_Term@s+1,f
  4713  0016  3000               	movlw	0
  4714  0017  07F2               	addwf	MSG_Term@s+1,f
  4715  0018                     l2455:
  4716  0018  0872               	movf	MSG_Term@s+1,w
  4717  0019  1283               	bcf	3,5	;RP0=0, select bank0
  4718  001A  1303               	bcf	3,6	;RP1=0, select bank0
  4719  001B  00FF               	movwf	btemp+1
  4720  001C  0871               	movf	MSG_Term@s,w
  4721  001D  0084               	movwf	4
  4722  001E  120A  158A  2134  120A  118A  	fcall	stringtab
  4723  0023  3A00               	xorlw	0
  4724  0024  1D03               	skipz
  4725  0025  2827               	goto	u1311
  4726  0026  2828               	goto	u1310
  4727  0027                     u1311:
  4728  0027  2804               	goto	l2451
  4729  0028                     u1310:
  4730  0028                     l2457:
  4731                           
  4732                           ;main.c: 96:     SEND_Tx(0x0D);
  4733  0028  300D               	movlw	13
  4734  0029  120A  158A  2687  120A  118A  	fcall	_SEND_Tx
  4735                           
  4736                           ;main.c: 97:     SEND_Tx(0x0A);
  4737  002E  300A               	movlw	10
  4738  002F  120A  158A  2687  120A  118A  	fcall	_SEND_Tx
  4739  0034                     l189:
  4740  0034  0008               	return
  4741  0035                     __end_of_MSG_Term:
  4742                           
  4743                           	psect	text20
  4744  0E87                     __ptext20:	
  4745 ;; *************** function _SEND_Tx *****************
  4746 ;; Defined at:
  4747 ;;		line 88 in file "main.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  dato            1    wreg     unsigned char 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  dato            1    0[COMMON] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4761 ;;      Params:         0       0       0       0       0
  4762 ;;      Locals:         1       0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0
  4764 ;;      Totals:         1       0       0       0       0
  4765 ;;Total ram usage:        1 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_MSG_Term
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function _SEND_Tx
  4776  0E87                     _SEND_Tx:
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in _SEND_Tx: [wreg]
  4780                           ;SEND_Tx@dato stored from wreg
  4781  0E87  00F0               	movwf	SEND_Tx@dato
  4782  0E88                     l1023:
  4783  0E88                     l180:	
  4784                           ;main.c: 90:     };
  4785                           
  4786                           
  4787                           ;main.c: 89:     while (TXSTAbits.TRMT == 0) {
  4788  0E88  1683               	bsf	3,5	;RP0=1, select bank1
  4789  0E89  1303               	bcf	3,6	;RP1=0, select bank1
  4790  0E8A  1C98               	btfss	24,1	;volatile
  4791  0E8B  2E8D               	goto	u91
  4792  0E8C  2E8E               	goto	u90
  4793  0E8D                     u91:
  4794  0E8D  2E88               	goto	l180
  4795  0E8E                     u90:
  4796  0E8E                     l1025:
  4797                           
  4798                           ;main.c: 91:     TXREG = dato;
  4799  0E8E  0870               	movf	SEND_Tx@dato,w
  4800  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  4801  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  4802  0E91  0099               	movwf	25	;volatile
  4803  0E92                     l183:
  4804  0E92  0008               	return
  4805  0E93                     __end_of_SEND_Tx:
  4806                           
  4807                           	psect	text21
  4808  0E4B                     __ptext21:	
  4809 ;; *************** function _MCU_Init *****************
  4810 ;; Defined at:
  4811 ;;		line 82 in file "main.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      void 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         0       0       0       0       0
  4826 ;;      Locals:         0       0       0       0       0
  4827 ;;      Temps:          0       0       0       0       0
  4828 ;;      Totals:         0       0       0       0       0
  4829 ;;Total ram usage:        0 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_main
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           
  4839                           ;psect for function _MCU_Init
  4840  0E4B                     _MCU_Init:
  4841  0E4B                     l1397:	
  4842                           ;incstack = 0
  4843                           ; Regs used in _MCU_Init: [wreg+status,2]
  4844                           
  4845                           
  4846                           ;main.c: 83:     TRISC = 0xB8;
  4847  0E4B  30B8               	movlw	184
  4848  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  4849  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  4850  0E4E  0087               	movwf	7	;volatile
  4851  0E4F                     l1399:
  4852                           
  4853                           ;main.c: 84:     TRISB = 0x00;
  4854  0E4F  0186               	clrf	6	;volatile
  4855  0E50                     l1401:
  4856                           
  4857                           ;main.c: 85:     TRISD = 0xF0;
  4858  0E50  30F0               	movlw	240
  4859  0E51  0088               	movwf	8	;volatile
  4860  0E52                     l177:
  4861  0E52  0008               	return
  4862  0E53                     __end_of_MCU_Init:
  4863                           
  4864                           	psect	text22
  4865  0F0D                     __ptext22:	
  4866 ;; *************** function _LCD_Init *****************
  4867 ;; Defined at:
  4868 ;;		line 53 in file "main.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4882 ;;      Params:         0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0
  4884 ;;      Temps:          2       0       0       0       0
  4885 ;;      Totals:         2       0       0       0       0
  4886 ;;Total ram usage:        2 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 1
  4889 ;; This function calls:
  4890 ;;		_SEND_CMD
  4891 ;; This function is called by:
  4892 ;;		_main
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _LCD_Init
  4898  0F0D                     _LCD_Init:
  4899  0F0D                     l2439:	
  4900                           ;incstack = 0
  4901                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4902                           
  4903                           
  4904                           ;main.c: 54:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4905  0F0D  301A               	movlw	26
  4906  0F0E  00F4               	movwf	??_LCD_Init+1
  4907  0F0F  30F8               	movlw	248
  4908  0F10  00F3               	movwf	??_LCD_Init
  4909  0F11                     u2167:
  4910  0F11  0BF3               	decfsz	??_LCD_Init,f
  4911  0F12  2F11               	goto	u2167
  4912  0F13  0BF4               	decfsz	??_LCD_Init+1,f
  4913  0F14  2F11               	goto	u2167
  4914  0F15  0000               	nop
  4915  0F16                     l2441:
  4916                           
  4917                           ;main.c: 55:     SEND_CMD(0x38);
  4918  0F16  3038               	movlw	56
  4919  0F17  120A  158A  26D2  120A  158A  	fcall	_SEND_CMD
  4920  0F1C                     l2443:
  4921                           
  4922                           ;main.c: 56:     SEND_CMD(0x0C);
  4923  0F1C  300C               	movlw	12
  4924  0F1D  120A  158A  26D2  120A  158A  	fcall	_SEND_CMD
  4925  0F22                     l2445:
  4926                           
  4927                           ;main.c: 57:     SEND_CMD(0x06);
  4928  0F22  3006               	movlw	6
  4929  0F23  120A  158A  26D2  120A  158A  	fcall	_SEND_CMD
  4930  0F28                     l2447:
  4931                           
  4932                           ;main.c: 58:     SEND_CMD(0x01);
  4933  0F28  3001               	movlw	1
  4934  0F29  120A  158A  26D2  120A  158A  	fcall	_SEND_CMD
  4935  0F2E                     l165:
  4936  0F2E  0008               	return
  4937  0F2F                     __end_of_LCD_Init:
  4938                           
  4939                           	psect	text23
  4940  0ED2                     __ptext23:	
  4941 ;; *************** function _SEND_CMD *****************
  4942 ;; Defined at:
  4943 ;;		line 34 in file "main.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  dato            1    wreg     unsigned char 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  dato            1    2[COMMON] unsigned char 
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4957 ;;      Params:         0       0       0       0       0
  4958 ;;      Locals:         1       0       0       0       0
  4959 ;;      Temps:          2       0       0       0       0
  4960 ;;      Totals:         3       0       0       0       0
  4961 ;;Total ram usage:        3 bytes
  4962 ;; Hardware stack levels used: 1
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_LCD_Init
  4967 ;;		_SEND_MSJ
  4968 ;;		_RecibeALARMAS
  4969 ;;		_main
  4970 ;;		_RecibeHHMM
  4971 ;;		_LEA_FECHA
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           
  4976                           ;psect for function _SEND_CMD
  4977  0ED2                     _SEND_CMD:
  4978                           
  4979                           ;incstack = 0
  4980                           ; Regs used in _SEND_CMD: [wreg]
  4981                           ;SEND_CMD@dato stored from wreg
  4982  0ED2  00F2               	movwf	SEND_CMD@dato
  4983  0ED3                     l2045:
  4984                           
  4985                           ;main.c: 35:     PORTCbits.RC1 = 0;
  4986  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  4987  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  4988  0ED5  1087               	bcf	7,1	;volatile
  4989                           
  4990                           ;main.c: 36:     PORTCbits.RC0 = 0;
  4991  0ED6  1007               	bcf	7,0	;volatile
  4992                           
  4993                           ;main.c: 37:     PORTCbits.RC2 = 1;
  4994  0ED7  1507               	bsf	7,2	;volatile
  4995  0ED8                     l2047:
  4996                           
  4997                           ;main.c: 38:     PORTB = dato;
  4998  0ED8  0872               	movf	SEND_CMD@dato,w
  4999  0ED9  0086               	movwf	6	;volatile
  5000  0EDA                     l2049:
  5001                           
  5002                           ;main.c: 39:     PORTCbits.RC2 = 0;
  5003  0EDA  1107               	bcf	7,2	;volatile
  5004                           
  5005                           ;main.c: 40:     _delay((unsigned long)((2)*(4000000/4000.0)));
  5006  0EDB  3003               	movlw	3
  5007  0EDC  00F1               	movwf	??_SEND_CMD+1
  5008  0EDD  3097               	movlw	151
  5009  0EDE  00F0               	movwf	??_SEND_CMD
  5010  0EDF                     u2177:
  5011  0EDF  0BF0               	decfsz	??_SEND_CMD,f
  5012  0EE0  2EDF               	goto	u2177
  5013  0EE1  0BF1               	decfsz	??_SEND_CMD+1,f
  5014  0EE2  2EDF               	goto	u2177
  5015  0EE3  2EE4               	nop2
  5016  0EE4                     l159:
  5017  0EE4  0008               	return
  5018  0EE5                     __end_of_SEND_CMD:
  5019                           
  5020                           	psect	text24
  5021  0E93                     __ptext24:	
  5022 ;; *************** function _InitI2C *****************
  5023 ;; Defined at:
  5024 ;;		line 5 in file "./I2C.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;		None
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      void 
  5031 ;; Registers used:
  5032 ;;		wreg
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5038 ;;      Params:         0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0
  5040 ;;      Temps:          0       0       0       0       0
  5041 ;;      Totals:         0       0       0       0       0
  5042 ;;Total ram usage:        0 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_main
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function _InitI2C
  5053  0E93                     _InitI2C:
  5054  0E93                     l1299:	
  5055                           ;incstack = 0
  5056                           ; Regs used in _InitI2C: [wreg]
  5057                           
  5058                           
  5059                           ;./I2C.c: 7:  TRISCbits.TRISC4 = 1;
  5060  0E93  1683               	bsf	3,5	;RP0=1, select bank1
  5061  0E94  1303               	bcf	3,6	;RP1=0, select bank1
  5062  0E95  1607               	bsf	7,4	;volatile
  5063                           
  5064                           ;./I2C.c: 8:  TRISCbits.TRISC3 = 1;
  5065  0E96  1587               	bsf	7,3	;volatile
  5066  0E97                     l1301:
  5067                           
  5068                           ;./I2C.c: 10:  SSPADD = ((4000000/4000)/100) - 1;
  5069  0E97  3009               	movlw	9
  5070  0E98  0093               	movwf	19	;volatile
  5071                           
  5072                           ;./I2C.c: 11:  SSPSTAT = 0x80;
  5073  0E99  3080               	movlw	128
  5074  0E9A  0094               	movwf	20	;volatile
  5075                           
  5076                           ;./I2C.c: 12:  SSPCON = 0x28;
  5077  0E9B  3028               	movlw	40
  5078  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  5079  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  5080  0E9E  0094               	movwf	20	;volatile
  5081  0E9F                     l59:
  5082  0E9F  0008               	return
  5083  0EA0                     __end_of_InitI2C:
  5084  007E                     btemp	set	126	;btemp
  5085  007E                     wtemp0	set	126
  5086                           
  5087                           	psect	config
  5088                           
  5089                           ;Config register CONFIG @ 0x2007
  5090                           ;	Oscillator Selection bits
  5091                           ;	FOSC = XT, XT oscillator
  5092                           ;	Watchdog Timer Enable bit
  5093                           ;	WDTE = OFF, WDT disabled
  5094                           ;	Power-up Timer Enable bit
  5095                           ;	PWRTE = ON, PWRT enabled
  5096                           ;	Brown-out Reset Enable bit
  5097                           ;	BOREN = ON, BOR enabled
  5098                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5099                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  5100                           ;	Data EEPROM Memory Code Protection bit
  5101                           ;	CPD = ON, Data EEPROM code-protected
  5102                           ;	Flash Program Memory Write Enable bits
  5103                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5104                           ;	In-Circuit Debugger Mode bit
  5105                           ;	DEBUG = 0x1, unprogrammed default
  5106                           ;	Flash Program Memory Code Protection bit
  5107                           ;	CP = OFF, Code protection off
  5108  2007                     	org	8199
  5109  2007  3E71               	dw	15985

Data Sizes:
    Strings     308
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     21      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    MSG_Term@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_36(CODE[2]), STR_35(CODE[17]), STR_34(CODE[17]), 

    SEND_MSJ@Msj	PTR unsigned char  size(2) Largest target is 20
		 -> STR_33(CODE[15]), STR_32(CODE[20]), STR_31(CODE[18]), STR_30(CODE[11]), 
		 -> STR_29(CODE[8]), STR_28(CODE[7]), STR_27(CODE[8]), STR_26(CODE[7]), 
		 -> STR_25(CODE[10]), STR_24(CODE[7]), STR_23(CODE[6]), STR_22(CODE[17]), 
		 -> STR_21(CODE[17]), STR_20(CODE[17]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_17(CODE[12]), STR_16(CODE[15]), STR_15(CODE[16]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[6]), 
		 -> STR_1(CODE[17]), 

    sp__Get_DS1307_RTC_Date	PTR unsigned char  size(1) Largest target is 4
		 -> pRTCArray(BANK0[4]), 

    sp__Get_DS1307_RTC_Time	PTR unsigned char  size(1) Largest target is 4
		 -> pRTCArray(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_deco_mes
    _RecibeALARMAS->_deco_mes
    _deco_mes->_SEND_MSJ
    _SEND_MSJ->_SEND_CMD
    _ESCRIBA_SEE->_I2C_Write_Byte
    _Read_Byte_From_DS1307_RTC->_I2C_Write_Byte
    _MSG_Term->_SEND_Tx
    _LCD_Init->_SEND_CMD

Critical Paths under _main in BANK0

    _main->_RecibeALARMAS

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   16660
                                             12 COMMON     1     1      0
                                             18 BANK0      3     3      0
                            _InitI2C
                           _LCD_Init
                           _MCU_Init
                           _MSG_Term
          _Read_Byte_From_DS1307_RTC
                      _RecibeALARMAS
                          _SEND_CHAR
                           _SEND_CMD
                           _SEND_MSJ
                          _UART_Init
                             _anti_r
                           _deco_mes
 ---------------------------------------------------------------------------------
 (1) _anti_r                                               2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RecibeALARMAS                                       18    18      0   10164
                                              0 BANK0     18    18      0
                           _Deco_num
                        _ESCRIBA_SEE
                          _SEND_CHAR
                           _SEND_CMD
                           _SEND_MSJ
                            _TECLADO
                            ___awdiv
                             ___bmul
                           _deco_mes
 ---------------------------------------------------------------------------------
 (1) _deco_mes                                             4     3      1    3146
                                              8 COMMON     4     3      1
                          _SEND_CHAR
                           _SEND_MSJ
 ---------------------------------------------------------------------------------
 (2) _SEND_MSJ                                             5     3      2    2642
                                              3 COMMON     5     3      2
                          _SEND_CHAR
                           _SEND_CMD
 ---------------------------------------------------------------------------------
 (3) _SEND_CHAR                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     700
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1516
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _TECLADO                                              4     4      0      95
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _ESCRIBA_SEE                                          2     1      1     522
                                              1 COMMON     2     1      1
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _Deco_num                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Read_Byte_From_DS1307_RTC                            3     3      0      68
                                              1 COMMON     3     3      0
                        _I2C_ReStart
                      _I2C_Read_Byte
                      _I2C_Send_NACK
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Byte                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MSG_Term                                             2     0      2     288
                                              1 COMMON     2     0      2
                            _SEND_Tx
 ---------------------------------------------------------------------------------
 (2) _SEND_Tx                                              1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              3 COMMON     2     2      0
                           _SEND_CMD
 ---------------------------------------------------------------------------------
 (3) _SEND_CMD                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitI2C
   _LCD_Init
     _SEND_CMD
   _MCU_Init
   _MSG_Term
     _SEND_Tx
   _Read_Byte_From_DS1307_RTC
     _I2C_ReStart
     _I2C_Read_Byte
     _I2C_Send_NACK
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Byte
   _RecibeALARMAS
     _Deco_num
     _ESCRIBA_SEE
       _I2C_Start
       _I2C_Stop
       _I2C_Write_Byte
     _SEND_CHAR
     _SEND_CMD
     _SEND_MSJ
       _SEND_CHAR
       _SEND_CMD
     _TECLADO
     ___awdiv
     ___bmul
     _deco_mes
       _SEND_CHAR
       _SEND_MSJ
   _SEND_CHAR
   _SEND_CMD
   _SEND_MSJ
   _UART_Init
   _anti_r
   _deco_mes

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Nov 27 13:00:21 2021

                                 pc 0002                      ___bmul@product 0072  
                __size_of_I2C_Start 000A                                  l70 0E5B  
                                l62 0E60                                  l71 0E5C  
                                l64 0E65                                  l65 0E66  
                                l74 0E6A                                  l59 0E9F  
                                l68 0E56                                  l76 0E6F  
                                l92 0EA5                                  l77 0E70  
                                l86 0E80                                  l94 0EA9  
                                l95 0EAF                                  l88 0E85  
                                l89 0E86                                  l98 0E74  
                                u90 0E8E                                  u91 0E8D  
                      ___awdiv@sign 0076                                  fsr 0004  
                               l100 0E79                                 l101 0E7B  
                               l200 00E1                                 l203 00E5  
                               l117 0FBE                                 l206 00E9  
                               l209 00ED                                 l313 07F4  
                               l162 0EC0                                 l171 0F88  
                               l180 0E88                                 l165 0F2E  
                               l238 0FFF                                 l174 0ED1  
                               l159 0EE4                                 l183 0E92  
                               l192 00A2                                 l177 0E52  
                               l273 0F57                                 l354 0EE6  
                               l267 0228                                 l189 0034  
                               l357 0EF7                                 l381 02ED  
                               l199 015A                                 l375 02AB  
                               l626 009B                                 l378 02CC  
                               l499 0F0C                                 u600 0EF7  
                               _PEN 048A                                 u601 0EF6  
                               _SEN 0488                                 u590 0EEC  
                               u591 0EEB                                 u940 0E65  
                               u941 0E64                                 u950 0E6F  
                               u951 0E6E                                 u960 0EA9  
                               u961 0EA8                                 u970 0F88  
                               u971 0F87                                 u980 0E5B  
                               u981 0E5A                __size_of_I2C_ReStart 000A  
                               fsr0 0004                                 indf 0000  
                I2C_Write_Byte@Byte 0070                                l1023 0E88  
                              l1025 0E8E                                l1301 0E97  
                              l2111 00C1                                l2103 00B4  
                              l1401 0E50                                l2105 00B8  
                              l2203 0FC0                                l2123 00F1  
                              l2115 00C6                                l2051 0EB1  
                              l2045 0ED3                                l2061 0EA1  
                              l2221 0FC9                                l2213 0FC5  
                              l2205 0FC1                                l2301 0F52  
                              l2141 0107                                l2133 0103  
                              l2125 00FF                                l2117 00CA  
                              l2109 00BD                                l2053 0EB6  
                              l2047 0ED8                                l2063 0EAA  
                              l2119 00DB                                l2311 0F04  
                              l2303 0EF9                                l2055 0EB8  
                              l2071 0F6C                                l3111 0319  
                              l2049 0EDA                                l2081 0E7C  
                              l2057 0E5D                                l2241 0FD3  
                              l2233 0FCF                                l2225 0FCB  
                              l2217 0FC7                                l2209 0FC3  
                              l2161 0111                                l2153 010D  
                              l2145 0109                                l2137 0105  
                              l2129 0101                                l2321 003A  
                              l2313 0F0B                                l2305 0EFA  
                              l2073 0F72                                l3113 0202  
                              l2083 0E71                                l2059 0E67  
                              l2251 0FD7                                l3115 0127  
                              l2091 009E                                l2331 004E  
                              l2323 003F                                l2307 0EFE  
                              l2075 0F78                                l2067 0F59  
                              l2077 0E53                                l2085 0E7A  
                              l3117 0FDF                                l2245 0FD5  
                              l2237 0FD1                                l2229 0FCD  
                              l2181 011B                                l2173 0117  
                              l2165 0113                                l2157 010F  
                              l2149 010B                                l2093 00A6  
                              l2341 0064                                l2333 0050  
                              l2325 0041                                l2317 0035  
                              l2309 0F02                                l2069 0F60  
                              l2261 0168                                l2501 050A  
                              l1621 0EEC                                l2191 011F  
                              l2351 0087                                l2343 0068  
                              l2335 0056                                l2327 0045  
                              l2319 0036                                l2271 019F  
                              l2263 0173                                l2511 0534  
                              l2503 0515                                l1391 0EC1  
                              l1623 0EF0                                l2441 0F16  
                              l2193 0159                                l2185 011D  
                              l2177 0119                                l2169 0115  
                              l2097 00AB                                l2089 009C  
                              l2345 0079                                l2337 0059  
                              l2353 008D                                l2329 004A  
                              l2281 01D6                                l2273 01AA  
                              l2265 017E                                l2257 015C  
                              l2601 06A0                                l2521 055E  
                              l2513 053F                                l2505 051F  
                              l1393 0ECD                                l1625 0EF1  
                              l1299 0E93                                l2443 0F1C  
                              l2451 0004                                l2371 0F8A  
                              l2099 00AF                                l2355 0092  
                              l2347 007F                                l2339 0060  
                              l2283 01E1                                l2275 01B5  
                              l2267 0189                                l2259 015D  
                              l2611 06C8                                l2603 06A6  
                              l2531 0588                                l2523 0569  
                              l2515 0549                                l2507 0529  
                              l1395 0ED0                                l1619 0EE5  
                              l2445 0F22                                l1397 0E4B  
                              l2453 0012                                l2381 0FA0  
                              l2373 0F8A                                l2293 0F30  
                              l2357 0097                                l2349 0080  
                              l2277 01C0                                l2269 0194  
                              l2621 0704                                l2613 06D2  
                              l2605 06AE                                l2541 05B2  
                              l2533 0593                                l2525 0573  
                              l2517 0553                                l2509 0530  
                              l2461 043C                                l2447 0F28  
                              l2439 0F0D                                l1399 0E4F  
                              l2455 0018                                l2391 0FBD  
                              l2383 0FA5                                l2279 01CB  
                              l2287 01FA                                l2631 0736  
                              l2623 070A                                l2615 06D8  
                              l2607 06B6                                l2551 05DC  
                              l2543 05BD                                l2535 059D  
                              l2527 057D                                l2519 055A  
                              l2471 0488                                l2463 0446  
                              l2457 0028                                l2449 0003  
                              l2385 0FAB                                l2377 0F8F  
                              l2297 0F35                                l2641 077C  
                              l2633 0740                                l2625 0712  
                              l2617 06E0                                l2609 06BD  
                              l2561 0606                                l2553 05E7  
                              l2545 05C7                                l2537 05A7  
                              l2529 0584                                l2481 04B6  
                              l2473 0492                                l2465 045E  
                              l2387 0FB3                                l2379 0F9A  
                              l2299 0F40                                l2651 07B2  
                              l2643 0782                                l2635 0756  
                              l2627 071A                                l2619 06E8  
                              l2571 0630                                l2563 0611  
                              l2555 05F1                                l2547 05D1  
                              l2539 05AE                                l2491 04E0  
                              l2483 04C1                                l2475 049C  
                              l2467 0470                                l2459 0436  
                              l2389 0FB8                                l2661 07EA  
                              l2653 07C8                                l2645 078C  
                              l2637 075C                                l2629 0730  
                              l2581 065A                                l2573 063B  
                              l2565 061B                                l2557 05FB  
                              l2549 05D8                                l2493 04EB  
                              l2485 04CB                                l2477 04A2  
                              l2469 047B                                l2655 07CE  
                              l2647 07A2                                l2639 0766  
                              l2591 0686                                l2583 0665  
                              l2575 0645                                l2567 0625  
                              l2559 0602                                l2495 04F5  
                              l2487 04D5                                l2479 04B0  
                              l2911 023D                                l2657 07D8  
                              l2649 07A8                                l2593 0689  
                              l2585 066F                                l2577 064F  
                              l2569 062C                                l2497 04FF  
                              l2489 04DC                                l2921 0273  
                              l2913 0247                                l2659 07E4  
                              l2595 068A                                l2587 0679  
                              l2579 0656                                l2499 0506  
                              l2931 028D                                l2923 0279  
                              l2915 0251                                l2597 0690  
                              l2589 0680                                l2941 02B6  
                              l2933 0297                                l2925 0282  
                              l2917 025B                                l2909 0229  
                              l2599 0698                                l2951 02E2  
                              l2943 02C1                                l2935 029C  
                              l2927 0288                                l2919 0265  
                              l2961 0308                                l2953 02E7  
                              l2945 02C6                                l2937 02A2  
                              l2929 028C                                l2971 03FE  
                              l2955 02F2                                l2947 02D1  
                              l2939 02B0                                l2963 030F  
                              l2973 0409                                l2957 02F8  
                              l2949 02D7                                l2965 0339  
                              l2975 0419                                l2967 03EE  
                              l2959 0303                                l2977 0421  
                              l2969 03F8                     __end_of_TECLADO 015B  
                              STR_1 086A                                STR_2 08EF  
                              STR_3 0903                                STR_4 08FB  
                              STR_5 0917                                STR_6 091B  
                              STR_7 0927                                STR_8 090B  
                              STR_9 0907                                u1000 0E85  
                              u1001 0E84                                u1010 0E79  
                              u1011 0E78                                u1100 00F1  
                              u1020 00AA                                u1101 00F0  
                              u1021 00A9                                u1030 00B3  
                              u1031 00B2                                u1120 0F40  
                              u1040 00BC                                u1121 0F3F  
                              u1041 00BB                                u1050 00C5  
                              u1210 0079                                u1130 0EFE  
                              u1051 00C4                                u1211 0078  
                              u1131 0EFD                                u1115 01E4  
                              u1060 00DB                                u1140 0F0B  
                              u1061 00DA                                u1205 0069  
                              u1141 0F0A                                u1310 0028  
                              u1070 00E5                                u1230 008D  
                              u1150 003A                                u1311 0027  
                              u1071 00E4                                u1231 008C  
                              u1215 0075                                u1151 0039  
                              u2007 0579                                u1080 00E9  
                              u1240 0092                                u1160 0045  
                              u1400 062C                                u1320 04DC  
                              u1081 00E8                                u1241 0091  
                              u1225 0081                                u1161 0044  
                              u1401 062B                                u2017 05A3  
                              u1321 04DB                                u1090 00ED  
                              u1170 0056                                u1410 0656  
                              u1330 0506                                u1091 00EC  
                              u1171 0055                                u2107 07AE  
                              u1411 0655                                u2027 05CD  
                              u1331 0505                                u1260 0F9A  
                              u1420 0680                                u1340 0530  
                              u1261 0F99                                u2117 07D4  
                              u1421 067F                                u2037 05F7  
                              u1341 052F                                u1190 0068  
                              u1430 0686                                u1350 055A  
                              u1191 0067                                u2127 07F0  
                              u1431 0685                                u2047 0621  
                              u1351 0559                                u1440 06BD  
                              u1360 0584                                u1185 005A  
                              u2137 0EBB                                u1505 07B7  
                              u1441 06BC                                u2057 064B  
                              u1361 0583                                u1370 05AE  
                              u2147 00D0                                u2067 0675  
                              u1371 05AD                                u1380 05D8  
                              u2157 00F5                                u2077 073C  
                              u1381 05D7                                u1390 0602  
                              u2167 0F11                                u2087 0762  
                              u1455 06F3                                u1391 0601  
                              u2177 0EDF                                u2097 0788  
                              u1465 071F                                u1475 0745  
                              u1485 076B                                u1805 0376  
                              u1495 0791                                u1815 039F  
                              u1825 03C8                                u1835 040C  
                              u1780 0288                                u1781 0287  
                              u1937 026D                                u1947 0429  
                              u1795 034D                                u1957 04AA  
                              u1967 04D1                                u1977 04FB  
                              u1987 0525                                _RCEN 048B  
                              u1997 054F                                _RSEN 0489  
                   __end_of_SEND_Tx 0E93                                _Temp 007D  
                              _main 0229                                btemp 007E  
                  __end_of_I2C_Stop 0E71                                start 0000  
                 ___bmul@multiplier 0073         ??_Read_Byte_From_DS1307_RTC 0071  
                   __end_of_InitI2C 0EA0    Read_Byte_From_DS1307_RTC@Address 0072  
            __size_of_RecibeALARMAS 03C2                    __end_of_LCD_Init 0F2F  
                __size_of_SEND_CHAR 0011                               ?_main 0070  
                             _ACKEN 048C                               _ACKDT 048D  
                   __end_of___awdiv 009C                               STR_10 090F  
                             STR_11 0913                               STR_12 091F  
                             STR_20 0848                               STR_13 0923  
                             STR_21 0859                               STR_14 08FF  
                             STR_30 08B5                               STR_22 0837  
                             STR_23 08F5                               STR_15 087B  
                             STR_31 0814                               STR_24 08E1  
                             STR_16 088B                               STR_32 0800  
                             STR_25 08C0                               STR_17 08A9  
                             STR_33 089A                               STR_18 092F  
                             STR_26 08E8                               STR_34 0826  
                             STR_35 0826                               STR_19 092B  
                             STR_27 08D2                               STR_36 0932  
                             STR_28 08DA                               STR_29 08CA  
                   ___awdiv@divisor 0070                    __end_of_MCU_Init 0E53  
                   ___awdiv@counter 0075                               _RCREG 001A  
                             _RCSTA 0018                    __end_of_SEND_CMD 0EE5  
                             _SPBRG 0099                               _PORTB 0006  
                             _PORTD 0008                    __end_of_SEND_MSJ 0F89  
                             _TRISB 0086                               _TRISC 0087  
                             _TRISD 0088                               _SSPIF 0063  
                             _TXREG 0019                               _TXSTA 0098  
                     SEND_CHAR@dato 0071                  __size_of_UART_Init 0011  
                  __end_of_MSG_Term 0035              __size_of_I2C_Read_Byte 000B  
                 __end_of_I2C_Start 0E67                               pclath 000A  
            __size_of_I2C_Send_NACK 000B                               status 0003  
                             wtemp0 007E                    __end_of_Deco_num 1000  
                   __initialization 07F5                        __end_of_main 0433  
                            ??_main 0032                           ??_TECLADO 0070  
         _Read_Byte_From_DS1307_RTC 0F89                           ??_SEND_Tx 0070  
              __size_of_ESCRIBA_SEE 0029                       SEND_MSJ@carac 0077  
                  ___awdiv@dividend 0072                       _RecibeALARMAS 0433  
                 __end_of_SEND_CHAR 0EC1                              _SSPADD 0093  
                            _SSPCON 0014                              _SSPBUF 0013  
                         ??_InitI2C 0070                    __end_of_deco_mes 0229  
                 __end_of_UART_Init 0ED2                              ___bmul 0EF8  
                     _I2C_Read_Byte 0E71                           ??___awdiv 0074  
                            _anti_r 0EE5                    ___awdiv@quotient 0077  
                     _I2C_Send_NACK 0E7C                           ?_I2C_Stop 0070  
                    ?_RecibeALARMAS 0070             __end_of__initialization 07FC  
                         ?_LCD_Init 0070                           ?_MCU_Init 0070  
               ___bmul@multiplicand 0070                           ?_SEND_CMD 0070  
                         ?_SEND_MSJ 0073                      ?_I2C_Read_Byte 0070  
                    __pcstackCOMMON 0070                           ?_MSG_Term 0071  
                    ?_I2C_Send_NACK 0070                         SEND_MSJ@POS 0076  
                       SEND_MSJ@Msj 0073                           ?_Deco_num 0070  
                        ??_I2C_Stop 0070                          __pbssBANK0 0035  
                        ??_LCD_Init 0073                         SEND_Tx@dato 0070  
                        ??_MCU_Init 0070                          ??_SEND_CMD 0070  
                        ??_SEND_MSJ 0075                          __pmaintext 0229  
                           ?___bmul 0070                          ??_MSG_Term 0073  
     Read_Byte_From_DS1307_RTC@Byte 0073                             ?_anti_r 0070  
           __size_of_I2C_Write_Byte 0010                             _ACKSTAT 048E  
                     ??_I2C_ReStart 0070                     ESCRIBA_SEE@addr 0072  
                   ESCRIBA_SEE@dato 0071                           MSG_Term@s 0071  
                        ??_Deco_num 0070                           ?_deco_mes 0078  
                           _TECLADO 009C                     ??_RecibeALARMAS 0020  
                           _SEND_Tx 0E87                             _SSPSTAT 0094  
                        __stringtab 0934                        TECLADO@VPTOD 0072  
__size_of_Read_Byte_From_DS1307_RTC 0036                        TECLADO@Tecla 0073  
                           _InitI2C 0E93                           _I2C_Start 0E5D  
                   ??_I2C_Read_Byte 0070                     __size_of___bmul 0015  
                   ??_I2C_Send_NACK 0070                             ___awdiv 0035  
                   __size_of_anti_r 0013                             __ptext1 0EE5  
                           __ptext2 0EC1                             __ptext3 0433  
                           __ptext4 015B                             __ptext5 0F58  
                           __ptext6 0EB0                             __ptext7 0EF8  
                           __ptext8 0035                             __ptext9 009C  
                        ??_deco_mes 0079                 __end_of_I2C_ReStart 0E5D  
                           main@Car 007C                end_of_initialization 07FC  
                        ?_I2C_Start 0070                           _SEND_CHAR 0EB0  
                      __pstringtext 0800                           _UART_Init 0EC1  
                         _PORTCbits 0007                           _PORTDbits 0008  
                     ??_ESCRIBA_SEE 0072                        Deco_num@dato 0072  
                         _TRISCbits 0087                   __size_of_I2C_Stop 000A  
                         _TXSTAbits 0098                   __size_of_LCD_Init 0022  
                        ?_SEND_CHAR 0070                   __size_of_MCU_Init 0008  
                 __size_of_SEND_CMD 0013                   __size_of_SEND_MSJ 0031  
                    __end_of___bmul 0F0D                      _I2C_Write_Byte 0EA0  
                        ?_UART_Init 0070                   __size_of_MSG_Term 0032  
                    __end_of_anti_r 0EF8                         _I2C_ReStart 0E53  
                      SEND_CMD@dato 0072                 start_initialization 07F5  
                 __size_of_Deco_num 0041                 __end_of_ESCRIBA_SEE 0F58  
                       ??_I2C_Start 0070              __end_of_I2C_Write_Byte 0EB0  
                          ??___bmul 0071                            ??_anti_r 0070  
                         _pRTCArray 0035                         __pbssCOMMON 007D  
                          ?_TECLADO 0070                           ___latbits 0002  
                     __pcstackBANK0 0020                            ?_SEND_Tx 0070  
                 __size_of_deco_mes 00CE                        deco_mes@addr 007B  
                          ?_InitI2C 0070                         ??_SEND_CHAR 0070  
                   ?_I2C_Write_Byte 0070                            ?___awdiv 0070  
                       ??_UART_Init 0070                           __pstrings 0934  
                          _I2C_Stop 0E67                         _ESCRIBA_SEE 0F2F  
             __end_of_RecibeALARMAS 07F5                            _LCD_Init 0F0D  
                          _MCU_Init 0E4B                            _PIR1bits 000C  
                          _SEND_CMD 0ED2                            _SEND_MSJ 0F58  
             __end_of_I2C_Read_Byte 0E7C                            _MSG_Term 0003  
                         anti_r@Car 0071               __end_of_I2C_Send_NACK 0E87  
                       __stringbase 0946                            _Deco_num 0FBF  
                  __size_of_TECLADO 00BF                    __size_of_SEND_Tx 000C  
                  __size_of_InitI2C 000D          ?_Read_Byte_From_DS1307_RTC 0070  
                  __size_of___awdiv 0067                        ?_I2C_ReStart 0070  
                __end_of__stringtab 0946                         deco_mes@Car 0078  
                          _deco_mes 015B                            __ptext10 0F2F  
                          __ptext11 0FBF                            __ptext20 0E87  
                          __ptext12 0F89                            __ptext21 0E4B  
                          __ptext13 0EA0                            __ptext22 0F0D  
                          __ptext14 0E67                            __ptext23 0ED2  
                          __ptext15 0E5D                            __ptext24 0E93  
                          __ptext16 0E7C                            __ptext17 0E71  
                          __ptext18 0E53                            __ptext19 0003  
                     __size_of_main 020A   __end_of_Read_Byte_From_DS1307_RTC 0FBF  
                  ??_I2C_Write_Byte 0070                           stringcode 093E  
                RecibeALARMAS@Datos 0026                        ?_ESCRIBA_SEE 0071  
                          stringtab 0934                   RecibeALARMAS@addr 0030  
                 RecibeALARMAS@aux1 0024                   RecibeALARMAS@aux2 0023  
                  RecibeALARMAS@Car 0031                    RecibeALARMAS@ctr 0025  
